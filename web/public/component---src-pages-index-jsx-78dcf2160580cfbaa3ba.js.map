{"version":3,"sources":["webpack:///./src/components/ErrorBoundary/index.jsx","webpack:///./src/components/SearchResults3/index.jsx","webpack:///./src/components/SearchBar3/style.js","webpack:///./src/components/SearchBar3/index.jsx","webpack:///./src/components/ThemeSwitch/style.js","webpack:///./src/components/ThemeSwitch/index.jsx","webpack:///./src/views/sectors/style.js","webpack:///./src/views/sectors/components/SectorPanel/style.js","webpack:///./src/views/sectors/components/SectorPanel/index.jsx","webpack:///./src/views/sectors/components/SectorLegend/style.js","webpack:///./src/views/sectors/components/SectorLegend/index.jsx","webpack:///./src/views/sectors/components/PieChart/style.js","webpack:///./src/views/sectors/components/PieChart/index.jsx","webpack:///./src/views/sectors/index.jsx","webpack:///./src/views/alerts/components/List/style.jsx","webpack:///./src/views/alerts/components/BasicGraph/style.js","webpack:///./src/views/alerts/components/BasicGraph/index.jsx","webpack:///./src/views/alerts/components/Row/style.js","webpack:///./src/views/alerts/components/Row/index.jsx","webpack:///./src/components/UnAuthorized/style.js","webpack:///./src/components/UnAuthorized/index.jsx","webpack:///./src/views/alerts/components/List/index.jsx","webpack:///./src/views/alerts/components/ListHeader/style.js","webpack:///./src/views/alerts/components/ListHeader/index.jsx","webpack:///./src/views/alerts/style.js","webpack:///./src/views/alerts/index.jsx","webpack:///./src/views/seasonality/style.js","webpack:///./src/views/seasonality/index.jsx","webpack:///./src/views/movers/style.js","webpack:///./src/views/movers/index.jsx","webpack:///./src/views/summary/components/TopChartVictory/style.js","webpack:///./src/views/summary/components/TopChartVictory/components.jsx","webpack:///./src/views/summary/components/TopChartVictory/index.jsx","webpack:///./src/views/summary/components/MoversListRow/style.js","webpack:///./src/views/summary/components/MoversListRow/index.jsx","webpack:///./src/views/summary/components/MoversList/style.js","webpack:///./src/views/summary/components/MoversList/index.jsx","webpack:///./src/views/summary/components/TopShortsListRow/style.js","webpack:///./src/views/summary/components/TopShortsListRow/index.jsx","webpack:///./src/views/summary/components/TopShortsList/style.js","webpack:///./src/views/summary/components/TopShortsList/index.jsx","webpack:///./src/views/summary/components/LegendCompanyCode/style.js","webpack:///./src/views/summary/components/LegendCompanyCode/index.jsx","webpack:///./src/views/summary/components/LegendCompanyLogo/style.js","webpack:///./src/views/summary/components/LegendCompanyLogo/index.jsx","webpack:///./src/views/summary/components/LegendCompanyPE/style.js","webpack:///./src/views/summary/components/LegendCompanyPE/index.jsx","webpack:///./src/views/summary/components/LegendCompanyMarketCap/style.js","webpack:///./src/views/summary/components/LegendCompanyMarketCap/index.jsx","webpack:///./src/views/summary/components/Legend/style.js","webpack:///./src/views/summary/components/Legend/index.jsx","webpack:///./src/views/summary/components/AlertRowGraph/style.js","webpack:///./src/views/summary/components/AlertRowGraph/index.jsx","webpack:///./src/views/summary/components/AlertRow/style.js","webpack:///./src/views/summary/components/AlertRow/index.jsx","webpack:///./src/views/summary/components/Alerts/style.js","webpack:///./src/views/summary/components/Alerts/index.jsx","webpack:///./src/views/summary/components/WindowPicker/style.js","webpack:///./src/components/Button/style.js","webpack:///./src/components/Button/index.jsx","webpack:///./src/views/summary/components/WindowPicker/index.jsx","webpack:///./src/views/summary/components/ChartOptions/style.js","webpack:///./src/views/summary/components/ChartOptions/index.jsx","webpack:///./src/views/summary/style.js","webpack:///./src/views/summary/index.jsx","webpack:///./src/views/dashboard/style.js","webpack:///./src/views/dashboard/index.jsx","webpack:///./src/pages/index.jsx","webpack:///./src/components/SearchResults3/style.js","webpack:///./src/config.js","webpack:///./src/services/elasticsearch/client.js","webpack:///./src/services/elasticsearch/queries.js"],"names":["ErrorBoundary_ErrorBoundary","ErrorBoundary","props","_this","_React$Component","call","this","state","hasError","componentDidCatch","error","info","setState","render","react_default","a","createElement","children","Component","components_ErrorBoundary","SearchResults3_ResultRow","style","onMouseOver","handleHover","selected","row","code","name","SearchResults3_SearchResults","SearchResults","rowLimit","selectedRow","componentDidMount","isLoading","onHover","_this2","resultsStructured","data","items","reduce","acc","item","hasOwnProperty","_source","industry","push","structuredResultsView","_arr","Object","entries","_i","length","_arr$_i","key","results","map","result","theme_context","Consumer","theme","hits","assign","href","SearchResults3","transitionStyles","entering","opacity","width","entered","exited","CustomInput","styled_components_browser_esm","input","withConfig","displayName","focused","duration","DropDown","div","searchResultsDropdownBoarder","ResultsWrapper","SearchBarWrapper","searchBarBackgroundFocused","searchBarBackgroundUnfocused","searchBarBorderFocused","searchBarBorderUnfocused","SearchBarIconWrapper","searchIconBackgroundFocused","searchIconBackgroundUnfocused","SearchBarClearIconWrapper","searchClearIconBackgroundFocused","searchClearIconBackgroundUnfocused","PrimaryColumn","SearchBar3_SearchBar","button","SearchBar","query","handleOutsideClick","bind","assertThisInitialized_default","escFunction","e","react_dom_default","findDOMNode","contains","target","prevState","handleSelect","event","keyCode","document","addEventListener","componentWillUnmount","removeEventListener","fetchResults","client","then","catch","onChange","_this3","value","onFocus","onClick","handleClear","onBlur","_this4","icon","fill","searchIconColorFocused","searchIconColorUnfocused","fontSize","color","type","searchClearIconColor","visibility","Transition_default","in","timeout","unmountOnExit","autoFocus","placeholder","SearchBar3","Wrapper","background","Header","SwitchWrapper","components_ThemeSwitch","es_switch","checked","changeTheme","checkedChildren","unCheckedChildren","style_Wrapper","SectorLegendWrapper","SectorPieChartWrapper","SectorPanelWrapper","SectorPanel_style_Wrapper","SectorPanel_SectorPanel","SectorPanel","components_SectorPanel","SectorLegend_style_Wrapper","SectorLegend_SectorLegend","SectorLegend","components_SectorLegend","PieChart_style_Wrapper","PieChart_SectorPieChart","SectorPieChart","viewBox","victory_pie","standalone","height","x","y","innerRadius","labelRadius","labels","PieChart","sectors_Sectors","Sectors","apiClient","sapi_client","inside","toggleEnterState","appear","sectors","List_style_Wrapper","BasicGraph_style_Wrapper","Chart","BasicGraph_BasicGraph","BasicGraph","getTickValues","Date","spark_data","minValue","Math","min","apply","maxValue","max","victory","victory_group","padding","top","left","right","bottom","containerComponent","victory_voronoi_container","voronoiDimension","radius","victory_line","labelComponent","victory_tooltip","d","stroke","changeDirection","downStroke","upStroke","strokeWidth","victory_scatter","size","datum","spark","build","limit","margin","components_BasicGraph","Row_style_Wrapper","widgetRowBackgroundColor","Name","Code","Percentage","PercentageCurrent","PercentageChanged","IndicatorUp","IndicatorDown","IndicatorWrapper","components_Row","className","current","changed","recent_history","UnAuthorized_style_Wrapper","Message","UnAuthorized_style_Button","components_UnAuthorized","components_List","ListHeader_style_Wrapper","MarketCap","style_Name","style_Code","style_Percentage","style_IndicatorWrapper","components_ListHeader","DashboardWrapper","alerts_style_Header","views_alerts","Alerts","rowSelected","rowHovered","handleClick","onSelect","getTopAlerts","getUserAlerts","style_DashboardWrapper","seasonality","Seasonality","movers_style_DashboardWrapper","movers","Movers","TopChartVictory_style_transitionStyles","Ypos","TooltipWrapper","svg","TopChartVictory_style_Wrapper","graphBackground","widgetBorderColor","ChartWrapper","PickerWrapper","OptionsWrapper","colors700","components_TopChartTooltip","TopChartTooltip","arguments","inheritsLoose_default","prototype","_this$props","selectedCode","dx","dy","orientation","p1_x","windowWidth","p1_y","p2_x","p2_y","cx","cy","r","rx","ry","textAnchor","date","components_TopChartVictory","TopChartVictory","handleWindowSizeChange","window","setTimeout","innerWidth","handleVoronoiSelect","points","onSelectCode","childName","handleLineHover","handleLineExit","lines","mode","dataKeys","index","eventKey","events","eventHandlers","onMouseOut","strokeOpacity","victory_area","fillOpacity","picker","options","victory_chart","onActivated","flyoutComponent","cornerRadius","flyoutStyle","victory_axis","tickCount","axis","axisColor","ticks","tickLabels","dependentAxis","tickFormat","t","round","tickLabelComponent","victory_label","HeaderWrapper","textColor","MoversListRow_style_Wrapper","widgetRowBorderColor","WrapperHovered","MoversListRow_style_Name","MoversListRow_style_Code","MoversListRow_style_Percentage","style_PercentageCurrent","style_PercentageChanged","style_IndicatorUp","style_IndicatorDown","MoversListRow_style_IndicatorWrapper","components_MoversListRow","header","change","MoversList_style_transitionStyles","MoversList_style_Wrapper","widgetBackgroundColor","MoversList_style_Header","More","components_MoversList","MoversList","handleRowSelect","handleMouseLeave","rows","slice","row_data","onMouseLeave","WrapperHeader","TopShortsListRow_style_Wrapper","style_WrapperHovered","TopShortsListRow_style_Name","TopShortsListRow_style_Code","Percent","TopShortsListRow","headerView","rowView","isHovered","TopShortsList_style_transitionStyles","TopShortsList_style_Wrapper","TopShortsList_style_Header","style_More","components_TopShortsList","TopShortsList","hovered","LegendCompanyCode_style_Wrapper","LegendCompanyCode_style_Code","LegendCompanyCode_style_Header","components_LegendCompanyCode","LegendCompanyLogo_style_Wrapper","Image","img","components_LegendCompanyLogo","LegendCompanyLogo","dimensions","onImgLoad","_ref","offsetHeight","offsetWidth","onComponentWillMount","onLoad","src","logo","LegendCompanyPE_style_Wrapper","PE","LegendCompanyPE_style_Header","components_LegendCompanyPE","pe","LegendCompanyMarketCap_style_Wrapper","LegendCompanyMarketCap_style_Header","style_Chart","components_LegendCompanyMarketCap","LegendCompanyMarketCap","text","fontWeight","fontFamily","victory_container","responsive","getFullYear","Legend_style_transitionStyles","Legend_style_Wrapper","UnselectedWrapper","CompanySector","CompanyName","components_Legend","Legend","componentDidUpdate","prevProps","getStockSummary","getStockLogo","metadata","sector","marketCap","AlertRowGraph_style_Chart","components_AlertRowGraph","AlertRowGraph","style_HeaderWrapper","AlertRow_style_Wrapper","AlertRow_style_WrapperHovered","Graph","AlertRow_style_Name","AlertRow_style_Code","AlertRow_style_Percentage","AlertRow_style_PercentageCurrent","AlertRow_style_PercentageChanged","AlertRow_style_IndicatorUp","AlertRow_style_IndicatorDown","AlertRow_style_IndicatorWrapper","components_AlertRow","Alerts_style_transitionStyles","Alerts_style_Wrapper","Alerts_style_Header","HeaderRow","Alerts_style_More","Rows","components_Alerts","alerts","alert","WindowPicker_style_Wrapper","Button_style_Wrapper","buttonSelected","buttonUnselected","components_Button","components_WindowPicker","selectedOption","buttons","values","ChartOptions_style_Wrapper","ChartOptions_style_Button","style_OptionsWrapper","open","OptionHeader","radioStyle","display","lineHeight","RadioButton","es_radio","Button","RadioGroup","Group","ChartOptions_Options","onOptionsChange","defaultValue","buttonStyle","components_ChartOptions","ChartOptions","optionsArea","createRef","onComponentDidUnmount","handleOptionsChange","v","onChartOptionChange","SummaryWrapper","summary","Summary","selectedWindowOption","selectedChartOption","handleWindowOptionSelected","handleChartOptionChange","handleSelectCode","_this$state","getTopShortsList","getTopShorts","getMovers","dashboard_style_DashboardWrapper","ThemeWrapper","dashboard_style_HeaderWrapper","style_SearchBarWrapper","DashboardNavbarWrapper","NavBarCollapseButton","ContentWrapper","dashboard","menu","SubMenu","Dashboard","toggleCollapsed","collapsed","getView","selection","Provider","Logo","es_button","inlineCollapsed","defaultOpenKeys","selectedKeys","Item","_templateObject","__webpack_exports__","__webpack_require__","NoResults","ResultRowWrapper","ResultRowIndustryHeader","ResultsShowMore","ResultRowCode","ResultRowName","SearchResultsWrapper","styled_components__WEBPACK_IMPORTED_MODULE_0__","searchResultsMoreBackgroundColor","searchResultsMoreColor","elasticsearchConfig","hostname","NODE_ENV","PUBLIC_DIR","BUILD_STAGE","GATSBY_BUILD_STAGE","ELASTICSEARCH_PROXY_MODE","ELASTICSEARCH_PROXY_HOST","ELASTICSEARCH_PROXY_PORT","ELASTICSEARCH_PROXY_PREFIX","authentication","username","password","parseResults","response","status","total","max_score","checkStatus","Error","statusText","search","searchString","path","session","axios_default","create","baseURL","auth","headers","Content-Type","body","bool","should","match_phrase_prefix","max_expansions","slop","match","fuzziness","operator","prefix_length","term","code.raw","boost","searchQuery","post"],"mappings":"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","file":"component---src-pages-index-jsx-78dcf2160580cfbaa3ba.js","sourcesContent":["import React from 'react';\n/**\n * Generic ErrorBoundary handler. Will catch error and return a basic respons message\n * TODO:\n *  * Extend the plesantry of the error message and perhaps direct to help page etc\n *  * improve verbosity of logging\n * \n * \n * \n * \n */\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    componentDidCatch(error, info) {\n      // Display fallback UI\n      this.setState({ hasError: true });\n      // You can also log the error to an error reporting service\n      console.log(error, info);\n    }\n  \n    render() {\n      if (this.state.hasError) {\n        // You can render any custom fallback UI\n        return <h1>Ooops. Something went wrong.</h1>;\n      }\n      return this.props.children;\n    }\n  }\n\n  export default ErrorBoundary;","import React from 'react';\nimport {\n    ResultRowIndustryHeader,\n    ResultsShowMore,\n    ResultRowName,\n    ResultRowCode,\n    ResultRowWrapper,\n    SearchResultsWrapper,\n    NoResults,\n} from './style';\n\nimport {ThemeContext} from '../../theme-context';\nconst ResultRow = props => (\n    <ResultRowWrapper onMouseOver={props.handleHover} selected={props.selected}>\n        <ResultRowCode>{props.row.code}</ResultRowCode>\n        <ResultRowName>{props.row.name}</ResultRowName>\n    </ResultRowWrapper>\n);\nclass SearchResults extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rowLimit: 10,\n            selectedRow: null,\n        };\n    }\n    componentDidMount() {\n        this.setState({isLoading: true});\n    }\n    onHover(code) {\n        console.log(code);\n        this.setState({selectedRow: code});\n    }\n    render() {\n        const resultsStructured = this.props.data\n            ? this.props.data.items.reduce((acc, item) => {\n                  acc.hasOwnProperty(item._source.industry)\n                      ? acc[item._source.industry].push(item)\n                      : (acc[item._source.industry] = [item]);\n                  return acc;\n              }, {})\n            : null;\n        const structuredResultsView = [];\n        if (this.props.data) {\n            for (const [key, results] of Object.entries(resultsStructured)) {\n                structuredResultsView.push(\n                    <ResultRowIndustryHeader>{key}</ResultRowIndustryHeader>,\n                );\n                results.map(result =>\n                    structuredResultsView.push(\n                        <ResultRow\n                            handleHover={() =>\n                                this.onHover(result._source.code)\n                            }\n                            selected={\n                                this.state.selectedRow === result._source.code\n                            }\n                            key={result._source.code}\n                            row={result._source}\n                        />,\n                    ),\n                );\n            }\n        }\n        const resultsView = this.props.data ? (\n            this.props.data.items.map(result => (\n                <ResultRow\n                    handleHover={() => this.onHover(result._source.code)}\n                    selected={this.state.selectedRow === result._source.code}\n                    key={result._source.code}\n                    row={result._source}\n                />\n            ))\n        ) : (\n            <NoResults>No Results Found</NoResults>\n        );\n        console.log(structuredResultsView);\n        return (\n            <ThemeContext.Consumer>\n                {theme => (\n                    <SearchResultsWrapper>\n                        {structuredResultsView.length > 0 ? (\n                            structuredResultsView\n                        ) : (\n                            <NoResults>No Results Found</NoResults>\n                        )}\n                        {this.props.data ? (\n                            this.props.data.hits > this.state.rowLimit ? (\n                                <ResultsShowMore {...theme} href=\"/search\">\n                                    Show More Results\n                                </ResultsShowMore>\n                            ) : null\n                        ) : null}\n                    </SearchResultsWrapper>\n                )}\n            </ThemeContext.Consumer>\n        );\n    }\n}\n\nexport default SearchResults;\n","import styled from 'styled-components';\n\nexport const duration = 100;\n\nexport const transitionStyles = {\n    entering: {opacity: 0, width: 0},\n    entered: {opacity: 1, width: 310},\n    exited: {opacity: 0, width: 0},\n};\n\nexport const CustomInput = styled.input`\n    font-size: 1em;\n    text-align: left;\n    height: 50px;\n    border-radius: ${props => (props.focused ? 15 : 15)}px;\n    background: transparent;\n    position: absolute;\n    z-index: 20;\n    padding: 0.5em;\n    padding-right: 45px;\n    padding-left: 55px;\n    display: block;\n    width: ${props => (props.focused ? `100%` : `100%`)};\n    transition: ${props => `${props.duration}ms ease-in`};\n    transition-property: width, opacity, transform;\n    /* transition: opacity 250ms 500ms, visibility 250ms 500ms; */\n    outline: none;\n    border: none;\n    &:focus {\n        outline: none;\n    }\n`;\nexport const DropDown = styled.div`\n    position: absolute;\n    background: white;\n    z-index: 2;\n    width: 101%;\n    border: 1px solid ${props => props.searchResultsDropdownBoarder};\n    -webkit-box-shadow: 4px 4px 20px -4px rgba(0, 0, 0, 0.75);\n    -moz-box-shadow: 4px 4px 20px -4px rgba(0, 0, 0, 0.75);\n    box-shadow: 4px 4px 20px -4px rgba(0, 0, 0, 0.75);\n    border-radius: 5px;\n    margin-left: -2px;\n    margin-top: -4px;\n    display: grid;\n    grid-template-rows: 60px 1fr;\n    grid-template-areas:\n        'searchbar'\n        'results';\n`;\n\nexport const ResultsWrapper = styled.div`\n    grid-area: results;\n`;\n\nexport const SearchBarWrapper = styled.div`\n    display: flex;\n    height: 50px;\n    align-items: stretch;\n    background: ${props =>\n        props.focused\n            ? props.searchBarBackgroundFocused\n            : props.searchBarBackgroundUnfocused};\n    border: 2px solid\n        ${props =>\n            props.focused\n                ? props.searchBarBorderFocused\n                : props.searchBarBorderUnfocused};\n    border-radius: ${props => (props.focused ? 15 : 50)}px;\n    width: 580px;\n    transition-duration: 0.5s;\n    position: absolute;\n    top: 30px;\n    z-index: 20;\n`;\n\nexport const SearchBarIconWrapper = styled.div`\n    position: absolute;\n    border-radius: 50px;\n    display: grid;\n    background: ${props =>\n        props.focused\n            ? props.searchIconBackgroundFocused\n            : props.searchIconBackgroundUnfocused};\n    align-items: center;\n    width: ${props => (props.focused ? 30 : 35)}px;\n    height: ${props => (props.focused ? 30 : 35)}px;\n    align-self: center;\n    margin-left: 10px;\n    transition-duration: 150ms;\n    z-index: 22;\n`;\nexport const SearchBarClearIconWrapper = styled.div`\n    position: absolute;\n    border-radius: 50px;\n    display: grid;\n    background: ${props =>\n        props.focused\n            ? props.searchClearIconBackgroundFocused\n            : props.searchClearIconBackgroundUnfocused};\n    align-items: center;\n    align-self: center;\n    margin-left: 555px;\n    transition-duration: 150ms;\n    z-index: 22;\n`;\n\nexport const PrimaryColumn = styled.div`\n    flex: 2;\n    width: 100%;\n    display: flex;\n    border-radius: 50px;\n    background: transparent;\n`;\nexport const SecondaryColumn = styled.div`\n    flex: 1;\n`;\nexport const Button = styled.button`\n    display: flex;\n    justify-content: center; /* align horizontal */\n    align-items: center; /* align vertical */\n    outline: 0;\n    height: 100%;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Transition from 'react-transition-group/Transition';\nimport {search} from 'src/services/elasticsearch/client';\nimport SearchResults from '../SearchResults3';\nimport {ThemeContext} from '../../theme-context';\nimport {Icon} from 'antd';\nimport {\n    SearchBarWrapper,\n    SearchBarIconWrapper,\n    SearchBarClearIconWrapper,\n    CustomInput,\n    PrimaryColumn,\n    DropDown,\n    ResultsWrapper,\n    transitionStyles,\n    duration,\n} from './style';\n\n/**\n * SearchBar\n * THis component is responsible for the rendering of the searchbar view at the top of the header bar. It provides a dropdown list of items\n * matching the elastically searched results entering into the search bar\n * interacts with elastisearch for querying\n * TODO:\n * * handle mobile compaction of navbar component\n *\n */\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: '',\n            error: false,\n            focused: false,\n            results: null,\n            isLoading: false,\n        };\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\n        this.escFunction = this.escFunction.bind(this);\n    }\n    handleOutsideClick(e) {\n        const searchBar = ReactDOM.findDOMNode(this);\n        if (searchBar.contains(e.target)) {\n            this.setState(prevState => ({\n                focused: true,\n            }));\n            return false;\n        }\n        this.handleSelect(e);\n        this.setState(prevState => ({\n            focused: false,\n        }));\n    }\n    escFunction(event) {\n        if (event.keyCode === 27) {\n            this.setState(prevState => ({\n                focused: false,\n            }));\n        }\n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.escFunction, false);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.escFunction, false);\n    }\n    handleSelect(e) {\n        if (!this.state.focused) {\n            // attach/remove event handler\n            document.addEventListener('click', this.handleOutsideClick, false);\n            this.setState(prevState => ({\n                focused: true,\n            }));\n        } else {\n            const searchBar = ReactDOM.findDOMNode(this);\n            if (searchBar.contains(e.target)) {\n                this.setState(prevState => ({\n                    focused: true,\n                }));\n            } else {\n                document.removeEventListener(\n                    'click',\n                    this.handleOutsideClick,\n                    false,\n                );\n            }\n        }\n    }\n    fetchResults() {\n        search(this.state.query)\n            .then(result =>\n                this.setState({\n                    results: result,\n                    isLoading: false,\n                }),\n            )\n            .catch(error =>\n                this.setState({\n                    error,\n                    isLoading: false,\n                }),\n            );\n    }\n\n    onChange(e) {\n        this.setState({query: e.target.value}, () => {\n            if (this.state.query && this.state.query.length > 1) {\n                this.fetchResults();\n            }\n        });\n    }\n    onFocus() {\n        // this.setState(prevState => ({\n        //     focused: !prevState.focused,\n        // }));\n    }\n    onClick() {\n        this.setState({focused: true});\n        // this.onFocus();\n    }\n    handleClear() {\n        this.setState({query: ''});\n    }\n    onBlur() {\n        if (this.state.query !== '') {\n            this.setState({focused: false});\n        } else {\n            this.setState(prevState => ({\n                focused: !prevState.focused,\n            }));\n        }\n    }\n\n    render() {\n        console.log(this.state.results);\n        return (\n            <ThemeContext.Consumer>\n                {theme => (\n                    <SearchBarWrapper\n                        onClick={e => this.handleSelect(e)}\n                        {...theme}\n                        {...this.state}>\n                        <PrimaryColumn {...theme}>\n                            <SearchBarIconWrapper {...theme} {...this.state}>\n                                <Icon\n                                    fill={\n                                        this.state.focused\n                                            ? theme.searchIconColorFocused\n                                            : theme.searchIconColorUnfocused\n                                    }\n                                    style={{\n                                        fontSize: this.state.focused ? '20px' : '25px',\n                                        color: this.state.focused\n                                            ? theme.searchIconColorFocused\n                                            : theme.searchIconColorUnfocused,\n                                    }}\n                                    type=\"search\"\n                                    theme=\"filled\"\n                                />\n                            </SearchBarIconWrapper>\n                            <SearchBarClearIconWrapper\n                                onClick={() => this.handleClear()}>\n                                <Icon\n                                    fill={theme.searchClearIconColor}\n                                    style={{\n                                        fontSize: '15px',\n                                        visibility:\n                                            this.state.query !== '' &&\n                                            this.state.focused\n                                                ? 'visible'\n                                                : 'hidden',\n                                        color: theme.searchClearIconColor,\n                                    }}\n                                    type=\"close\"\n                                    theme=\"filled\"\n                                />\n                            </SearchBarClearIconWrapper>\n                            <Transition\n                                in={this.state.focused}\n                                timeout={duration}\n                                unmountOnExit>\n                                {state => (\n                                    <CustomInput\n                                        autoFocus\n                                        {...theme}\n                                        duration={duration}\n                                        {...transitionStyles[state]}\n                                        type=\"text\"\n                                        placeholder={\n                                            this.state.focused\n                                                ? 'Search for company'\n                                                : ''\n                                        }\n                                        onFocus={() => this.onFocus()}\n                                        onChange={e => this.onChange(e)}\n                                        value={this.state.query}\n                                    />\n                                )}\n                            </Transition>\n                            {this.state.query && this.state.focused ? (\n                                <DropDown {...theme}>\n                                    <ResultsWrapper>\n                                        <SearchResults\n                                            data={this.state.results}\n                                        />\n                                    </ResultsWrapper>\n                                </DropDown>\n                            ) : null}\n                        </PrimaryColumn>\n                    </SearchBarWrapper>\n                )}\n            </ThemeContext.Consumer>\n        );\n    }\n}\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    background: ${props => props.background};\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    align-items: center;\n`;\nexport const Header = styled.div`\n    color: ${props => props.color};\n    font-weight: bold;\n    font-size: 20px;\n    font-family: Avenir Next, sans-serif;\n`;\nexport const SwitchWrapper = styled.div`\n    margin-top: 10px;\n    margin-bottom: 10px;\n    width: 60px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n","import React from 'react';\nimport {Switch} from 'antd';\nimport 'antd/dist/antd.css';\nimport {SwitchWrapper, Wrapper, Header} from './style';\n/**\n * Renders ThemePicker widget, allowing users to select between different theme modes\n */\nconst ThemeSwitch = props => (\n    <Wrapper {...props.theme}>\n        <Header {...props.theme}>Theme</Header>\n        <SwitchWrapper>\n            <Switch\n                style={{width: '100%'}}\n                checked={props.checked === 'dark'}\n                onChange={props.changeTheme}\n                checkedChildren=\"Dark\"\n                unCheckedChildren=\"Light\"\n            />\n        </SwitchWrapper>\n    </Wrapper>\n);\n\nexport default ThemeSwitch;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    background: ${props => props.background};\n    color: ${props => props.color};\n    display: grid;\n    grid-gap: 13px;\n    grid-template-columns: repeat(2, 1fr) 800px;\n    @media (max-width: 901px) {\n        grid-template-columns: repeat(2, 1fr) 4fr;\n    }\n    grid-template-rows: 600px 1fr;\n    grid-template-areas:\n        'sector-legend sector-legend sector-piechart'\n        'sector-panel sector-panel sector-panel';\n`;\n\nexport const duration = 300;\n\nexport const transitionStyles = {\n    entering: {opacity: 0},\n    entered: {opacity: 1},\n    exited: {opacity: 0},\n};\n\nexport const SectorLegendWrapper = styled.div`\n    grid-area: sector-legend;\n`;\nexport const SectorPieChartWrapper = styled.div`\n    grid-area: sector-piechart;\n`;\nexport const SectorPanelWrapper = styled.div`\n    grid-area: sector-panel;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    justify-content: center;\n    text-align: center;\n    vertical-align: middle;\n    display: grid;\n    height: 100%;\n    grid-gap: 5px;\n    grid-template-rows: 100px 100px;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-areas:\n        'company-logo company-name company-name company-name'\n        'company-logo company-code company-sector company-pe';\n    background: gray;\n    border-radius: 10px;\n`;\n","import React from 'react';\nimport {\n    Wrapper} from './style';\n\n/**\n * Top Navbar responsible for rendering the basic site-map layout including: blog | about | disclaimer etc\n * Will also manage the implementation of the navbar collapse on mobile devices i.e transition to burger and burger animation on open/close etc.\n * TODO:\n * * handle mobile compaction of navbar component\n *\n */\nclass SectorPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return <Wrapper>sector panel\n        </Wrapper>;\n    }\n}\n\nexport default SectorPanel;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    justify-content: center;\n    text-align: center;\n    vertical-align: middle;\n    display: grid;\n    height: 100%;\n    grid-gap: 5px;\n    grid-template-rows: 100px 100px;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-areas:\n        'company-logo company-name company-name company-name'\n        'company-logo company-code company-sector company-pe';\n    background: gray;\n    border-radius: 10px;\n`;\n","import React from 'react';\nimport {\n    Wrapper} from './style';\n\n/**\n * Top Navbar responsible for rendering the basic site-map layout including: blog | about | disclaimer etc\n * Will also manage the implementation of the navbar collapse on mobile devices i.e transition to burger and burger animation on open/close etc.\n * TODO:\n * * handle mobile compaction of navbar component\n *\n */\nclass SectorLegend extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return <Wrapper>sector legend\n        </Wrapper>;\n    }\n}\n\nexport default SectorLegend;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    justify-content: center;\n    text-align: center;\n    vertical-align: middle;\n    display: grid;\n    height: 100%;\n    width: 100%;\n    grid-gap: 5px;\n    grid-template-rows: 100px 100px;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-areas:\n        'company-logo company-name company-name company-name'\n        'company-logo company-code company-sector company-pe';\n    background: gray;\n    border-radius: 10px;\n`;\n","import React from 'react';\nimport { VictoryPie } from 'victory';\nimport {\n    Wrapper} from './style';\n\n/**\n * Top Navbar responsible for rendering the basic site-map layout including: blog | about | disclaimer etc\n * Will also manage the implementation of the navbar collapse on mobile devices i.e transition to burger and burger animation on open/close etc.\n * TODO:\n * * handle mobile compaction of navbar component\n *\n */\nclass SectorPieChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return <Wrapper>\n             <svg viewBox=\"0 0 400 400\">\n             <VictoryPie\n                standalone={false}\n                width={400} height={400}\n                data={[\n                    { x: 1, y: 120 }, { x: 2, y: 150 }, { x: 3, y: 75 }\n                ]}\n                innerRadius={68} labelRadius={100}\n                style={{ labels: { fontSize: 20, fill: \"white\" } }}\n            />\n            <VictoryPie\n                standalone={false}\n                width={200} height={200}\n                data={[\n                    { x: 1, y: 120 }, { x: 2, y: 150 }, { x: 3, y: 75 }\n                ]}\n                innerRadius={68} labelRadius={100}\n                style={{ labels: { fontSize: 20, fill: \"white\" } }}\n            />\n             </svg>\n            \n        </Wrapper>;\n    }\n}\n\nexport default SectorPieChart;\n","import React from 'react'\nimport Transition from 'react-transition-group/Transition'\nimport ShortedAPI from '../../services/sapi/client'\nimport {\n  Wrapper,\n  themes,\n  duration,\n  transitionStyles,\n  SectorLegendWrapper,\n  SectorPieChartWrapper,\n  SectorPanelWrapper\n} from './style'\nimport SectorPanel from './components/SectorPanel'\nimport SectorLegend from './components/SectorLegend'\nimport PieChart from './components/PieChart'\n\n/**\n * View:Sectors\n * Shows the sector breakdown view. This should provide an interface for viewing top shorted stocks in a given sector and their relative sizing to other sectors and other stocks within the same sector.\n * THis can be achieved through a reactive ListView + PieChart, the piechart would show market breakdown, idally also enabled a second layer for specific stock within the sector breakdown.@abstract\n * The listview would be tapped for each of the core sectors\n * TODO:\n * * Pot\n * * add graph integration via victory etc.\n * * add legend component for on-select animation/effect\n * * Should show comparison and contextualisation around relative goods for the given sector. For example iron-ore price, currency etc.\n *\n */\n\nclass Sectors extends React.Component {\n  constructor (props) {\n    super(props)\n    this.apiClient = new ShortedAPI()\n    this.state = {\n      inside: false\n    }\n  }\n  componentDidMount () {\n    this.toggleEnterState()\n  }\n\n  toggleEnterState () {\n    this.setState({ inside: true })\n  }\n\n  render () {\n    return (\n      <Transition timeout={duration} in appear>\n        {state => {\n          return (\n            <Wrapper {...this.props.theme}>\n              <SectorLegendWrapper>\n                <SectorLegend />\n              </SectorLegendWrapper>\n              <SectorPieChartWrapper><PieChart /></SectorPieChartWrapper>\n              <SectorPanelWrapper><SectorPanel /></SectorPanelWrapper>\n            </Wrapper>\n          )\n        }}\n      </Transition>\n    )\n  }\n}\n\nexport default Sectors\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n`","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    background: transparent;\n    border-radius: 5px;\n    display: flex;\n    height: 130px;\n\n`\nexport const Header = styled.div`\n    grid-area: header;\n    padding-top: 3px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n`;\nexport const Chart = styled.div`\n    grid-area: chart;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    height: 120px;\n    width: 300px;\n`;\n","import React from 'react';\nimport {\n    VictoryChart,\n    VictoryAxis,\n    VictoryLabel,\n    VictoryContainer,\n    VictoryGroup,\n    VictoryVoronoiContainer,\n    VictoryTooltip,\n    VictoryLine,\n    VictoryScatter,\n} from 'victory';\nimport { ThemeContext } from '../../../../theme-context';\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\nimport {Wrapper, Header, Chart} from './style';\n\n/**\n * LegendCompanyMarketCap\n *\n */\nclass BasicGraph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    getTickValues() {\n        return [\n            new Date(2002, 1, 1),\n            new Date(2017, 1, 1),\n            new Date(2018, 1, 1),\n        ];\n    }\n\n    render() {\n        const spark_data = this.props.data.map((value) => value.y)\n        const minValue = Math.min(...spark_data)\n        const maxValue = Math.max(...spark_data)\n        if (this.props.victory) {\n            return (\n            <ThemeContext.Consumer>\n                {theme => (\n                <Wrapper>\n                    <Chart>\n                        <VictoryGroup\n                            padding={{top: 0, left: 40, right: 20, bottom: 0}}\n                            height={90}\n                            width={580}\n                            containerComponent={\n                                <VictoryVoronoiContainer\n                                    voronoiDimension=\"x\"\n                                    radius={5}\n                                    padding={5}\n                                 \n                                />\n                              }\n                            >\n                            <VictoryLine\n                                labelComponent={<VictoryTooltip />}\n                                labels={(d) => d.y}\n                                padding={{top: 0, left: 40, right: 20, bottom:0}}\n                                data={this.props.data}\n                                style={{\n                                    data: {\n                                        stroke: this.props.changeDirection ? theme.downStroke : theme.upStroke,\n                                        strokeWidth: 3,\n                                    },\n                                }}\n                            />\n                            <VictoryScatter\n                                labelComponent={<VictoryTooltip />}\n                                labels={(d) => d.y}\n                                data={this.props.data}\n                                size={(datum) => (datum.y === minValue || datum.y === maxValue) ? 5 : 0}\n                                style={{ data: {\n                                    fill: this.props.changeDirection ?  theme.downStroke : theme.upStroke\n                                }}}\n                            />\n                        </VictoryGroup>\n                    </Chart>\n                </Wrapper>)}\n            </ThemeContext.Consumer>)\n        } else if (this.props.spark) {\n            const spark_data = this.props.data.map((value) => value.y)\n            console.log(spark_data)\n            return (\n                <Wrapper>\n                    <Chart>\n                        <Sparklines data={spark_data} limit={20} width={200} height={100} margin={5}>\n                        <SparklinesLine color=\"blue\" />\n                        </Sparklines>\n                    </Chart>\n                </Wrapper>\n            )\n        }\n    }\n}\n\nexport default BasicGraph;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    @media only screen and (min-width: 1024px) {\n        grid-template-columns: 120px 1fr 1fr 100px 70px 1fr;\n        grid-template-rows: repeat(2, 1fr);\n        grid-template-areas:\n            'code name name percentage indicator graph'\n            'code name name percentage indicator graph';\n    }\n    @media only screen and (min-width: 1280px) {\n        grid-template-columns: 120px 1fr 130px 200px 1fr;\n        grid-template-rows: repeat(2, 1fr);\n        grid-template-areas:\n            'code name percentage indicator graph'\n            'code name percentage indicator graph';\n    };\n   \n    margin: 6px;\n    margin-left: 7px;\n    margin-right: 7px;\n    height: 140px;\n    background: #e2e2e2;\n    background: ${props => props.widgetRowBackgroundColor};\n    padding-top: 4px;\n    padding-bottom: 4px;\n`;\n\nexport const Name = styled.div`\n    grid-area: name;\n    display: flex;\n    font-size: 30px;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    font-family: Avenir Next, sans-serif;\n`;\n\nexport const Code = styled.div`\n    grid-area: code;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    padding-left: 10px;\n    .code {\n        background-color: gray;\n        width: 60px;\n        height: 45px;\n        display: flex;\n        font-size: 21px;\n\n        font-family: Avenir Next, sans-serif;\n        flex-direction: column;\n        justify-content: center;\n        vertical-align: middle;\n        text-align: center;\n        margin-left: 5px;\n    }\n`;\nexport const Percentage = styled.div`\n    grid-area: percentage;\n    display: grid;\n    grid-template-rows: repeat(2, 1fr);\n    grid-gap: 1px;\n    grid-template-areas:\n        'current'\n        'changed';\n`;\nexport const PercentageCurrent = styled.div`\n    grid-area: current;\n    align-self: flex-end;\n    text-align: right;\n    font-size: 1.9vw;\n    font-weight: bold;\n    font-family: Avenir Next, sans-serif;\n`;\nexport const PercentageChanged = styled.div`\n    grid-area: changed;\n    text-align: right;\n    margin-left: 40px;\n    font-weight: bold;\n    font-size: 1.2vw;\n    font-family: Avenir Next, sans-serif;\n    color: ${props => (props.value > 0 ? `red` : `green`)};\n    padding-bottom: 5px;\n`;\nexport const IndicatorUp = styled.div`\n    width: 0;\n    height: 0;\n    border-left: 30px solid transparent;\n    border-right: 30px solid transparent;\n    border-bottom: 30px solid red;\n`;\nexport const IndicatorDown = styled.div`\n    width: 0;\n    height: 0;\n    border-left: 30px solid transparent;\n    border-right: 30px solid transparent;\n    border-top: 30px solid green;\n`;\n\nexport const IndicatorWrapper = styled.div`\n    grid-area: indicator;\n    @media (min-width: 1024px) {\n        display: grid;\n    }\n    display: none;\n    flex-direction: column;\n    text-align: center;\n    vertical-align: middle;\n    justify-content: center;\n    margin: auto;\n    padding: auto;\n`;\nexport const GraphWrapper = styled.div`\n    grid-area: graph;\n`\n","import React from 'react';\nimport BasicGraph from '../BasicGraph';\nimport { ThemeContext } from '../../../../theme-context';\nimport {\n    Wrapper,\n    Name,\n    Code,\n    Percentage,\n    IndicatorWrapper,\n    IndicatorUp,\n    IndicatorDown,\n    PercentageChanged,\n    PercentageCurrent,\n} from './style';\n\n/**\n * Renders a given row in the alert & anomalies widget.\n */\nconst Row = props => (\n    <ThemeContext.Consumer>\n        { theme =>(\n        <Wrapper {...theme} >\n            <Code>\n                <div className=\"code\">{props.code}</div>\n            </Code>\n            <Name>{props.name}</Name>\n            <Percentage>\n                <PercentageCurrent>{props.current}%</PercentageCurrent>\n                <PercentageChanged value={props.changed}>\n                    {props.changed}%\n                </PercentageChanged>\n            </Percentage>\n            <IndicatorWrapper>\n                {props.changed > 0 ? <IndicatorUp /> : <IndicatorDown />}\n            </IndicatorWrapper>\n            <BasicGraph\n                victory\n                changeDirection={props.changed > 0}\n                theme={theme}\n                data={props.recent_history} />\n        </Wrapper>)}\n    </ThemeContext.Consumer>\n);\n\nexport default Row;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    width: 100%;\n    height: 300px;\n    background: white;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-content: center;\n    vertical-align: middle;\n`;\n\nexport const Message = styled.div`\n    color: black;\n    align-self: center;\n`\nexport const Button = styled.button`\n    color: black;\n    width: 100px;\n    align-self: center;\n\n`\n","import React from 'react';\nimport { Wrapper, Message, Button } from './style';\n\nconst UnAuthorized = props => (\n    <Wrapper\n        {...props.theme}>\n        <Message>You Must be Logged in to view this page</Message>\n        <Button>Login</Button>\n    </Wrapper>\n);\n\nexport default UnAuthorized;\n","import React from 'react';\nimport {Wrapper} from './style';\nimport Row from '../Row';\nimport UnAuthorized from '../../../../components/UnAuthorized';\n\nconst List = props => (\n    <Wrapper>\n        {props.data ? props.data.map(row => (\n            <Row onMouseOver={() => props.onHover(row.code)} theme={props.theme} {...row} />\n        )) : <UnAuthorized />}\n    </Wrapper>\n);\n\nexport default List;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    @media only screen and (min-width: 1024px) {\n        grid-template-columns: 120px 1fr 1fr 100px 70px 1fr;\n        grid-template-areas:\n            'code name name percentage indicator graph';\n    };\n    @media only screen and (min-width: 1280px) {\n        grid-template-columns: 120px 1fr 130px 200px 1fr;\n        grid-template-areas:\n            'code name percentage indicator graph';\n    };\n    margin: 6px;\n    margin-left: 7px;\n    margin-right: 7px;\n    height: 50px;\n    background: #e2e2e2;\n    background: ${props => props.background};\n    padding-top: 4px;\n    padding-bottom: 4px;\n    font-size: 25px;\n`;\nexport const MarketCap = styled.div`\n    grid-area: graph;\n    display: flex;\n    align-self: center;\n    flex-direction: column;\n    text-align: center;\n    width: 300px;\n`\nexport const Name = styled.div`\n    grid-area: name;\n    display: flex;\n    display: flex;\n    align-self: center;\n    flex-direction: column;\n    text-align: center;\n    font-family: Avenir Next, sans-serif;\n`;\n\nexport const Code = styled.div`\n    grid-area: code;\n    display: flex;\n    display: flex;\n    align-self: center;\n    flex-direction: column;\n    text-align: center;\n    padding-left: 10px;\n    .code {\n        background-color: gray;\n        width: 60px;\n        height: 45px;\n        display: flex;\n        font-size: 21px;\n\n        font-family: Avenir Next, sans-serif;\n        flex-direction: column;\n        justify-content: center;\n        vertical-align: middle;\n        text-align: center;\n        margin-left: 5px;\n    }\n`;\nexport const Percentage = styled.div`\n    grid-area: percentage;\n    display: flex;\n    align-self: center;\n    flex-direction: column;\n    text-align: center;\n`;\n\nexport const IndicatorWrapper = styled.div`\n    grid-area: indicator;\n    display: flex;\n    align-self: center;\n    flex-direction: column;\n    text-align: center;\n`;\n\n","import React from 'react';\nimport { ThemeContext } from '../../../../theme-context';\nimport {\n    Wrapper,\n    Name,\n    Code,\n    Percentage,\n    MarketCap,\n    IndicatorWrapper,\n} from './style';\n\n/**\n * Renders a given row in the alert & anomalies widget.\n */\nconst ListHeader = props => (\n    <ThemeContext.Consumer>\n        { theme =>\n            <Wrapper {...theme} >\n                <Code>Code</Code>\n                <Name>Name</Name>\n                <Percentage>Change</Percentage>\n                <IndicatorWrapper></IndicatorWrapper>\n                <MarketCap>Market Cap</MarketCap>\n            </Wrapper>\n        }\n    </ThemeContext.Consumer>\n);\n\nexport default ListHeader;\n","import styled from 'styled-components';\n\nexport const DashboardWrapper = styled.div`\n    display: grid;\n    background: ${props => props.background};\n    color: ${props => props.color};\n    .content {\n        display: grid;\n        grid-gap: 13px;\n        grid-template-columns: repeat(4, 1fr);\n        grid-template-rows: 400px 400px 1fr 1fr;\n        grid-template-areas:\n            'top-list top-graph top-graph top-right'\n            'top-list top-graph top-graph todo'\n            'top-list top-alerts top-alerts top-movers'\n            'top-list top-alerts top-alerts top-movers';\n    }\n`;\nexport const Header = styled.div`\n    font-family: Avenir Next, sans-serif;\n    font-size: 40px;\n    font-weight: bold;\n`\n\nexport const duration = 300;\n\nexport const transitionStyles = {\n    entering: {opacity: 0},\n    entered: {opacity: 1},\n    exited: {opacity: 0},\n};\n","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport ShortedAPI from '../../services/sapi/client';\nimport List from './components/List';\nimport ListHeader from './components/ListHeader';\nimport {DashboardWrapper, duration, transitionStyles, Header} from './style';\n\n/**\n * View:Alerts\n * Shows Alerts/Anomalies across specific stocks and sectors. As well as other information such as news, tweets etc.\n * TODO:\n * * Add AlertListView, UserAlertsListView, ManageAlertWidget\n */\n\nclass Alerts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new ShortedAPI();\n        this.state = {\n            inside: false,\n            rowSelected: false,\n            rowHovered: false,\n        };\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    toggleEnterState() {\n        this.setState({inside: true});\n    }\n    handleClick(rowSelected) {\n        this.setState({rowSelected});\n    }\n    handleHover(rowHovered) {\n        this.setState({rowHovered});\n    }\n    render() {\n        return (\n            <Transition timeout={duration} in appear>\n                {state => {\n                    return (\n                        <DashboardWrapper {...this.props.theme}>\n                        <Header>Market Alerts</Header>\n                        <ListHeader />\n                        <List\n                            onHover={row => this.handleHover(row)}\n                            onSelect={row => this.handleClick(row)}\n                            data={this.apiClient.getTopAlerts()}\n                        />\n                        <Header>Your Alerts</Header>\n\n                        <List\n                            onHover={row => this.handleHover(row)}\n                            onSelect={row => this.handleClick(row)}\n                            data={this.apiClient.getUserAlerts()}\n                        />\n\n                        </DashboardWrapper>\n                    );\n                }}\n            </Transition>\n        );\n    }\n}\n\nexport default Alerts;\n","import styled from 'styled-components';\n\nexport const DashboardWrapper = styled.div`\n    display: grid;\n    background: ${props => props.background};\n    color: ${props => props.color};\n    .content {\n        display: grid;\n        grid-gap: 13px;\n        grid-template-columns: repeat(4, 1fr);\n        grid-template-rows: 400px 400px 1fr 1fr;\n        grid-template-areas:\n            'top-list top-graph top-graph top-right'\n            'top-list top-graph top-graph todo'\n            'top-list top-alerts top-alerts top-movers'\n            'top-list top-alerts top-alerts top-movers';\n    }\n`;\n\nexport const duration = 300;\n\nexport const transitionStyles = {\n    entering: {opacity: 0},\n    entered: {opacity: 1},\n    exited: {opacity: 0},\n};\n","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport ShortedAPI from '../../services/sapi/client';\nimport {DashboardWrapper, duration, transitionStyles} from './style';\n\n/**\n * View:Seasonality\n * Shows the comparison of data over same season/timedown a year apart. This will provide insights to regularities within markets and contextualise these\n * trends.\n * TODO:\n * * SeasonalityGraph - shows the graph of a stock over the seasoned windows\n * * Shows relative comparison of short positions relative to other seasonality behaviors like holidays, winter, summer\n * * refactor data management, should be moved to top level potentially with dumber components\n *\n */\n\nclass Seasonality extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new ShortedAPI();\n        this.state = {\n            inside: false,\n        };\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    toggleEnterState() {\n        this.setState({inside: true});\n    }\n    render() {\n        return (\n            <Transition timeout={duration} in appear>\n                {state => {\n                    return (\n                        <DashboardWrapper {...this.props.theme}>\n                            Seasonality analytics goes here\n                        </DashboardWrapper>\n                    );\n                }}\n            </Transition>\n        );\n    }\n}\n\nexport default Seasonality;\n","import styled from 'styled-components';\n\nexport const DashboardWrapper = styled.div`\n    display: grid;\n    background: ${props => props.background};\n    color: ${props => props.color};\n    .content {\n        display: grid;\n        grid-gap: 13px;\n        grid-template-columns: repeat(4, 1fr);\n        grid-template-rows: 400px 400px 1fr 1fr;\n        grid-template-areas:\n            'top-list top-graph top-graph top-right'\n            'top-list top-graph top-graph todo'\n            'top-list top-alerts top-alerts top-movers'\n            'top-list top-alerts top-alerts top-movers';\n    }\n`;\n\nexport const duration = 300;\n\nexport const transitionStyles = {\n    entering: {opacity: 0},\n    entered: {opacity: 1},\n    exited: {opacity: 0},\n};\n","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport ShortedAPI from '../../services/sapi/client';\nimport {DashboardWrapper, duration, transitionStyles} from './style';\n\n/**\n * View:Movers\n * Shows the movers breakdown. This should represent stocks/sector trends in the market that are moving over short, medium and long term\n * time windows\n * Should utilise the advanced getMovers function, which supports specification of window when caluclating relavent windows. Also should\n * support filtering based of sectors.\n * TODO:\n * * add MoversListView(List + PieChart + Dynamic Data), \n *\n */\n\nclass Movers extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new ShortedAPI();\n        this.state = {\n            inside: false,\n        };\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    toggleEnterState() {\n        this.setState({inside: true});\n    }\n    render() {\n        return (\n            <Transition timeout={duration} in appear>\n                {state => {\n                    return (\n                        <DashboardWrapper {...this.props.theme}>\n                            Top Movers go here\n                        </DashboardWrapper>\n                    );\n                }}\n            </Transition>\n        );\n    }\n}\n\nexport default Movers;\n","import styled from 'styled-components';\nexport const duration = 500;\nexport const transitionStyles = {\n    entering: {opacity: 0, Ypos: 500},\n    entered: {opacity: 1, Ypos: 0},\n    exited: {opacity: 0},\n};\n\nexport const TooltipWrapper = styled.svg`\n    .header {\n        font-size: 12px;\n        font-weight: bold;\n    }\n    .issuerCode {\n        font-size: 12px;\n    }\n    .value {\n        font-size: 12px;\n    }\n    .tooltip-card {\n        fill: #e1e1e1;\n        stroke: 1px solid #282626;\n        border: 1px solid #282626;\n        border-radius: 30px;\n    }\n`;\nexport const Wrapper = styled.div`\n    position: relative;\n    z-index: 1;\n    grid-area: top-graph;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-areas:\n        'none picker options'\n        'chart chart chart'\n        'chart chart chart';\n    opacity: ${props => props.opacity};\n    transition: ${props => `${props.duration}ms ease-in-out`};\n    transition-property: opacity, transform;\n    transform: ${props => `translateY(${props.Ypos}px)`};\n    max-width: 1600px;\n    background-color: ${props => props.graphBackground};\n    border-radius: 5px;\n    border: 1px solid ${props => props.widgetBorderColor};\n`;\nexport const ChartWrapper = styled.div`\n    grid-area: chart;\n    display: flex;\n    flex: 1 1 auto;\n    height: calc(99%);\n    min-height: 0;\n`;\nexport const PickerWrapper = styled.div`\n    grid-area: picker;\n    display: flex;\n    vertical-align: middle;\n    justify-content: center;\n`;\nexport const OptionsWrapper = styled.div`\n    grid-area: options;\n    display: flex;\n    justify-content: flex-end;\n`;\nexport const intervals = {\n    d: 2,\n    w: 7,\n    m: 40,\n    y: 100,\n};\nexport const colors700 = [\n    '#D32F2F',\n    '#303F9F',\n    '#00796B',\n    '#388E3C',\n    '#388E3C',\n    '#F57C00',\n    '#455A64',\n    '#5D4037',\n    '#C2185B',\n    '#7B1FA2',\n    '#00796B',\n    '#7B1FA2',\n    '#C2185B',\n];\nexport const colors300 = [\n    '#E57373',\n    '#F06292',\n    '#7986CB',\n    '#9575CD',\n    '#7986CB',\n    '#64B5F6',\n    '#F06292',\n    '#E57373',\n    '#FFB74D',\n    '#BCAAA4',\n    '#FFF176',\n];\n","import React from 'react';\nimport {TooltipWrapper} from './style';\n\nexport class TopChartTooltip extends React.Component {\n    render() {\n        const {x, y, dx, dy, selectedCode, datum} = this.props;\n        const orientation = y <= 100 ? 'bottom' : 'top';\n        const windowWidth = 400;\n        const p1_x = x <= windowWidth / 2 ? x + 10 : x - 10;\n        const p1_y = orientation === 'top' ? y - 10 : y + 10;\n        const p2_x = p1_x;\n        const p2_y = orientation === 'top' ? p1_y - 10 : p1_y + 10;\n        return selectedCode ? (\n            <TooltipWrapper>\n                <g>\n                    <path\n                        d={`M ${x},${y} L ${p1_x},${p1_y} L ${p2_x}, ${p2_y}`}\n                        stroke={'black'}\n                        fill=\"none\"\n                    />\n                    <circle cx={x} cy={y} r=\"1.5\" />\n                    <circle cx={p1_x} cy={p1_y} r=\"1.5\" />\n                    <circle cx={p2_x} cy={p2_y} r=\"1.5\" />\n                    <rect\n                        stroke={'#282626'}\n                        rx={15}\n                        ry={15}\n                        className=\"tooltip-card\"\n                        x={p2_x - 50}\n                        y={orientation === 'top' ? p2_y - 45 : p2_y}\n                        width=\"100\"\n                        height=\"45\"\n                    />\n                    <text\n                        className=\"header\"\n                        x={p2_x}\n                        y={orientation === 'top' ? p2_y - 30 : p2_y + 15}\n                        fontSize={15}\n                        textAnchor={'middle'}>\n                        {this.props.datum.date}\n                    </text>\n                    <text\n                        x={p2_x}\n                        y={orientation === 'top' ? p2_y - 10 : p2_y + 35}\n                        textAnchor={'middle'}>\n                        <tspan className=\"issuerCode\">{`${selectedCode}: `}</tspan>\n                        <tspan className=\"value\">\n                            {`${this.props.datum[selectedCode]}`}%\n                        </tspan>\n                    </text>\n                </g>\n            </TooltipWrapper>\n        ) : (\n            <g />\n        );\n    }\n}\n","import React from 'react';\nimport {\n    VictoryChart,\n    VictoryAxis,\n    VictoryLabel,\n    VictoryTooltip,\n    VictoryLine,\n    VictoryArea,\n    VictoryVoronoiContainer,\n} from 'victory';\nimport Transition from 'react-transition-group/Transition';\nimport {ThemeContext} from '../../../../theme-context';\nimport {\n    duration,\n    transitionStyles,\n    Wrapper,\n    PickerWrapper,\n    ChartWrapper,\n    OptionsWrapper,\n    colors700,\n    colors300,\n} from './style';\nimport {TopChartTooltip} from './components';\n/**\n * Chart\n * Component responsible for rendering the page1 graphic displaying the top short positions\n * TODO:\n *   * add more styling to graph currently nothing present\n *   * add more intelligent x-axis ticks as windowpicker is changed\n *   * refactor to use victory charts\n *   * multiple display modes such as candleStick etc.\n *   * implement brush and zoom\n *   * implement select to zoom\n *   * implement hover filtering/hiding other lines\n *\n *\n */\nclass TopChartVictory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inside: false,\n            windowWidth: 1700,\n        };\n        this.handleWindowSizeChange = this.handleWindowSizeChange.bind(this);\n    }\n    componentWillUnmount() {\n        typeof window !== 'undefined' &&\n            window.removeEventListener('resize', this.handleWindowSizeChange);\n    }\n    handleWindowSizeChange() {\n        typeof window !== 'undefined' &&\n            setTimeout(this.setState({windowWidth: window.innerWidth}));\n    }\n    componentDidMount() {\n        typeof window !== 'undefined' &&\n            setTimeout(\n                window.addEventListener('resize', this.handleWindowSizeChange),\n            );\n        this.toggleEnterState();\n    }\n\n    toggleEnterState() {\n        this.setState({inside: true});\n    }\n    handleVoronoiSelect(points, props) {\n        if (points[0]) {\n            console.log('voronio snapped to', points[0].childName);\n            this.props.onSelectCode(points[0].childName);\n        }\n    }\n    handleLineHover(e, key) {\n        console.log('new line slected:', key);\n        this.props.onSelectCode(key);\n    }\n    handleLineExit(e, key) {\n        console.log('exiting line', key);\n    }\n\n    render() {\n        const {data, selectedCode} = this.props;\n        var lines = null;\n        if (this.props.mode === 'NORMAL') {\n            lines = data.dataKeys.map((key, index) => (\n                <VictoryLine\n                    name={key}\n                    key={key}\n                    eventKey={key}\n                    // labelComponent={<VictoryTooltip />}\n                    data={data.data}\n                    x=\"date\"\n                    y={key}\n                    events={[\n                        {\n                            childName: key,\n                            target: 'data',\n                            eventHandlers: {\n                                onMouseOver: e => this.handleLineHover(e, key),\n                                onMouseOut: e => this.handleLineExit(e, key),\n                            },\n                        },\n                    ]}\n                    style={{\n                        data: {\n                            stroke: colors700[index],\n                            strokeOpacity:\n                                key === selectedCode || !selectedCode ? 1 : 0.2,\n                            strokeWidth: 2,\n                        },\n                    }}\n                />\n            ));\n        } else if (this.props.mode === 'AREA') {\n            lines = data.dataKeys.map((key, index) => (\n                <VictoryArea\n                    key={key}\n                    data={data.data}\n                    x=\"date\"\n                    y={key}\n                    events={[\n                        {\n                            target: 'parent',\n                            eventHandlers: {\n                                onMouseOver: e => this.handleLineHover(e, key),\n                            },\n                        },\n                    ]}\n                    style={{\n                        data: {\n                            stroke: colors700[index],\n                            fill: colors700[index],\n                            fillOpacity: 0.3,\n                            strokeWidth: 2,\n                        },\n                    }}\n                />\n            ));\n        }\n        return (\n            <ThemeContext.Consumer>\n                {theme => (\n                    <Transition timeout={duration} in appear>\n                        {state => {\n                            return (\n                                <Wrapper\n                                    {...theme}\n                                    duration={duration}\n                                    {...transitionStyles[state]}>\n                                    <PickerWrapper>\n                                        {this.props.picker}\n                                    </PickerWrapper>\n                                    <OptionsWrapper>\n                                        {this.props.options}\n                                    </OptionsWrapper>\n                                    <ChartWrapper>\n                                        <VictoryChart\n                                            padding={{\n                                                top: 10,\n                                                left: 20,\n                                                right: 10,\n                                                bottom: 20,\n                                            }}\n                                            containerComponent={\n                                                <VictoryVoronoiContainer\n                                                    radius={10}\n                                                    padding={10}\n                                                    labels={d => ``}\n                                                    onActivated={(\n                                                        points,\n                                                        props,\n                                                    ) =>\n                                                        this.handleVoronoiSelect(\n                                                            points,\n                                                            props,\n                                                        )\n                                                    }\n                                                    labelComponent={\n                                                        <VictoryTooltip\n                                                            flyoutComponent={\n                                                                <TopChartTooltip\n                                                                    selectedCode={\n                                                                        selectedCode\n                                                                    }\n                                                                    dataKeys={\n                                                                        data.dataKeys\n                                                                    }\n                                                                />\n                                                            }\n                                                            cornerRadius={0}\n                                                            flyoutStyle={{\n                                                                fill: 'white',\n                                                            }}\n                                                        />\n                                                    }\n                                                />\n                                            }>\n                                            {lines}\n                                            <VictoryAxis\n                                                padding={{bottom: 30}}\n                                                standalone={false}\n                                                tickCount={5}\n                                                style={{\n                                                    axis: {\n                                                        stroke: theme.axisColor,\n                                                    },\n                                                    ticks: {\n                                                        stroke: theme.axisColor,\n                                                        size: 5,\n                                                    },\n                                                    tickLabels: {\n                                                        fontSize: 7,\n                                                        padding: 5,\n                                                        fill: theme.axisColor,\n                                                    },\n                                                }}\n                                            />\n                                            <VictoryAxis\n                                                dependentAxis\n                                                tickFormat={t =>\n                                                    `${Math.round(t)}`\n                                                }\n                                                tickLabelComponent={\n                                                    <VictoryLabel />\n                                                }\n                                                style={{\n                                                    axis: {\n                                                        stroke: theme.axisColor,\n                                                    },\n                                                    ticks: {\n                                                        stroke: theme.axisColor,\n                                                        size: 5,\n                                                    },\n                                                    tickLabels: {\n                                                        fontSize: 7,\n                                                        padding: 4,\n                                                        fill: theme.axisColor,\n                                                    },\n                                                }}\n                                            />\n                                        </VictoryChart>\n                                    </ChartWrapper>\n                                </Wrapper>\n                            );\n                        }}\n                    </Transition>\n                )}\n            </ThemeContext.Consumer>\n        );\n    }\n}\n\nexport default TopChartVictory;\n","import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n    display: grid;\n    color: ${props => props.textColor};\n    grid-template-columns: 77px 85px 1fr;\n    grid-template-rows: 1fr;\n    grid-template-areas: 'code percentage indicator';\n    margin: 2px;\n    margin-left: 7px;\n    margin-right: 7px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    height: 40px;\n    .code {\n        grid-area: code;\n        margin-left: 5px;\n        width: 60px;\n        text-align: center;\n    }\n    .percentage {\n        grid-area: percentage;\n        margin-right: 30px;\n        text-align: right;\n    }\n    .indicator {\n        grid-area: indicator;\n    }\n`;\nexport const Wrapper = styled.div`\n    display: grid;\n    color: ${props => props.textColor};\n    background: ${props => props.widgetRowBackgroundColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    grid-template-columns: 77px 85px 1fr;\n    grid-template-rows: repeat(2, 1fr);\n    grid-template-areas:\n        'code percentage indicator'\n        'code percentage indicator';\n    margin: 2px;\n    margin-left: 7px;\n    margin-right: 7px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n`;\nexport const WrapperHovered = styled.div`\n    display: grid;\n    color: ${props => props.textColor};\n    background: ${props => props.widgetRowBackgroundColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    grid-template-columns:77px 85px 1fr;\n    grid-template-rows: repeat(2, 1fr);\n    grid-template-areas:\n        'code percentage indicator'\n        'code percentage indicator';\n    margin: 2px;\n    transform: scale(1.05);\n    margin-left: 7px;\n    margin-right: 7px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    transition-duration: 0.1s;\n    -webkit-box-shadow: -3px 4px 7px 0px rgba(0, 0, 0, 0.25);\n    -moz-box-shadow: -3px 4px 7px 0px rgba(0, 0, 0, 0.25);\n    box-shadow: -3px 4px 7px 0px rgba(0, 0, 0, 0.25);\n`;\n\nexport const Name = styled.div`\n    grid-area: name;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n`;\n\nexport const Code = styled.div`\n    grid-area: code;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    .code {\n        background-color: gray;\n        width: 60px;\n        height: 45px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        vertical-align: middle;\n        text-align: center;\n        margin-left: 5px;\n    }\n`;\nexport const Percentage = styled.div`\n    grid-area: percentage;\n    display: grid;\n    margin-right: 20px;\n    grid-template-rows: repeat(2, 1fr);\n    grid-gap: 1px;\n    grid-template-areas:\n        'current'\n        'changed';\n`;\nexport const PercentageCurrent = styled.div`\n    grid-area: current;\n    display: flex;\n    float: right;\n    justify-content: flex-end;\n    font-weight: bold;\n    font-size: 21px;\n    font-weight: bold;\n    font-family: Avenir Next, sans-serif;\n`;\nexport const PercentageChanged = styled.div`\n    grid-area: changed;\n    display: flex;\n    justify-content: flex-end;\n    margin-left: 17px;\n    font-weight: bold;\n    font-family: Avenir Next, sans-serif;\n    color: ${props => (props.value > 0 ? `red` : `green`)};\n    padding-bottom: 10px;\n`;\nexport const IndicatorUp = styled.div`\n    width: 0;\n    height: 0;\n    border-left: 20px solid transparent;\n    border-right: 20px solid transparent;\n    border-bottom: 20px solid red;\n`;\nexport const IndicatorDown = styled.div`\n    width: 0;\n    height: 0;\n    border-left: 20px solid transparent;\n    border-right: 20px solid transparent;\n    border-top: 20px solid green;\n`;\n\nexport const IndicatorWrapper = styled.div`\n    grid-area: indicator;\n    display: grid;\n    flex-direction: column;\n    text-align: center;\n    vertical-align: middle;\n    justify-content: center;\n    margin: auto;\n    padding: auto;\n`;\n","import React from 'react';\nimport {ThemeContext} from '../../../../theme-context';\nimport {\n    Wrapper,\n    WrapperHovered,\n    HeaderWrapper,\n    Name,\n    Code,\n    Percentage,\n    IndicatorWrapper,\n    IndicatorUp,\n    IndicatorDown,\n    PercentageChanged,\n    PercentageCurrent,\n} from './style';\n\n/**\n * Renders a given row in the alert & anomalies widget.\n */\nconst MoversListRow = props => (\n    <ThemeContext.Consumer>\n        {theme =>\n            props.header ? (\n                <HeaderWrapper {...theme}>\n                    <div className=\"code\">code</div>\n                    <div className=\"percentage\">change</div>\n                    <div className=\"idicator\" />\n                </HeaderWrapper>\n            ) : props.code === props.selectedRow ? (\n                <WrapperHovered {...theme}>\n                    <Code>\n                        <div className=\"code\">{props.code}</div>\n                    </Code>\n                    <Name>{props.name}</Name>\n                    <Percentage>\n                        <PercentageCurrent>{props.current}%</PercentageCurrent>\n                        <PercentageChanged value={props.change}>\n                            {props.change}%\n                        </PercentageChanged>\n                    </Percentage>\n                    <IndicatorWrapper>\n                        {props.change > 0 ? <IndicatorUp /> : <IndicatorDown />}\n                    </IndicatorWrapper>\n                </WrapperHovered>\n            ) : (\n                <Wrapper onMouseOver={props.handleSelect} {...theme}>\n                    <Code>\n                        <div className=\"code\">{props.code}</div>\n                    </Code>\n                    <Name>{props.name}</Name>\n                    <Percentage>\n                        <PercentageCurrent>{props.current}%</PercentageCurrent>\n                        <PercentageChanged value={props.change}>\n                            {props.change}%\n                        </PercentageChanged>\n                    </Percentage>\n                    <IndicatorWrapper>\n                        {props.change > 0 ? <IndicatorUp /> : <IndicatorDown />}\n                    </IndicatorWrapper>\n                </Wrapper>\n            )\n        }\n    </ThemeContext.Consumer>\n);\n\nexport default MoversListRow;\n","import styled from 'styled-components';\n\nexport const duration = 500;\nexport const transitionStyles = {\n    entering: {opacity: 0, Ypos: 500},\n    entered: {opacity: 1, Ypos: 0},\n    exited: {opacity: 0},\n};\n\nexport const Wrapper = styled.div`\n    height: 100%;\n    grid-area: top-movers;\n    background: ${props => props.widgetBackgroundColor};\n    border: 1px solid ${props => props.widgetBorderColor};\n    display: flex;\n    flex-direction: column;\n    border-radius: 5px;\n    opacity: ${props => props.opacity};\n    transition: ${props => `${props.duration}ms ease-in-out`};\n    transition-property: opacity, transform;\n    transform: ${props => `translateY(${props.Ypos}px)`};\n`;\nexport const Header = styled.div`\n    margin-top: 10px;\n    display: flex;\n    height: 33px;\n    flex-direction: column;\n    text-align: center;\n    font-size: 22px;\n    font-weight: bold;\n    font-family: Avenir Next, sans-serif;\n`;\nexport const More = styled.div`\n    height: 50px;\n    text-align: center;\n    font-size: 22px;\n    font-weight: bold;\n    background: ${props => props.widgetRowBackgroundColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    border-radius: 0 0 5px 5px;\n    margin: 2px;\n    margin-left: 7px;\n    margin-right: 7px;\n    justify-content: center;\n    font-family: Avenir Next, sans-serif;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n`;\n","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport {ThemeContext} from '../../../../theme-context';\nimport MoversListRow from '../MoversListRow';\nimport {Wrapper, Header, More, duration, transitionStyles} from './style';\n/**\n * Renders a list of TopShortsListRow components. These rows will display the stock code, stock name, and percentage shorted\n * for the top say 20 stocks. With a \"show more\" button present at the bottom, taking them to a different view which will me dedicated to showing more short position\n * information for more stocks (maybe top 100). Will perhaps a more verbose set of properties and graphics.\n */\nclass MoversList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inside: false,\n            selected: false,\n        };\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n\n    toggleEnterState() {\n        this.setState({inside: true});\n    }\n    handleRowSelect(value) {\n        this.setState({selected: value});\n    }\n    handleMouseLeave() {\n        this.setState({\n            selected: false,\n        });\n    }\n\n    render() {\n        const rows = this.props.data.data\n            .slice(0, 5)\n            .map(row_data => (\n                <MoversListRow\n                    handleSelect={() => this.handleRowSelect(row_data.code)}\n                    selectedRow={this.state.selected}\n                    row\n                    key={row_data.code}\n                    {...row_data}\n                />\n            ));\n        return (\n            <ThemeContext.Consumer>\n                {theme => (\n                    <Transition timeout={duration} in appear>\n                        {state => {\n                            return (\n                                <Wrapper\n                                    onMouseLeave={() => this.handleMouseLeave()}\n                                    {...theme}\n                                    duration={duration}\n                                    {...transitionStyles[state]}>\n                                    <Header>Top Movers</Header>\n                                    <MoversListRow header key={'row-header'} />\n                                    {rows}\n                                    <More {...theme}>show more</More>\n                                </Wrapper>\n                            );\n                        }}\n                    </Transition>\n                )}\n            </ThemeContext.Consumer>\n        );\n    }\n}\n\nexport default MoversList;\n","import styled from 'styled-components';\n\nexport const WrapperHeader = styled.div`\n    display: grid;\n    color: ${props => props.textColor};\n    background: ${props => props.widgetRowBackgroundColor};\n    @media (min-width: 901px) {\n        grid-template-columns: repeat(5, 1fr);\n        grid-template-areas: 'code name name name percentage';\n    }\n    @media (max-width: 900px) {\n        grid-template-columns: repeat(2, 1fr);\n        grid-template-areas: 'code percentage';\n    }\n    margin: 4px;\n    height: 40px;\n    margin-bottom: 0px;\n    align-items: center;\n    .code {\n        grid-area: code;\n        text-align: center;\n        width: 60px;\n    }\n    .company-name {\n        grid-area: name;\n        text-align: center;\n        margin-right: 30px;\n    }\n    .percentage {\n        grid-area: percentage;\n        width: 70px;\n        padding-right: 14px;\n        text-align: center;\n    }\n`;\nexport const Wrapper = styled.a`\n    display: grid;\n    z-index: 0;\n    position: relative;\n    color: ${props => props.textColor};\n    background: ${props => props.widgetRowBackgroundColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    text-decoration: none !important;\n    @media (min-width: 901px) {\n        grid-template-columns: repeat(5, 1fr);\n        grid-template-areas: 'code name name name percentage';\n    }\n    @media (max-width: 900px) {\n        grid-template-columns: repeat(2, 1fr);\n        grid-template-areas: 'code percentage';\n    }\n    margin: 4px;\n    height: 100%;\n    border-radius: 0 30px 30px 0;\n    &:hover,\n    &:visited,\n    &:link,\n    &:active {\n        text-decoration: none !important;\n        color: ${props => props.textColor};\n    }\n    align-items: center;\n`;\nexport const WrapperHovered = styled.a`\n    display: grid;\n    position: relative;\n    color: ${props => props.textColor};\n    background: ${props => props.widgetRowBackgroundColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    text-decoration: none !important;\n    z-index: 10;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-areas: 'code name name name percentage';\n    margin: 4px;\n    height: 100%;\n    border-radius: 0 30px 30px 0;\n    transform: scale(1.05);\n    transition-duration: 0.1s;\n    -webkit-box-shadow: -3px 4px 7px 0px rgba(0, 0, 0, 0.25);\n    -moz-box-shadow: -3px 4px 7px 0px rgba(0, 0, 0, 0.25);\n    box-shadow: -3px 4px 7px 0px rgba(0, 0, 0, 0.25);\n    &:hover,\n    &:visited,\n    &:link,\n    &:active {\n        text-decoration: none !important;\n        color: ${props => props.textColor};\n    }\n    align-items: center;\n`;\n\nexport const Name = styled.div`\n    grid-area: name;\n    @media (max-width: 1300px) {\n        display: none;\n    }\n    display: inline-block;\n    vertical-align: middle;\n    flex-wrap: wrap;\n    flex: 1;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    font-size: 14px;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    min-width: 0;\n    margin-right: 30px;\n    -webkit-line-clamp: 1;\n    -webkit-box-orient: vertical;\n`;\n\nexport const Code = styled.div`\n    grid-area: code;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    .code {\n        width: 60px;\n        height: 45px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        vertical-align: middle;\n        text-align: center;\n        font-size: 21px;\n        font-weight: bold;\n    }\n`;\n\nexport const Percent = styled.div`\n    grid-area: percentage;\n    margin-left: auto;\n    padding-right: 8px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n\n    .circle {\n        background: #f98080;\n        height: 100%;\n        padding: 4px;\n        width: 70px;\n        border-radius: 10px 50px 50px 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        vertical-align: middle;\n        text-align: center;\n        font-size: 16px;\n        font-weight: 400;\n    }\n`;\n","import React from 'react';\nimport {ThemeContext} from '../../../../theme-context';\nimport {\n    Wrapper,\n    WrapperHeader,\n    WrapperHovered,\n    Code,\n    Name,\n    Percent,\n} from './style';\n\n/**\n * Renders a specfiic row that is contained within the TopSHortList view. This will show\n * the current short percentage of a given stock within the top x number of short positions\n * takes a data prop which contains the following payload:\n * data = {\n *  name: \"JBHIFI LIMITED\",\n *  code: \"JBH\",\n *  percentage: 19.6\n * }\n */\n\nconst TopShortListRow = props => {\n    const headerView = (\n        <ThemeContext.Consumer>\n            {theme => (\n                <WrapperHeader>\n                    <div className=\"code\">code</div>\n                    <div className=\"company-name\">company name</div>\n                    <div className=\"percentage\">%</div>\n                </WrapperHeader>\n            )}\n        </ThemeContext.Consumer>\n    );\n    const rowView = (\n        <ThemeContext.Consumer>\n            {theme =>\n                props.isHovered ? (\n                    <WrapperHovered\n                        {...theme}\n                        onMouseOver={props.onHover}\n                        href={`/${props.code}`}>\n                        <Code>\n                            <div className=\"code\">{props.code}</div>\n                        </Code>\n                        <Name>{props.name}</Name>\n                        <Percent>\n                            <div className=\"circle\">{props.current}</div>\n                        </Percent>\n                    </WrapperHovered>\n                ) : (\n                    <Wrapper {...theme} onMouseOver={props.onHover}>\n                        <Code>\n                            <div className=\"code\">{props.code}</div>\n                        </Code>\n                        <Name>{props.name}</Name>\n                        <Percent>\n                            <div className=\"circle\">{props.current}</div>\n                        </Percent>\n                    </Wrapper>\n                )\n            }\n        </ThemeContext.Consumer>\n    );\n    if (props.header) {\n        return headerView;\n    } else {\n        return rowView;\n    }\n};\n\nexport default TopShortListRow;\n","import styled from 'styled-components';\n\nexport const duration = 500;\nexport const transitionStyles = {\n    entering: {opacity: 0, Ypos: 500},\n    entered: {opacity: 1, Ypos: 0},\n    exited: {opacity: 0},\n};\n\nexport const Wrapper = styled.div`\n    grid-area: top-list;\n    background: ${props => props.widgetBackgroundColor};\n    display: flex;\n    flex-direction: column;\n    border-radius: 5px;\n    border: 1px solid ${props => props.widgetBorderColor};\n    opacity: ${props => props.opacity};\n    transition: ${props => `${props.duration}ms ease-in-out`};\n    transition-property: opacity, transform;\n    transform: ${props => `translateY(${props.Ypos}px)`};\n`;\nexport const Header = styled.div`\n    margin-top: 10px;\n    height: 30px;\n    text-align: center;\n    font-size: 22px;\n    font-weight: bold;\n    font-family: Avenir Next, sans-serif;\n`;\nexport const More = styled.div`\n    height: 50px;\n    text-align: center;\n    font-size: 22px;\n    font-weight: bold;\n    background: ${props => props.widgetRowBackgroundColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    border-radius: 0 0 5px 5px;\n    margin: 4px;\n    justify-content: center;\n    font-family: Avenir Next, sans-serif;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n`;\n","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport {ThemeContext} from '../../../../theme-context';\nimport TopShortsListRow from '../../components/TopShortsListRow';\nimport {Wrapper, Header, More, duration, transitionStyles} from './style';\n/**\n * Renders a list of TopShortsListRow components. These rows will display the stock code, stock name, and percentage shorted\n * for the top say 20 stocks. With a \"show more\" button present at the bottom, taking them to a different view which will me dedicated to showing more short position\n * information for more stocks (maybe top 100). Will perhaps a more verbose set of properties and graphics.\n * TODO:\n *  * load profile on select of a specific stock in list\n */\nclass TopShortsList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inside: false,\n            hovered: false,\n        };\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n\n    toggleEnterState() {\n        this.setState({inside: true});\n    }\n    handleHover(value) {\n        this.setState({hovered: value});\n    }\n    handleMouseLeave() {\n        this.setState({\n            hovered: false,\n        });\n    }\n\n    render() {\n        const rows = this.props.data.map(row_data => (\n            <TopShortsListRow\n                row\n                isHovered={this.state.hovered === row_data.code}\n                onHover={() => this.handleHover(row_data.code)}\n                key={row_data.code}\n                {...row_data}\n            />\n        ));\n        return (\n            <ThemeContext.Consumer>\n                {theme => (\n                    <Transition timeout={duration} in appear>\n                        {state => {\n                            return (\n                                <Wrapper\n                                    {...theme}\n                                    onMouseLeave={() => this.handleMouseLeave()}\n                                    duration={duration}\n                                    {...transitionStyles[state]}>\n                                    <Header {...theme}>Top Short List</Header>\n                                    <TopShortsListRow header />\n                                    {rows}\n                                    <More {...theme}>show more</More>\n                                </Wrapper>\n                            );\n                        }}\n                    </Transition>\n                )}\n            </ThemeContext.Consumer>\n        );\n    }\n}\n\nexport default TopShortsList;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    background: ${props => props.widgetBackgroundColor};\n    color: ${props => props.textColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    grid-area: company-code;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n`;\n\nexport const Code = styled.div`\n    background: ${props => props.widgetBackgroundColor};\n    color: ${props => props.textColor};\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n    font-size: 15px;\n    font-weight: 600;\n    font-family: Avenir Next, sans-serif;\n`;\nexport const Header = styled.div`\n    background: ${props => props.widgetBackgroundColor};\n    color: ${props => props.textColor};\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n    font-size: 11px;\n    font-weight: bold;\n    font-family: Avenir Next, sans-serif;\n`;\n","import React from 'react';\nimport { ThemeContext } from '../../../../theme-context';\nimport {Wrapper, Code, Header} from './style';\n\n/**\n * Renders a nicely styled and dynamically scaling header for the legend view which will display the company icon/logo\n * as well as its stock code.\n *\n */\nconst LegendCompanyCode = props => (\n    <ThemeContext.Consumer>\n        { theme => (\n            <Wrapper {...theme} >\n                <Header {...theme} >Issuer code</Header>\n                <Code {...theme} >{props.code}</Code>\n            </Wrapper>)\n        }\n    </ThemeContext.Consumer>\n);\nexport default LegendCompanyCode;\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    vertical-align: middle;\n    justify-content: center;\n    grid-area: company-logo;\n`\nexport const Image = styled.img`\n    /* width: 60px;\n    height: 60px; */\n    margin-left: auto;\n    margin-right: auto;\n    display: block;\n`\n","import React from 'react';\nimport {Wrapper, Image} from './style';\n\n/**\n * Renders a nicely styled and dynamically scaling header for the legend view which will display the company icon/logo\n * as well as its stock code.\n *\n */\nclass LegendCompanyLogo extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {dimensions: {}};\n        this.onImgLoad = this.onImgLoad.bind(this);\n    }\n    onImgLoad({target:img}) {\n        console.log(img)\n        this.setState({dimensions:{height:img.offsetHeight,\n                                   width:img.offsetWidth}})\n    }\n    onComponentWillMount() {\n        console.log(this.props.logo)\n    }\n    render () {\n        console.log(this.state.dimensions)\n        return (\n        <Wrapper>\n            <Image height={60} width={60} onLoad={this.onImgLoad} src={this.props.logo} />\n        </Wrapper>\n        )\n    }\n}\nexport default LegendCompanyLogo;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    border-radius: 3px;\n    flex-direction: column;\n    text-align: center;\n    vertical-align: middle;\n    justify-content: center;\n    background: ${props => props.widgetBackgroundColor};\n    color: ${props => props.textColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    grid-area: company-pe;\n`;\n\nexport const PE = styled.div`\n    background: ${props => props.widgetBackgroundColor};\n    color: ${props => props.textColor};\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n    font-size: 15px;\n    font-weight: 600;\n    font-family: Avenir Next, sans-serif;\n`;\nexport const Header = styled.div`\n    background: ${props => props.widgetBackgroundColor};\n    color: ${props => props.textColor};\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n    font-size: 11px;\n    font-weight: bold;\n    font-family: Avenir Next, sans-serif;\n`;\n","import React from 'react';\nimport { ThemeContext } from '../../../../theme-context';\nimport {Wrapper, Header, PE} from './style';\n\n/**\n * Renders a nicely styled and dynamically scaling header for the legend view which will display the company icon/logo\n * as well as its stock code.\n *\n */\nconst LegendCompanyPE = props => (\n    <ThemeContext.Consumer>\n        { theme => (\n        <Wrapper {...theme} >\n            <Header {...theme} >P/E ratio</Header>\n            <PE {...theme} >{props.pe}</PE>\n        </Wrapper>\n        )}\n    </ThemeContext.Consumer>\n);\nexport default LegendCompanyPE;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    grid-area: company-mc;\n    border-radius: 5px;\n    background: ${props => props.widgetBackgroundColor};\n    color: ${props => props.textColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    display: grid;\n    height: 140px;\n    grid-template-rows: 20px 120px;\n    grid-template-areas:\n        'header'\n        'chart';\n`;\nexport const Header = styled.div`\n    grid-area: header;\n    padding-top: 15px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n`;\nexport const Chart = styled.div`\n    grid-area: chart;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    height: 150px;\n`;\n","import React from 'react';\nimport {\n    VictoryChart,\n    VictoryAxis,\n    VictoryLabel,\n    VictoryContainer,\n    VictoryLine,\n} from 'victory';\nimport {ThemeContext} from '../../../../theme-context';\n// import { LineChart, Line, ResponsiveContainer } from 'recharts';\nimport {Wrapper, Header, Chart} from './style';\n\n/**\n * LegendCompanyMarketCap\n *\n */\nclass LegendCompanyMarketCap extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    getTickValues() {\n        return [\n            new Date(2002, 1, 1),\n            new Date(2017, 1, 1),\n            new Date(2018, 1, 1),\n        ];\n    }\n\n    render() {\n        return (\n            <ThemeContext.Consumer>\n                {theme => (\n                    <Wrapper {...theme}>\n                        <Header>\n                            <VictoryLabel\n                                text=\"Market Cap\"\n                                style={{\n                                    fontSize: 20,\n                                    fontWeight: 'bold',\n                                    fontFamily: 'Avenir Next,sans-serif',\n                                }}\n                            />\n                        </Header>\n                        <Chart>\n                            <VictoryChart\n                                padding={{\n                                    top: 0,\n                                    left: 40,\n                                    right: 20,\n                                    bottom: 20,\n                                }}\n                                height={120}\n                                width={580}\n                                containerComponent={\n                                    <VictoryContainer responsive />\n                                }>\n                                <VictoryLine\n                                    style={{\n                                        data: {\n                                            stroke: theme.textColor,\n                                        },\n                                    }}\n                                    data={this.props.data}\n                                />\n                                <VictoryAxis\n                                    style={{\n                                        axis: {stroke: theme.axisColor},\n                                        ticks: {\n                                            stroke: theme.axisColor,\n                                            size: 5,\n                                        },\n                                        tickLabels: {\n                                            fontSize: 7,\n                                            padding: 5,\n                                            fill: theme.axisColor,\n                                        },\n                                    }}\n                                    tickCount={5}\n                                    tickFormat={x => new Date(x).getFullYear()}\n                                />\n                            </VictoryChart>\n                        </Chart>\n                    </Wrapper>\n                )}\n            </ThemeContext.Consumer>\n        );\n    }\n}\n\nexport default LegendCompanyMarketCap;\n","import styled from 'styled-components';\n\nexport const duration = 500;\nexport const transitionStyles = {\n    entering: {opacity: 0, Ypos: 500},\n    entered: {opacity: 1, Ypos: 0},\n    exited: {opacity: 0},\n};\nexport const Wrapper = styled.div`\n    background: transparent;\n    color: ${props => props.textColor};\n    opacity: ${props => props.opacity};\n    transition: ${props => `${props.duration}ms ease-in-out`};\n    transition-property: opacity, transform;\n    transform: ${props => `translateY(${props.Ypos}px)`};\n    border-radius: 4px;\n    grid-area: legend;\n    display: grid;\n    grid-gap: 5px;\n    grid-template-rows: 40px 40px 40px 40px 100px;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-areas:\n        'company-name company-name company-name company-name'\n        'company-logo company-logo company-code company-code'\n        'company-logo company-logo company-pe company-pe'\n        'company-sector company-sector company-sector company-sector'\n        'company-mc company-mc company-mc company-mc';\n`;\nexport const UnselectedWrapper = styled.div`\n    background: ${props => props.widgetBackgroundColor};\n    color: ${props => props.textColor};\n    opacity: ${props => props.opacity};\n    transition: ${props => `${props.duration}ms ease-in-out`};\n    transition-property: opacity, transform;\n    transform: ${props => `translateY(${props.Ypos}px)`};\n    grid-area: legend;\n    display: flex;\n    flex-direction: column;\n    vertical-align: middle;\n    justify-content: center;\n    text-align: center;\n    border-radius: 4px;\n    height: 100%;\n    font-family: Avenir Next, sans-serif;\n    font-size: 22px;\n    font-weight: bold;\n    padding-left: 30px;\n    padding-right: 30px;\n`;\nexport const CompanyHeader = styled.div`\n    background: ${props => props.widgetBackgroundColor};\n    color: ${props => props.textColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    display: flex;\n    border-radius: 5px;\n    flex-direction: column;\n    vertical-align: middle;\n    justify-content: center;\n    font-size: 0.8vh;\n    grid-area: company-header;\n`;\nexport const CompanyMarketCap = styled.div`\n    grid-area: company-mc;\n    background: ${props => props.widgetBackgroundColor};\n    color: ${props => props.textColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    display: flex;\n    flex-direction: column;\n    vertical-align: middle;\n`;\nexport const CompanySector = styled.div`\n    grid-area: company-sector;\n    display: flex;\n    border-radius: 5px;\n    background: ${props => props.widgetBackgroundColor};\n    color: ${props => props.textColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    font-size: 1vh;\n    font-weight: bold;\n    font-family: Avenir Next, sans-serif;\n    text-align: center;\n    flex-direction: column;\n    vertical-align: middle;\n    justify-content: center;\n`;\nexport const CompanyName = styled.div`\n    border-radius: 5px;\n    grid-area: company-name;\n    display: flex;\n    background: ${props => props.widgetBackgroundColor};\n    color: ${props => props.textColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    font-size: 1vh;\n    font-weight: bold;\n    font-family: Avenir Next, sans-serif;\n    text-align: center;\n    flex-direction: column;\n    vertical-align: middle;\n    justify-content: center;\n`;\n","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport LegendCompanyCode from '../LegendCompanyCode';\nimport LegendCompanyLogo from '../LegendCompanyLogo';\nimport LegendCompanyPE from '../LegendCompanyPE';\nimport LegendCompanyMarketCap from '../LegendCompanyMarketCap';\nimport {\n    Wrapper,\n    duration,\n    transitionStyles,\n    UnselectedWrapper,\n    CompanyName,\n    CompanySector,\n} from './style';\nimport { ThemeContext } from '../../../../theme-context';\nimport ShortedAPI from '../../../../services/sapi/client';\n/**\n * Renders a shorted.com.au logo\n * TODO: add data fetch here, async or prefetch based of top-short positions\n */\nclass Legend extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new ShortedAPI();\n        this.state = {\n            inside: false,\n            code: false,\n        };\n    }\n    componentDidUpdate(prevProps) {\n        // You don't have to do this check first, but it can help prevent an unneeded render\n        if (prevProps.code !== this.props.code) {\n            this.setState({\n                code: this.props.code,\n                inside: false,\n            });\n        }\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n\n    toggleEnterState() {\n        this.setState({inside: true});\n    }\n    render() {\n        const data = this.apiClient.getStockSummary(this.props.code);\n        const logo = this.apiClient.getStockLogo(this.props.code);\n        return (\n        <ThemeContext.Consumer>\n            { theme => (\n                <Transition timeout={duration} in appear>\n                    {state => {\n                        return this.props.code ? (\n                            <Wrapper\n                                {...theme}\n                                duration={duration}\n                                {...transitionStyles[state]}>\n                                <LegendCompanyLogo {...theme}logo={logo} />\n                                <LegendCompanyCode {...theme}code={this.props.code} />\n                                <LegendCompanyPE {...theme}pe={data.data.PE} />\n                                <CompanyName {...theme}>{data.metadata.name}</CompanyName>\n                                <CompanySector {...theme}>\n                                    {data.metadata.sector}\n                                </CompanySector>\n                                <LegendCompanyMarketCap\n                                    {...theme}\n                                    data={data.data.marketCap}\n                                />\n                            </Wrapper>\n                        ) : (\n                            <UnselectedWrapper\n                                duration={duration}\n                                {...transitionStyles[state]}>\n                                <p>hover over graph to show profile</p>\n                            </UnselectedWrapper>\n                        );\n                    }}\n                </Transition>)}\n        </ThemeContext.Consumer>)\n    }\n}\n\nexport default Legend;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    background: transparent;\n    border-radius: 5px;\n    display: flex;\n    height: 120px;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    align-self: center;\n`;\nexport const Header = styled.div`\n    grid-area: header;\n    padding-top: 3px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n`;\nexport const Chart = styled.div`\n    grid-area: chart;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n`;\n","import React from 'react';\nimport {\n    VictoryGroup,\n    VictoryVoronoiContainer,\n    VictoryTooltip,\n    VictoryLine,\n    VictoryScatter,\n} from 'victory';\nimport {ThemeContext} from '../../../../theme-context';\n// import { LineChart, Line, ResponsiveContainer } from 'recharts';\nimport {Wrapper, Header, Chart} from './style';\n\n/**\n * LegendCompanyMarketCap\n *\n */\nclass AlertRowGraph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    getTickValues() {\n        return [\n            new Date(2002, 1, 1),\n            new Date(2017, 1, 1),\n            new Date(2018, 1, 1),\n        ];\n    }\n\n    render() {\n        const spark_data = this.props.data.map(value => value.y);\n        const minValue = Math.min(...spark_data);\n        const maxValue = Math.max(...spark_data);\n        return (\n            <ThemeContext.Consumer>\n                {theme => (\n                    <Chart>\n                        <VictoryGroup\n                            padding={{top: 10, left: 40, right: 20, bottom: 10}}\n                            height={70}\n                            width={200}\n                            containerComponent={\n                                <VictoryVoronoiContainer\n                                    voronoiDimension=\"x\"\n                                    radius={5}\n                                    padding={5}\n                                />\n                            }>\n                            <VictoryLine\n                                labelComponent={<VictoryTooltip />}\n                                labels={d => d.y}\n                                padding={{\n                                    top: 0,\n                                    left: 40,\n                                    right: 20,\n                                    bottom: 0,\n                                }}\n                                data={this.props.data}\n                                style={{\n                                    data: {\n                                        stroke: this.props.changeDirection\n                                            ? theme.downStroke\n                                            : theme.upStroke,\n                                        strokeWidth: 3,\n                                    },\n                                }}\n                            />\n                            <VictoryScatter\n                                labelComponent={<VictoryTooltip />}\n                                labels={d => d.y}\n                                data={this.props.data}\n                                size={datum =>\n                                    datum.y === minValue || datum.y === maxValue\n                                        ? 5\n                                        : 0\n                                }\n                                style={{\n                                    data: {\n                                        fill: this.props.changeDirection\n                                            ? theme.downStroke\n                                            : theme.upStroke,\n                                    },\n                                }}\n                            />\n                        </VictoryGroup>\n                    </Chart>\n                )}\n            </ThemeContext.Consumer>\n        );\n    }\n}\n\nexport default AlertRowGraph;\n","import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n    display: grid;\n    @media only screen and (min-width: 1024px) {\n        grid-template-columns: 90px 1fr 1fr 1fr 1fr;\n        grid-template-rows: 1fr;\n        grid-template-areas: 'code name name percentage indicator graph';\n    }\n    @media only screen and (min-width: 1280px) {\n        grid-template-columns: 90px 1fr 83px 79px 1fr;\n        grid-template-rows: 1fr;\n        grid-template-areas: 'code name percentage indicator graph';\n    }\n\n    margin: 3px;\n    margin-left: 7px;\n    margin-right: 7px;\n    height: 20px;\n    background: ${props => props.widgetBackgroundColor};\n    padding-top: 4px;\n    padding-bottom: 4px;\n    .code {\n        grid-area: code;\n    }\n    .company-name {\n        grid-area: name;\n    }\n    .percentage {\n        grid-area: percentage;\n        text-align: right;\n        margin-right: 20px;\n    }\n    .indicator {\n        grid-area: indicator;\n    }\n    .graph {\n        grid-area: graph;\n    }\n`;\n\nexport const Wrapper = styled.div`\n    display: grid;\n    background: ${props => props.widgetRowBackgroundColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    @media only screen and (min-width: 1024px) {\n        grid-template-columns: 90px 1fr 83px 79px 1fr;\n        grid-template-rows: repeat(2, 1fr);\n        grid-template-areas:\n            'code name name percentage indicator graph'\n            'code name name percentage indicator graph';\n    }\n    @media only screen and (min-width: 1280px) {\n        grid-template-columns: 90px 1fr 83px 79px 1fr;\n        grid-template-rows: repeat(2, 1fr);\n        grid-template-areas:\n            'code name percentage indicator graph'\n            'code name percentage indicator graph';\n    }\n\n    margin: 2px;\n    margin-left: 7px;\n    margin-right: 7px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n`;\nexport const WrapperHovered = styled.div`\n    display: grid;\n    background: ${props => props.widgetRowBackgroundColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    transform: scale(1.03);\n    @media only screen and (min-width: 1024px) {\n        grid-template-columns: 90px 1fr 83px 79px 1fr;\n        grid-template-rows: repeat(2, 1fr);\n        grid-template-areas:\n            'code name name percentage indicator graph'\n            'code name name percentage indicator graph';\n    }\n    @media only screen and (min-width: 1280px) {\n        grid-template-columns: 90px 1fr 83px 79px 1fr;\n        grid-template-rows: repeat(2, 1fr);\n        grid-template-areas:\n            'code name percentage indicator graph'\n            'code name percentage indicator graph';\n    }\n\n    margin: 2px;\n    margin-left: 7px;\n    margin-right: 7px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    transition-duration: 0.1s;\n    -webkit-box-shadow: -3px 4px 7px 0px rgba(0, 0, 0, 0.25);\n    -moz-box-shadow: -3px 4px 7px 0px rgba(0, 0, 0, 0.25);\n    box-shadow: -3px 4px 7px 0px rgba(0, 0, 0, 0.25);\n`;\nexport const Graph = styled.div`\n    grid-area: graph;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const Name = styled.div`\n    grid-area: name;\n    display: flex;\n    font-size: 16px;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    font-family: Avenir Next, sans-serif;\n`;\n\nexport const Code = styled.div`\n    grid-area: code;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    padding-left: 10px;\n    .code {\n        background-color: gray;\n        width: 60px;\n        height: 45px;\n        display: flex;\n        font-size: 21px;\n\n        font-family: Avenir Next, sans-serif;\n        flex-direction: column;\n        justify-content: center;\n        vertical-align: middle;\n        text-align: center;\n        margin-left: 5px;\n    }\n`;\nexport const Percentage = styled.div`\n    grid-area: percentage;\n    display: grid;\n    grid-template-rows: repeat(2, 1fr);\n    grid-gap: 1px;\n    grid-template-areas:\n        'current'\n        'changed';\n`;\nexport const PercentageCurrent = styled.div`\n    grid-area: current;\n    font-size: 25px;\n    display: flex;\n    float: right;\n    justify-content: flex-end;\n    font-weight: bold;\n    font-family: Avenir Next, sans-serif;\n`;\nexport const PercentageChanged = styled.div`\n    grid-area: changed;\n    font-weight: bold;\n    font-size: 16px;\n    display: flex;\n    justify-content: flex-end;\n    font-family: Avenir Next, sans-serif;\n    color: ${props => (props.value > 0 ? `red` : `green`)};\n    padding-bottom: 5px;\n`;\nexport const IndicatorUp = styled.div`\n    border-left: 20px solid transparent;\n    border-right: 20px solid transparent;\n    border-bottom: 20px solid red;\n`;\nexport const IndicatorDown = styled.div`\n    border-left: 20px solid transparent;\n    border-right: 20px solid transparent;\n    border-top: 20px solid green;\n`;\n\nexport const IndicatorWrapper = styled.div`\n    grid-area: indicator;\n    @media (min-width: 1024px) {\n        display: grid;\n    }\n    display: none;\n    flex-direction: column;\n    text-align: center;\n    vertical-align: middle;\n    justify-content: center;\n    margin: auto;\n    padding: auto;\n`;\n","import React from 'react';\nimport AlertRowGraph from '../../components/AlertRowGraph';\nimport {ThemeContext} from '../../../../theme-context';\nimport {\n    Wrapper,\n    WrapperHovered,\n    HeaderWrapper,\n    Name,\n    Code,\n    Percentage,\n    IndicatorWrapper,\n    IndicatorUp,\n    IndicatorDown,\n    PercentageChanged,\n    PercentageCurrent,\n    Graph,\n    More,\n} from './style';\n\n/**\n * Renders a given row in the alert & anomalies widget.\n */\nconst AlertRow = props => (\n    <ThemeContext.Consumer>\n        {theme =>\n            props.header ? (\n                <HeaderWrapper {...theme}>\n                    <div className=\"code\">code</div>\n                    <div className=\"company-name\">company-name</div>\n                    <div className=\"percentage\">change</div>\n                    <div className=\"idicator\" />\n                    <div className=\"history\">history</div>\n                </HeaderWrapper>\n            ) : props.selectedRow === props.code ? (\n                <WrapperHovered {...theme}>\n                    <Code>\n                        <div className=\"code\">{props.code}</div>\n                    </Code>\n                    <Name>{props.name}</Name>\n                    <Percentage>\n                        <PercentageCurrent>{props.current}%</PercentageCurrent>\n                        <PercentageChanged value={props.changed}>\n                            {props.changed}%\n                        </PercentageChanged>\n                    </Percentage>\n                    <IndicatorWrapper>\n                        {props.changed > 0 ? (\n                            <IndicatorUp />\n                        ) : (\n                            <IndicatorDown />\n                        )}\n                    </IndicatorWrapper>\n                    <Graph>\n                        <AlertRowGraph\n                            changeDirection={props.changed > 0}\n                            data={props.recent_history}\n                        />\n                    </Graph>\n                </WrapperHovered>\n            ) : (\n                <Wrapper onMouseOver={props.handleSelect} {...theme}>\n                    <Code>\n                        <div className=\"code\">{props.code}</div>\n                    </Code>\n                    <Name>{props.name}</Name>\n                    <Percentage>\n                        <PercentageCurrent>{props.current}%</PercentageCurrent>\n                        <PercentageChanged value={props.changed}>\n                            {props.changed}%\n                        </PercentageChanged>\n                    </Percentage>\n                    <IndicatorWrapper>\n                        {props.changed > 0 ? (\n                            <IndicatorUp />\n                        ) : (\n                            <IndicatorDown />\n                        )}\n                    </IndicatorWrapper>\n                    <Graph>\n                        <AlertRowGraph\n                            changeDirection={props.changed > 0}\n                            data={props.recent_history}\n                        />\n                    </Graph>\n                </Wrapper>\n            )\n        }\n    </ThemeContext.Consumer>\n);\n\nexport default AlertRow;\n","import styled from 'styled-components';\n\nexport const duration = 500;\nexport const transitionStyles = {\n    entering: {opacity: 0, Ypos: 500},\n    entered: {opacity: 1, Ypos: 0},\n    exited: {opacity: 0},\n};\nexport const Wrapper = styled.div`\n    border-radius: 5px;\n    border: 1px solid ${props => props.widgetBorderColor};\n    opacity: ${props => props.opacity};\n    transition: ${props => `${props.duration}ms ease-in-out`};\n    transition-property: opacity, transform;\n    transform: ${props => `translateY(${props.Ypos}px)`};\n    background: ${props => props.widgetBackgroundColor};\n    display: grid;\n    grid-template-rows: 45px 40px 1fr 60px;\n    grid-template-areas:\n        'header'\n        'header-names'\n        'rows'\n        'more';\n    float: left;\n    vertical-align: middle;\n    flex-direction: column;\n    text-align: center;\n    grid-area: top-alerts;\n    height: 100%;\n`;\nexport const Header = styled.div`\n    grid-area: header;\n    font-size: 22px;\n    margin-top: 10px;\n    font-family: Avenir Next, sans-serif;\n    font-weight: bold;\n`;\nexport const HeaderRow = styled.div`\n    grid-area: header-names;\n`;\nexport const More = styled.div`\n    grid-area: more;\n    height: 50px;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    font-size: 22px;\n    font-weight: bold;\n    background: ${props => props.widgetRowBackgroundColor};\n    border: 1px solid ${props => props.widgetRowBorderColor};\n    border-radius: 0 0 5px 5px;\n    margin: 2px;\n    margin-left: 7px;\n    margin-right: 7px;\n    justify-content: center;\n    font-family: Avenir Next, sans-serif;\n    &:hover {\n        transform: scale(1.02);\n    }\n`;\nexport const Rows = styled.div`\n    grid-area: rows;\n    display: flex;\n    flex-direction: column;\n`;\n","import React from 'react'\nimport Transition from 'react-transition-group/Transition'\nimport AlertRow from '../AlertRow'\nimport { ThemeContext } from '../../../../theme-context'\nimport {\n  duration,\n  transitionStyles,\n  Wrapper,\n  Header,\n  HeaderRow,\n  More,\n  Rows\n} from './style'\n/**\n * Responsible for the rendering/display of \"alerts\" which represent anomalous changes in short positions for a given stock.\n */\nclass Alerts extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      inside: false,\n      selected: false\n    }\n  }\n  componentDidMount () {\n    this.toggleEnterState()\n  }\n\n  toggleEnterState () {\n    this.setState({ inside: true })\n  }\n  handleRowSelect (value) {\n    this.setState({ selected: value })\n  }\n  handleMouseLeave () {\n    this.setState({\n      selected: false\n    })\n  }\n\n  render () {\n    const alerts = this.props.data.map(alert => (\n      <AlertRow\n        row\n        handleSelect={() => this.handleRowSelect(alert.code)}\n        selectedRow={this.state.selected}\n        key={alert.code}\n        {...alert}\n      />\n    ))\n    return (\n      <ThemeContext.Consumer>\n        {theme => (\n          <Transition timeout={duration} in appear>\n            {state => {\n              return (\n                <Wrapper\n                  onMouseLeave={() => this.handleMouseLeave()}\n                  {...theme}\n                  duration={duration}\n                  {...transitionStyles[state]}\n                >\n                  <Header {...theme}>\n                    Alerts & Anomalies\n                  </Header>\n                  <HeaderRow {...theme}>\n                    <AlertRow header />\n                  </HeaderRow>\n                  <Rows>{alerts}</Rows>\n                  <More {...theme}>Show More </More>\n                </Wrapper>\n              )\n            }}\n          </Transition>\n        )}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nexport default Alerts\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    vertical-align: middle;\n    align-self: center;\n    justify-self: center;\n    background: transparent;\n    .buttons {\n        display: flex;\n        align-self: center;\n        justify-self: center;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n    width: 25px;\n    height: 25px;\n    display: flex;\n    justify-content: center; /* align horizontal */\n    align-items: center; /* align vertical */\n    margin: 5px;\n    border-radius: 2px;\n    color: ${props => props.color};\n    background: ${props =>\n        props.selected ? props.buttonSelected : props.buttonUnselected};\n    outline: 0;\n    font-size: 12px;\n    font-family: 'Avenir Next,Segoe UI', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n    font-weight: bold;\n`;\n","import React from 'react';\nimport {Wrapper} from './style';\n\nconst Button = props => (\n    <Wrapper\n        {...props.theme}\n        selected={props.selected}\n        onClick={() => props.handleSelect(props.value)}>\n        {props.value}\n    </Wrapper>\n);\n\nexport default Button;\n","import React from 'react';\nimport {Wrapper} from './style';\nimport Button from '../../../../components/Button';\n\n/**\n * WindowPicker\n * Responsible for providing a time window selector across a range of values including 1d, 1w, 1m, 1y etc.\n * will set the container state which will adjust the query. This will be set by a uni-directional handler passed\n * down as a prop.\n *\n */\n\nclass WindowPicker extends React.Component {\n    render() {\n        const {options, selectedOption, onSelect, theme} = this.props;\n        const buttons = options.values.map(value => (\n            <Button\n                theme={theme}\n                key={value}\n                value={value}\n                selected={value === selectedOption}\n                handleSelect={onSelect}\n            />\n        ));\n        return (\n            <Wrapper {...theme}>\n                <div className=\"buttons\">{buttons}</div>\n            </Wrapper>\n        );\n    }\n}\n\nexport default WindowPicker;\n","import styled from 'styled-components';\n\n// dropdown wrapper\nexport const Wrapper = styled.div`\n    margin-top: auto;\n    margin-bottom: auto;\n    margin-left: auto;\n    margin-right: 10px;\n    display: inline-block;\n    position: relative;\n`;\nexport const buttonStyle = {\n    fontSize: 25,\n    fill: 'black',\n    color: 'black',\n};\nexport const Button = styled.div`\n    width: 30px;\n    height: 30px;\n    margin-right: 7px;\n    padding-top: 10px;\n    display: inline-block;\n    position: relative;\n`;\n// dropdown-content\nexport const OptionsWrapper = styled.div`\n    padding: 5px;\n    display: ${props => (props.open ? `flex` : `none`)};\n    position: absolute;\n    z-index: 1;\n    background: white;\n    right: 0;\n    border-radius: 5px;\n    border: 1px solid #eee;\n    min-width: 160px;\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n    flex-direction: column;\n    text-align: center;\n    align-items: center;\n    .chart-modes {\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n        width: 130px;\n    }\n`;\nexport const Option = styled.div`\n    font-size: 15px;\n    font-family: Avenir Next, sans-serif;\n    font-weight: 300;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n`;\nexport const OptionHeader = styled.div`\n    font-size: 20px;\n    color: black;\n    font-family: Avenir Next, sans-serif;\n    font-weight: bold;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n`;\n\nexport const OptionWrapper = styled.div``;\n\nexport const radioStyle = {\n    display: 'block',\n    height: '30px',\n    lineHeight: '30px',\n    margin: 4,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Radio, Icon} from 'antd';\n// TODO: look at how antd style sheets can be inherently added into project without imports, plugin may be doing this\nimport 'antd/dist/antd.css';\n\nimport { ThemeContext } from '../../../../theme-context';\nimport {\n    Button,\n    OptionsWrapper,\n    OptionHeader,\n    Wrapper,\n    radioStyle,\n    buttonStyle,\n} from './style';\n\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\n\nconst Options = props => (\n    <ThemeContext.Consumer>\n                { theme => (\n    <OptionsWrapper {...props}>\n        <OptionHeader {...theme} >Chart display</OptionHeader>\n        <div className=\"chart-modes\">\n            <RadioGroup\n                onChange={e => props.onOptionsChange(e.target.value)}\n                defaultValue=\"NORMAL\"\n                buttonStyle=\"solid\">\n                <RadioButton style={radioStyle} value=\"NORMAL\">\n                    Normal\n                </RadioButton>\n                <RadioButton style={radioStyle} value=\"CANDLE\">\n                    CandleStick\n                </RadioButton>\n                <RadioButton style={radioStyle} value=\"SMOOTHED\">\n                    Smoothed\n                </RadioButton>\n                <RadioButton style={radioStyle} value=\"AREA\">\n                    Area\n                </RadioButton>\n            </RadioGroup>\n        </div>\n    </OptionsWrapper>)}\n    </ThemeContext.Consumer>\n);\n\nclass ChartOptions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.optionsArea = React.createRef();\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    }\n    onComponentDidUnmount() {\n        document.removeEventListener('click', e => this.handleOutsideClick(e));\n    }\n    handleOutsideClick(e) {\n        const chartOptionsArea = ReactDOM.findDOMNode(this);\n        // chartOptionsArea = this.node\n        if (chartOptionsArea.contains(e.target)) {\n            return;\n        }\n        this.handleSelect();\n    }\n\n    handleSelect() {\n        if (!this.state.open) {\n            // attach/remove event handler\n            document.addEventListener('click', this.handleOutsideClick, false);\n        } else {\n            document.removeEventListener(\n                'click',\n                this.handleOutsideClick,\n                false,\n            );\n        }\n        this.setState(prevState => ({\n            open: !prevState.open,\n        }));\n    }\n    handleOptionsChange(e, v) {\n        console.log(e, v);\n    }\n\n    render() {\n        return (\n            <ThemeContext.Consumer>\n                { theme => (\n                <Wrapper>\n                    <Button onClick={() => this.handleSelect()}>\n                        <Icon type=\"setting\" style={{fontSize: 30, fill: theme.color, color: theme.color}} />\n                    </Button>\n                    <Options\n                        onOptionsChange={v => this.props.onChartOptionChange(v)}\n                        open={this.state.open}\n                    />\n                </Wrapper>)\n                }\n            </ThemeContext.Consumer>\n        );\n    }\n}\n\nexport default ChartOptions;\n","import styled from 'styled-components';\n\nexport const SummaryWrapper = styled.div`\n    display: grid;\n    background: ${props => props.background};\n    .content {\n        display: grid;\n\n        @media only screen and (min-width: 1024px) {\n            grid-gap: 5px;\n            grid-template-columns: 1fr 0.5fr;\n            grid-template-areas:\n                'top-graph top-right'\n                'top-graph top-right'\n                'top-alerts top-movers'\n                'top-alerts top-movers'\n                'top-list top-list';\n        }\n        @media only screen and (min-width: 1280px) {\n            grid-gap: 10px;\n            grid-template-columns: 2fr 2fr 2fr 2fr;\n            grid-template-rows: 0.1fr 0.2fr 0.7fr 0.7fr;\n            grid-template-areas:\n                'top-list top-graph top-graph top-right'\n                'top-list top-graph top-graph todo'\n                'top-list top-alerts top-alerts top-movers'\n                'top-list top-alerts top-alerts top-movers';\n        }\n    }\n    .top-right {\n        grid-area: top-right;\n        display: grid;\n        grid-gap: 10px;\n        grid-template-rows: repeat(3, 85px);\n        grid-template-columns: 1fr;\n        grid-template-areas:\n            'legend'\n            'legend'\n            'legend'\n            'legend';\n    }\n`;\n\nexport const duration = 300;\n\nexport const transitionStyles = {\n    entering: {opacity: 0},\n    entered: {opacity: 1},\n    exited: {opacity: 0},\n};\n\nexport const themes = [\n    {\n        name: 'dark',\n        textColor: '#ffffff',\n        backgroundColor: '#000000',\n    },\n    {\n        name: 'light',\n        textColor: '#000000',\n        backgroundColor: '#ffffff',\n    },\n];\n","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport ShortedAPI from '../../services/sapi/client';\nimport TopChartVictory from './components/TopChartVictory';\nimport MoversList from './components/MoversList';\nimport TopShortsList from './components/TopShortsList';\nimport Legend from './components/Legend';\nimport Alerts from './components/Alerts';\nimport WindowPicker from '././components/WindowPicker';\nimport ChartOptions from './components/ChartOptions';\nimport { ThemeContext } from '../../theme-context';\nimport {SummaryWrapper, duration, transitionStyles} from './style';\n\n/**\n * View:TopShorts\n * Overarching container for the top short view.\n * Showing the following key widgets/displays:\n *  * top 10 short positions graphically.\n *  * table of top short position changes\n *  * alerts/anomalies\n *  * reactive-widget on hover/select of a given graph\n * TODO:\n * * add Transitions of components such as window picker, graph and background etc.\n * * add graph integration via recharts etc.\n * * add legend component for on-select animation/effect\n * * refactor data management, should be moved to top level potentially with dumber components\n *\n */\n\nclass Summary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new ShortedAPI();\n        this.state = {\n            options: {\n                values: ['d', 'w', 'm', 'y'],\n            },\n            selectedWindowOption: 'w',\n            selectedCode: false,\n            selectedChartOption: 'NORMAL',\n            inside: false,\n        };\n    }\n    handleWindowOptionSelected(value) {\n        this.setState({\n            selectedWindowOption: value,\n        });\n    }\n    handleChartOptionChange(value) {\n        this.setState({selectedChartOption: value});\n    }\n    handleSelectCode(value) {\n        this.setState({\n            selectedCode: value,\n        });\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    toggleEnterState() {\n        this.setState({inside: true});\n    }\n    render() {\n        const {\n            options,\n            selectedChartOption,\n            selectedWindowOption,\n            selectedCode,\n        } = this.state;\n        return (<ThemeContext.Consumer>\n            {theme => (\n            <Transition timeout={duration} in appear>\n                {state => {\n                    return (\n                        <SummaryWrapper {...this.props.theme}>\n                            <div className=\"content\">\n                                <TopShortsList\n                                    theme={theme}\n                                    data={this.apiClient.getTopShortsList(20)}\n                                />\n                                <TopChartVictory\n                                    picker={\n                                        <WindowPicker\n                                            theme={theme}\n                                            options={options}\n                                            selectedOption={\n                                                selectedWindowOption\n                                            }\n                                            onSelect={value =>\n                                                this.handleWindowOptionSelected(\n                                                    value,\n                                                )\n                                            }\n                                        />\n                                    }\n                                    options={\n                                        <ChartOptions\n                                            onChartOptionChange={value =>\n                                                this.handleChartOptionChange(\n                                                    value,\n                                                )\n                                            }\n                                        />\n                                    }\n                                    data={this.apiClient.getTopShorts(\n                                        selectedWindowOption,\n                                    )}\n                                    mode={selectedChartOption}\n                                    selectedWindowOption={selectedWindowOption}\n                                    selectedCode={selectedCode}\n                                    onSelectCode={value =>\n                                        this.handleSelectCode(value)\n                                    }\n                                />\n                                <div className=\"top-right\">\n                                    <Legend\n                                        theme={this.props.theme}\n                                        code={selectedCode}\n                                    />\n                                </div>\n                                <Alerts\n                                    theme={theme}\n                                    data={this.apiClient.getTopAlerts()}\n                                />\n                                <MoversList\n                                    theme={this.props.theme}\n                                    data={this.apiClient.getMovers(\n                                        selectedWindowOption,\n                                    )}\n                                />\n                            </div>\n                        </SummaryWrapper>\n                    );\n                }}\n            </Transition>)}\n            </ThemeContext.Consumer>\n        );\n    }\n}\n\nexport default Summary;\n","import styled from 'styled-components';\nexport const themes = {\n    light: {\n        color: 'black',\n        background: 'white',\n        fill: 'white',\n        stroke: 'black',\n        buttonSelected: '#5fa0dd',\n        buttonUnselected: '#7d7d7d',\n    },\n    dark: {\n        color: 'white',\n        background: '#001529',\n        stroke: 'white',\n        buttonSelected: '#1890ff',\n        buttonUnselected: '#001529',\n    },\n};\nexport const DashboardWrapper = styled.div`\n    display: grid;\n    background: ${props => props.background};\n    grid-template-columns: ${props => props.width} 1fr;\n    grid-template-rows: 100px 70px 80px 50px 1fr;\n    grid-template-areas:\n        'logo top-nav'\n        'collapse content'\n        'theme content'\n        'nav content'\n        'nav content';\n`;\nexport const ThemeWrapper = styled.div`\n    width: ${props => props.width};\n    grid-area: theme;\n    color: ${props => props.textColor};\n    background: ${props => props.background};\n`;\nexport const HeaderWrapper = styled.div`\n    grid-area: top-nav;\n    background: ${props => props.background};\n    align-self: center;\n    margin-left: 30px;\n`;\nexport const SearchBarWrapper = styled.div`\n    font-size: 16px;\n`;\nexport const DashboardNavbarWrapper = styled.div`\n    grid-area: nav;\n    width: ${props => props.width};\n    display: block;\n    background: ${props => props.background};\n    .menu {\n        background: ${props => props.background};\n    }\n`;\nexport const NavBarCollapseButton = styled.div`\n    grid-area: collapse;\n    height: 70px;\n    padding-top: 10px;\n    width: ${props => props.width};\n    background: ${props => props.background};\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    align-content: center;\n    vertical-align: middle;\n    text-align: center;\n`;\nexport const ContentWrapper = styled.div`\n    grid-area: content;\n    padding-left: 20px;\n    padding-right: 20px;\n    padding-bottom: 20px;\n    background: ${props => props.background};\n    color: ${props => props.color};\n    height: 1300px;\n`;\n","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport {Menu, Icon, Switch, Button} from 'antd';\nimport 'antd/dist/antd.css';\nimport {ThemeContext, themes} from '../../theme-context';\nimport Logo from '../../components/Logo';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport SearchBar from '../../components/SearchBar3';\nimport ThemeSwitch from '../../components/ThemeSwitch';\nimport Sectors from '../../views/sectors';\nimport Alerts from '../../views/alerts';\nimport Seasonality from '../../views/seasonality';\nimport Movers from '../../views/movers';\nimport Summary from '../../views/summary';\nimport {\n    DashboardWrapper,\n    SearchBarWrapper,\n    ContentWrapper,\n    DashboardNavbarWrapper,\n    ThemeWrapper,\n    HeaderWrapper,\n    NavBarCollapseButton,\n} from './style';\n\nconst SubMenu = Menu.SubMenu;\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            theme: 'dark',\n            current: 'SUMMARY',\n            collapsed: false,\n        };\n    }\n    changeTheme = value => {\n        console.log(value);\n        this.setState({\n            theme: value ? 'dark' : 'light',\n        });\n    };\n    handleClick = e => {\n        console.log('click ', e);\n        this.setState({\n            current: e.key,\n        });\n    };\n    toggleCollapsed = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n    getView(selection, theme) {\n        switch (selection) {\n            case 'SECTORS':\n                return (\n                    <ErrorBoundary>\n                        <Sectors theme={theme} />\n                    </ErrorBoundary>\n                );\n            case 'MOVERS':\n                return (\n                    <ErrorBoundary>\n                        <Movers theme={theme} />\n                    </ErrorBoundary>\n                );\n            case 'ALERTS':\n                return (\n                    <ErrorBoundary>\n                        <Alerts theme={theme} />\n                    </ErrorBoundary>\n                );\n            case 'SEASONALITY':\n                return (\n                    <ErrorBoundary>\n                        <Seasonality theme={theme} />\n                    </ErrorBoundary>\n                );\n            case 'SUMMARY':\n                return (\n                    <ErrorBoundary>\n                        <Summary theme={theme} />\n                    </ErrorBoundary>\n                );\n            default:\n                return (\n                    <ErrorBoundary>\n                        <Summary theme={theme} />\n                    </ErrorBoundary>\n                );\n        }\n    }\n\n    render() {\n        console.log(this.state.theme);\n        return (\n            <ThemeContext.Provider value={themes[this.state.theme].style}>\n                <ThemeContext.Consumer>\n                    {theme => {\n                        console.log(theme);\n                        return (\n                            <DashboardWrapper\n                                {...theme}\n                                width={this.state.collapsed ? `80px` : `200px`}>\n                                <HeaderWrapper {...theme}>\n                                    <SearchBarWrapper>\n                                        <SearchBar />\n                                    </SearchBarWrapper>\n                                </HeaderWrapper>\n                                <Logo\n                                    collapsed={this.state.collapsed}\n                                    theme={theme}\n                                />\n                                <NavBarCollapseButton\n                                    {...theme}\n                                    width={\n                                        this.state.collapsed ? `80px` : `200px`\n                                    }>\n                                    <Button\n                                        type=\"primary\"\n                                        onClick={this.toggleCollapsed}\n                                        style={{width: 50}}>\n                                        <Icon\n                                            type={\n                                                this.state.collapsed\n                                                    ? 'menu-unfold'\n                                                    : 'menu-fold'\n                                            }\n                                        />\n                                    </Button>\n                                </NavBarCollapseButton>\n                                <ThemeWrapper\n                                    {...theme}\n                                    width={\n                                        this.state.collapsed ? `80px` : `200px`\n                                    }>\n                                    <ThemeSwitch\n                                        theme={theme.name}\n                                        checked={this.state.theme}\n                                        changeTheme={value =>\n                                            this.changeTheme(value)\n                                        }\n                                    />\n                                </ThemeWrapper>\n                                <DashboardNavbarWrapper\n                                    {...theme}\n                                    width={\n                                        this.state.collapsed ? `80px` : `200px`\n                                    }>\n                                    <Menu\n                                        className=\"menu\"\n                                        inlineCollapsed={this.state.collapsed}\n                                        theme={this.state.theme}\n                                        onClick={this.handleClick}\n                                        defaultOpenKeys={['sub1']}\n                                        selectedKeys={[this.state.current]}\n                                        mode=\"inline\">\n                                        <Menu.Item key=\"SUMMARY\">\n                                            <Icon type=\"pie-chart\" />\n                                            <span>Summary</span>\n                                        </Menu.Item>\n                                        <Menu.Item key=\"SECTORS\">\n                                            <Icon type=\"desktop\" />\n                                            <span>Sector Breakdown</span>\n                                        </Menu.Item>\n                                        <Menu.Item key=\"SEASONALITY\">\n                                            <Icon type=\"inbox\" />\n                                            <span>Seasonality</span>\n                                        </Menu.Item>\n                                        <Menu.Item key=\"ALERTS\">\n                                            <Icon type=\"warning\" />\n                                            <span>Alerts</span>\n                                        </Menu.Item>\n                                        <Menu.Item key=\"MOVERS\">\n                                            <Icon type=\"line-chart\" />\n                                            <span>Movers</span>\n                                        </Menu.Item>\n                                    </Menu>\n                                </DashboardNavbarWrapper>\n                                <ContentWrapper {...theme}>\n                                    {this.getView(this.state.current, theme)}\n                                </ContentWrapper>\n                            </DashboardWrapper>\n                        );\n                    }}\n                </ThemeContext.Consumer>\n            </ThemeContext.Provider>\n        );\n    }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport {injectGlobal} from 'styled-components';\nimport Dashboard from '../views/dashboard';\n\ninjectGlobal`\n  body {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    outline: 0;\n  }\n`;\n/**\n * IndexPage\n * Top level home-page, unifies all child views such as page1/page2/page3/page4 into a streamlined scroll experience etc.\n *\n */\nconst IndexPage = () => <Dashboard />;\n\nexport default IndexPage;\n","import styled from 'styled-components';\n\nexport const NoResults = styled.div``;\nexport const ResultRowWrapper = styled.div`\n    display: grid;\n    grid-gap: 10px;\n    margin-left: 10px;\n    grid-template-rows: 1fr;\n    grid-template-columns: 45px 1fr;\n    grid-template-areas: 'code name';\n    height: 35px;\n    background: ${props => (props.selected ? '#d9d9d9' : 'white')};\n`;\nexport const ResultRowIndustryHeader = styled.div`\n    display: flex;\n    font-weight: bold;\n    font-size: 20px;\n    margin-left: 5px;\n`;\nexport const ResultsShowMore = styled.a`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    font-weight: bold;\n    font-size: 30px;\n    background: ${props => props.searchResultsMoreBackgroundColor};\n    color: ${props => props.searchResultsMoreColor};\n    align-items: center;\n    text-decoration: none !important;\n`;\nexport const ResultRowCode = styled.div`\n    grid-area: code;\n    background: gray;\n    color: white;\n    align-self: center;\n    text-align: center;\n`;\nexport const ResultRowName = styled.div`\n    grid-area: name;\n    text-align: left;\n    align-self: center;\n`;\n\nexport const SearchResultsWrapper = styled.div``;\n","export const elasticsearchConfig = {\n    hostname: `${process.env.ELASTICSEARCH_PROXY_MODE}://${process.env.ELASTICSEARCH_PROXY_HOST}:${process.env.ELASTICSEARCH_PROXY_PORT}${process.env.ELASTICSEARCH_PROXY_PREFIX}/`,\n    index: 'companies',\n    authentication: {\n      username: 'elastic',\n      password: 'changeme',\n    },\n  };","import axios from 'axios';\nimport {elasticsearchConfig} from 'src/config';\n\nimport {searchQuery} from './queries';\n\nexport function parseResults(response) {\n    if (response.status !== 200) {\n        return null;\n    }\n    console.log(response);\n    return {\n        hits: response.data.hits.total,\n        max_score: response.data.hits.max_score,\n        items: response.data.hits.hits,\n    };\n}\nexport function checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n        return response;\n    }\n    const error = new Error(response.statusText);\n    error.response = response;\n    throw error;\n}\n\n/**\n * [search description]\n * @param  {[string]} searchString text entered into search bar\n * @return {[type]}              response from elasticsearch\n */\nexport function search(searchString, size = 20) {\n    const path = `${elasticsearchConfig.index}/_search`;\n    const session = axios.create({\n        baseURL: elasticsearchConfig.hostname,\n        auth: elasticsearchConfig.authentication,\n        headers: {'Content-Type': 'application/json'},\n    });\n\n    const body = {\n        size: size,\n        query: searchQuery(searchString),\n    };\n    return session\n        .post(path, body)\n        .then(checkStatus)\n        .then(parseResults);\n}\n","export function searchQuery(searchString) {\n    return {\n        bool: {\n            should: [\n                {\n                    match_phrase_prefix: {\n                        name: {\n                            query: searchString,\n                            max_expansions: 10,\n                            slop: 10,\n                        },\n                    },\n                },\n                {\n                    match: {\n                        name: {\n                            query: searchString,\n                            fuzziness: 'AUTO',\n                            operator: 'and',\n                            prefix_length: 1,\n                        },\n                    },\n                },\n                {\n                    term: {\n                        'code.raw': {\n                            value: searchString,\n                            boost: 2.0,\n                        },\n                    },\n                },\n            ],\n        },\n    };\n}\n"],"sourceRoot":""}