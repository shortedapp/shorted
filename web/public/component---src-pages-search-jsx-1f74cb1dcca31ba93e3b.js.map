{"version":3,"sources":["webpack:///./src/views/search/components/SearchResults/style.js","webpack:///./src/views/search/components/SearchResults/index.jsx","webpack:///./src/views/search/components/SearchBar/style.js","webpack:///./src/views/search/components/SearchBar/index.jsx","webpack:///./src/views/search/style.js","webpack:///./src/views/search/index.jsx","webpack:///./src/pages/search.jsx","webpack:///./src/theme-context.js","webpack:///./src/components/Logo/style.js","webpack:///./src/components/Logo/index.jsx","webpack:///./src/components/SearchResults3/style.js","webpack:///./src/config.js","webpack:///./src/services/elasticsearch/client.js","webpack:///./src/services/elasticsearch/queries.js"],"names":["NoResults","styled_components_browser_esm","div","withConfig","displayName","ResultRowWrapper","ResultRowWrapperHovered","ResultRowIndustryHeader","ResultRowImage","a","props","searchResultsMoreBackgroundColor","searchResultsMoreColor","ResultRowCode","ResultRowName","SearchResultsWrapper","SearchResults_ResultRow","row","react_default","createElement","onMouseOver","handleHover","icon","type","theme","style","fontSize","code","name","rowHovered","selected","components_SearchResults","SearchResults","_this","_React$Component","call","this","state","rowLimit","selectedRow","componentDidMount","setState","isLoading","onHover","render","_this2","resultsStructured","data","items","reduce","acc","item","hasOwnProperty","_source","industry","push","structuredResultsView","_arr","Object","entries","_i","length","_arr$_i","key","results","map","result","resultsView","theme_context","Consumer","query","Component","transitionStyles","entering","opacity","width","entered","exited","CustomInput","input","focused","duration","SearchBarWrapper","searchBarBackgroundFocused","searchBarBackgroundUnfocused","searchBarBorderFocused","searchBarBorderUnfocused","SearchBarIconWrapper","searchIconBackgroundFocused","searchIconBackgroundUnfocused","SearchBarClearIconWrapper","searchClearIconBackgroundFocused","searchClearIconBackgroundUnfocused","PrimaryColumn","components_SearchBar","button","SearchBar","error","handleOutsideClick","bind","assertThisInitialized_default","escFunction","e","react_dom_default","findDOMNode","contains","target","prevState","handleSelect","event","keyCode","document","addEventListener","componentWillUnmount","removeEventListener","onFocus","onClick","onBlur","assign","fill","searchIconColorFocused","searchIconColorUnfocused","color","onClear","searchClearIconColor","visibility","Transition_default","in","timeout","unmountOnExit","autoFocus","placeholder","onChange","onQueryChange","value","SearchWrapper","SearchHeaderWrapper","SearchResultWrapper","LogoWrapper","style_SearchBarWrapper","search","Search","changeTheme","handleClick","current","toggleCollapsed","collapsed","handleQueryChange","fetchResults","handleClear","_this3","client","then","catch","_this4","Provider","Logo","_templateObject","__webpack_exports__","__webpack_require__","d","themes","ThemeContext","react__WEBPACK_IMPORTED_MODULE_0__","light","textTitleColor","textSubTitleColor","textColor","background","widgetBorder","widgetBackgroundColor","widgetRowBackgroundColor","widgetRowBorderColor","graphBackground","stroke","upStroke","downStroke","buttonSelected","buttonUnselected","axisColor","searchResultsDropdownBoarder","dark","widgetBorderColor","n","createContext","Wrapper","img","LogoTextWrapper","span","Logo_LogoSvg","height","marginLeft","marginTop","viewBox","xmlns","transform","strokeWidth","href","ResultsShowMore","styled_components__WEBPACK_IMPORTED_MODULE_0__","elasticsearchConfig","hostname","NODE_ENV","PUBLIC_DIR","BUILD_STAGE","GATSBY_BUILD_STAGE","ELASTICSEARCH_PROXY_MODE","ELASTICSEARCH_PROXY_HOST","ELASTICSEARCH_PROXY_PORT","ELASTICSEARCH_PROXY_PREFIX","index","authentication","username","password","parseResults","response","status","hits","total","max_score","checkStatus","Error","statusText","searchString","size","path","session","axios_default","create","baseURL","auth","headers","Content-Type","body","bool","should","match_phrase_prefix","max_expansions","slop","match","fuzziness","operator","prefix_length","term","code.raw","boost","searchQuery","post"],"mappings":"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","file":"component---src-pages-search-jsx-1f74cb1dcca31ba93e3b.js","sourcesContent":["import styled from 'styled-components';\n\nexport const NoResults = styled.div``;\nexport const ResultRowWrapper = styled.div`\n    display: grid;\n    grid-gap: 10px;\n    margin: 10px;\n    margin-left: 10px;\n    border: 1px solid black;\n    grid-template-rows: 1fr;\n    grid-template-columns: 70px 45px 1fr;\n    grid-template-areas: 'image code name';\n    height: 70px;\n    width: 100%;\n    background: white;\n    transition-duration: 0.1s;\n`;\nexport const ResultRowWrapperHovered = styled.div`\n    display: grid;\n    grid-gap: 10px;\n    margin: 10px;\n    margin-left: 10px;\n    border: 1px solid black;\n    grid-template-rows: 1fr;\n    grid-template-columns: 70px 45px 1fr;\n    grid-template-areas: 'image code name';\n    height: 70px;\n    width: 100%;\n    background: '#d9d9d9';\n    transition-duration: 0.1s;\n    -webkit-box-shadow: -3px 4px 7px 0px rgba(0, 0, 0, 0.25);\n    -moz-box-shadow: -3px 4px 7px 0px rgba(0, 0, 0, 0.25);\n    box-shadow: -3px 4px 7px 0px rgba(0, 0, 0, 0.25);\n    transform: scale(1.03);\n`;\nexport const ResultRowIndustryHeader = styled.div`\n    display: flex;\n    font-weight: bold;\n    font-size: 20px;\n    margin-left: 5px;\n`;\nexport const ResultsShowMore = styled.a`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    font-weight: bold;\n    font-size: 30px;\n    background: ${props => props.searchResultsMoreBackgroundColor};\n    color: ${props => props.searchResultsMoreColor};\n    align-items: center;\n    text-decoration: none !important;\n`;\nexport const ResultRowImage = styled.div`\n    grid-area: image;\n    align-self: center;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    justify-content: center;\n`;\nexport const ResultRowCode = styled.div`\n    grid-area: code;\n    background: gray;\n    height: 30px;\n    color: white;\n    align-self: center;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    justify-content: center;\n`;\nexport const ResultRowName = styled.div`\n    grid-area: name;\n    text-align: left;\n    align-self: center;\n`;\n\nexport const SearchResultsWrapper = styled.div`\n    width: 100%;\n`;\n","import React from 'react';\nimport {Icon} from 'antd';\nimport {\n    ResultRowIndustryHeader,\n    ResultRowWrapperHovered,\n    ResultsShowMore,\n    ResultRowImage,\n    ResultRowName,\n    ResultRowCode,\n    ResultRowWrapper,\n    SearchResultsWrapper,\n    NoResults,\n} from './style';\n\nimport {ThemeContext} from 'src/theme-context';\nconst ResultRow = props => {\n    const row = (\n        <ResultRowWrapper onMouseOver={props.handleHover}>\n            <ResultRowImage>\n                <Icon\n                    type=\"picture\"\n                    theme=\"filled\"\n                    style={{\n                        fontSize: '60px',\n                    }}\n                />\n            </ResultRowImage>\n            <ResultRowCode>{props.row.code}</ResultRowCode>\n            <ResultRowName>{props.row.name}</ResultRowName>\n        </ResultRowWrapper>\n    );\n    const rowHovered = (\n        <ResultRowWrapperHovered onMouseOver={props.handleHover}>\n            <ResultRowImage>\n                <Icon\n                    type=\"picture\"\n                    theme=\"filled\"\n                    style={{\n                        fontSize: '60px',\n                    }}\n                />\n            </ResultRowImage>\n            <ResultRowCode>{props.row.code}</ResultRowCode>\n            <ResultRowName>{props.row.name}</ResultRowName>\n        </ResultRowWrapperHovered>\n    );\n    return props.selected ? rowHovered : row;\n};\nclass SearchResults extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rowLimit: 10,\n            selectedRow: null,\n        };\n    }\n    componentDidMount() {\n        this.setState({isLoading: true});\n    }\n    onHover(code) {\n        console.log(code);\n        this.setState({selectedRow: code});\n    }\n    render() {\n        const resultsStructured = this.props.data\n            ? this.props.data.items.reduce((acc, item) => {\n                  acc.hasOwnProperty(item._source.industry)\n                      ? acc[item._source.industry].push(item)\n                      : (acc[item._source.industry] = [item]);\n                  return acc;\n              }, {})\n            : null;\n        const structuredResultsView = [];\n        if (this.props.data) {\n            for (const [key, results] of Object.entries(resultsStructured)) {\n                structuredResultsView.push(\n                    <ResultRowIndustryHeader>{key}</ResultRowIndustryHeader>,\n                );\n                results.map(result =>\n                    structuredResultsView.push(\n                        <ResultRow\n                            handleHover={() =>\n                                this.onHover(result._source.code)\n                            }\n                            selected={\n                                this.state.selectedRow === result._source.code\n                            }\n                            key={result._source.code}\n                            row={result._source}\n                        />,\n                    ),\n                );\n            }\n        }\n        const resultsView = this.props.data ? (\n            this.props.data.items.map(result => (\n                <ResultRow\n                    handleHover={() => this.onHover(result._source.code)}\n                    selected={this.state.selectedRow === result._source.code}\n                    key={result._source.code}\n                    row={result._source}\n                />\n            ))\n        ) : (\n            <NoResults>No Results Found</NoResults>\n        );\n        return (\n            <ThemeContext.Consumer>\n                {theme => (\n                    <SearchResultsWrapper>\n                        {resultsView.length > 0 ? (\n                            resultsView\n                        ) : this.props.query.length > 0 ? (\n                            <NoResults>No Results Found</NoResults>\n                        ) : null}\n                    </SearchResultsWrapper>\n                )}\n            </ThemeContext.Consumer>\n        );\n    }\n}\n\nexport default SearchResults;\n","import styled from 'styled-components';\n\nexport const duration = 100;\n\nexport const transitionStyles = {\n    entering: {opacity: 0, width: 0},\n    entered: {opacity: 1, width: 310},\n    exited: {opacity: 0, width: 0},\n};\n\nexport const CustomInput = styled.input`\n    font-size: 1em;\n    text-align: left;\n    height: 50px;\n    border-radius: ${props => (props.focused ? 15 : 15)}px;\n    background: transparent;\n    position: absolute;\n    z-index: 20;\n    padding: 0.5em;\n    padding-right: 45px;\n    padding-left: 55px;\n    display: block;\n    width: ${props => (props.focused ? `100%` : `100%`)};\n    transition: ${props => `${props.duration}ms ease-in`};\n    transition-property: width, opacity, transform;\n    /* transition: opacity 250ms 500ms, visibility 250ms 500ms; */\n    outline: none;\n    border: none;\n    &:focus {\n        outline: none;\n    }\n`;\n\nexport const SearchBarWrapper = styled.div`\n    display: flex;\n    height: 50px;\n    align-items: stretch;\n    background: ${props =>\n        props.focused\n            ? props.searchBarBackgroundFocused\n            : props.searchBarBackgroundUnfocused};\n    border: 2px solid\n        ${props =>\n            props.focused\n                ? props.searchBarBorderFocused\n                : props.searchBarBorderUnfocused};\n    border-radius: ${props => (props.focused ? 15 : 50)}px;\n    width: 100%;\n    transition-duration: 0.5s;\n    top: 30px;\n    z-index: 20;\n`;\n\nexport const SearchBarIconWrapper = styled.div`\n    position: absolute;\n    border-radius: 50px;\n    display: grid;\n    background: ${props =>\n        props.focused\n            ? props.searchIconBackgroundFocused\n            : props.searchIconBackgroundUnfocused};\n    align-items: center;\n    width: ${props => (props.focused ? 40 : 45)}px;\n    height: ${props => (props.focused ? 40 : 45)}px;\n    align-self: center;\n    margin-left: 10px;\n    transition-duration: 150ms;\n    z-index: 22;\n`;\nexport const SearchBarClearIconWrapper = styled.div`\n    border-radius: 50px;\n    display: grid;\n    background: ${props =>\n        props.focused\n            ? props.searchClearIconBackgroundFocused\n            : props.searchClearIconBackgroundUnfocused};\n    align-items: center;\n    align-self: center;\n    margin-left: 96%;\n    transition-duration: 150ms;\n    z-index: 22;\n`;\n\nexport const PrimaryColumn = styled.div`\n    flex: 2;\n    width: 100%;\n    display: flex;\n    border-radius: 50px;\n    background: transparent;\n`;\nexport const SecondaryColumn = styled.div`\n    flex: 1;\n`;\nexport const Button = styled.button`\n    display: flex;\n    justify-content: center; /* align horizontal */\n    align-items: center; /* align vertical */\n    outline: 0;\n    height: 100%;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Transition from 'react-transition-group/Transition';\nimport SearchResults from '../SearchResults';\nimport {ThemeContext} from 'src/theme-context';\nimport {Icon} from 'antd';\nimport {\n    SearchBarWrapper,\n    SearchBarIconWrapper,\n    SearchBarClearIconWrapper,\n    CustomInput,\n    PrimaryColumn,\n    transitionStyles,\n    duration,\n} from './style';\n\n/**\n * SearchBar\n * THis component is responsible for the rendering of the searchbar view at the top of the header bar. It provides a dropdown list of items\n * matching the elastically searched results entering into the search bar\n * interacts with elastisearch for querying\n * TODO:\n * * handle mobile compaction of navbar component\n *\n */\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: '',\n            error: false,\n            focused: false,\n            results: null,\n            isLoading: false,\n        };\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\n        this.escFunction = this.escFunction.bind(this);\n    }\n    handleOutsideClick(e) {\n        const searchBar = ReactDOM.findDOMNode(this);\n        if (searchBar.contains(e.target)) {\n            this.setState(prevState => ({\n                focused: true,\n            }));\n            return false;\n        }\n        this.handleSelect(e);\n        this.setState(prevState => ({\n            focused: false,\n        }));\n    }\n    escFunction(event) {\n        if (event.keyCode === 27) {\n            this.setState(prevState => ({\n                focused: false,\n            }));\n        }\n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.escFunction, false);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.escFunction, false);\n    }\n    handleSelect(e) {\n        if (!this.state.focused) {\n            // attach/remove event handler\n            document.addEventListener('click', this.handleOutsideClick, false);\n            this.setState(prevState => ({\n                focused: true,\n            }));\n        } else {\n            const searchBar = ReactDOM.findDOMNode(this);\n            if (searchBar.contains(e.target)) {\n                this.setState(prevState => ({\n                    focused: true,\n                }));\n            } else {\n                document.removeEventListener(\n                    'click',\n                    this.handleOutsideClick,\n                    false,\n                );\n            }\n        }\n    }\n    onFocus() {\n        // this.setState(prevState => ({\n        //     focused: !prevState.focused,\n        // }));\n    }\n    onClick() {\n        this.setState({focused: true});\n        // this.onFocus();\n    }\n    onBlur() {\n        if (this.props.query !== '') {\n            this.setState({focused: false});\n        } else {\n            this.setState(prevState => ({\n                focused: !prevState.focused,\n            }));\n        }\n    }\n\n    render() {\n        console.log(this.props.query);\n        return (\n            <ThemeContext.Consumer>\n                {theme => (\n                    <SearchBarWrapper\n                        onClick={e => this.handleSelect(e)}\n                        {...theme}\n                        {...this.state}>\n                        <PrimaryColumn {...theme}>\n                            <SearchBarIconWrapper {...theme} {...this.state}>\n                                <Icon\n                                    fill={\n                                        this.state.focused\n                                            ? theme.searchIconColorFocused\n                                            : theme.searchIconColorUnfocused\n                                    }\n                                    style={{\n                                        fontSize: '25px',\n                                        color: this.state.focused\n                                            ? theme.searchIconColorFocused\n                                            : theme.searchIconColorUnfocused,\n                                    }}\n                                    type=\"search\"\n                                    theme=\"filled\"\n                                />\n                            </SearchBarIconWrapper>\n                            <SearchBarClearIconWrapper\n                                onClick={() => this.props.onClear()}>\n                                <Icon\n                                    fill={theme.searchClearIconColor}\n                                    style={{\n                                        fontSize: '15px',\n                                        visibility:\n                                            this.props.query !== '' &&\n                                            this.state.focused\n                                                ? 'visible'\n                                                : 'hidden',\n                                        color: theme.searchClearIconColor,\n                                    }}\n                                    type=\"close\"\n                                    theme=\"filled\"\n                                />\n                            </SearchBarClearIconWrapper>\n                            <Transition\n                                in={this.state.focused}\n                                timeout={duration}\n                                unmountOnExit>\n                                {state => (\n                                    <CustomInput\n                                        autoFocus\n                                        {...theme}\n                                        duration={duration}\n                                        {...transitionStyles[state]}\n                                        type=\"text\"\n                                        placeholder={\n                                            this.state.focused\n                                                ? 'Search for company'\n                                                : ''\n                                        }\n                                        onFocus={() => this.onFocus()}\n                                        onChange={e =>\n                                            this.props.onQueryChange(e)\n                                        }\n                                        value={this.props.query}\n                                    />\n                                )}\n                            </Transition>\n                        </PrimaryColumn>\n                    </SearchBarWrapper>\n                )}\n            </ThemeContext.Consumer>\n        );\n    }\n}\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nexport const SearchWrapper = styled.div`\n    display: grid;\n    grid-gap: 10px;\n    justify-content: center;\n    grid-template-rows: 140px 1fr 150px;\n    grid-template-columns: 1fr;\n    grid-template-areas:\n        'header'\n        'results'\n        'footer';\n`;\nexport const SearchHeaderWrapper = styled.div`\n    display: grid;\n    grid-area: header;\n    justify-self: center;\n    grid-gap: 10px;\n    margin-left: 10px;\n    width: 1100px;\n    grid-template-rows: 114px;\n    grid-template-columns: 220px 1fr;\n    grid-template-areas: 'logo searchbar';\n    height: 35px;\n    background: ${props => (props.selected ? '#d9d9d9' : 'white')};\n`;\nexport const SearchResultWrapper = styled.div`\n    display: flex;\n    grid-area: results;\n    width: 1100px;\n    justify-self: center;\n`;\nexport const LogoWrapper = styled.div`\n    grid-area: logo;\n`;\nexport const SearchBarWrapper = styled.div`\n    grid-area: searchbar;\n    width: 100%;\n    align-self: auto;\n    align-self: center;\n`;\n","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport {ThemeContext, themes} from '../../theme-context';\nimport {search} from 'src/services/elasticsearch/client';\nimport Logo from 'src/components/Logo';\nimport SearchBar from './components/SearchBar';\nimport SearchResults from './components/SearchResults';\nimport {\n    SearchWrapper,\n    SearchHeaderWrapper,\n    SearchResultWrapper,\n    SearchBarWrapper,\n    LogoWrapper,\n} from './style';\nimport {SearchResultsWrapper} from '../../components/SearchResults3/style';\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            theme: 'dark',\n            results: null,\n            query: '',\n        };\n    }\n    changeTheme = value => {\n        console.log(value);\n        this.setState({\n            theme: value ? 'dark' : 'light',\n        });\n    };\n    handleClick = e => {\n        console.log('click ', e);\n        this.setState({\n            current: e.key,\n        });\n    };\n    handleQueryChange(e) {\n        this.setState({query: e.target.value}, () => {\n            if (this.state.query && this.state.query.length > 1) {\n                this.fetchResults();\n            }\n        });\n    }\n    handleClear() {\n        this.setState({query: ''});\n    }\n    toggleCollapsed = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n    fetchResults() {\n        search(this.state.query)\n            .then(result =>\n                this.setState({\n                    results: result,\n                    isLoading: false,\n                }),\n            )\n            .catch(error =>\n                this.setState({\n                    error,\n                    isLoading: false,\n                }),\n            );\n    }\n\n    render() {\n        console.log(this.state.results);\n        return (\n            <ThemeContext.Provider value={themes[this.state.theme].style}>\n                <ThemeContext.Consumer>\n                    {theme => {\n                        return (\n                            <SearchWrapper {...theme}>\n                                <SearchHeaderWrapper>\n                                    <LogoWrapper>\n                                        <Logo />\n                                    </LogoWrapper>\n                                    <SearchBarWrapper>\n                                        <SearchBar\n                                            query={this.state.query}\n                                            onClear={() => this.handleClear()}\n                                            onQueryChange={query =>\n                                                this.handleQueryChange(query)\n                                            }\n                                        />\n                                    </SearchBarWrapper>\n                                </SearchHeaderWrapper>\n                                <SearchResultWrapper>\n                                    <SearchResults\n                                        query={this.state.query}\n                                        data={this.state.results}\n                                    />\n                                </SearchResultWrapper>\n                            </SearchWrapper>\n                        );\n                    }}\n                </ThemeContext.Consumer>\n            </ThemeContext.Provider>\n        );\n    }\n}\n\nexport default Search;\n","import React from 'react';\nimport {injectGlobal} from 'styled-components';\nimport Search from 'src/views/search';\n\ninjectGlobal`\n  body {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    outline: 0;\n  }\n`;\n/**\n * IndexPage\n * Top level home-page, unifies all child views such as page1/page2/page3/page4 into a streamlined scroll experience etc.\n *\n */\nconst SearchPage = () => <Search />;\n\nexport default SearchPage;\n","import React from 'react';\nexport const themes = {\n    light: {\n        name: 'light',\n        style: {\n            color: 'black',\n            textTitleColor: 'black',\n            textSubTitleColor: 'black',\n            textColor: 'black',\n            background: 'white',\n            widgetBorder: 'white',\n            widgetBackgroundColor: 'white',\n            widgetRowBackgroundColor: 'white',\n            widgetRowBorderColor: 'gray',\n            graphBackground: '#e7e7e7',\n            fill: 'white',\n            stroke: 'black',\n            upStroke: 'green',\n            downStroke: 'red',\n            buttonSelected: '#5fa0dd',\n            buttonUnselected: '#7d7d7d',\n            axisColor: 'black',\n            searchIconColorUnfocused: 'black',\n            searchIconBackgroundUnfocused: '#d9d9d9',\n            searchIconColorFocused: 'white',\n            searchIconBackgroundFocused: 'black',\n            searchBarBackgroundFocused: 'white',\n            searchBarBackgroundUnfocused: '#d9d9d9',\n            searchBarBorderUnfocused: 'gray',\n            searchBarBorderFocused: '#1890ff',\n            searchResultsDropdownBoarder: 'gray',\n            searchClearIconColor: '',\n            searchResultsMoreBackgroundColor: 'black',\n            searchResultsMoreColor: 'white',\n        },\n    },\n    dark: {\n        name: 'dark',\n        style: {\n            color: 'white',\n            textTitleColor: 'white',\n            textSubTitleColor: 'white',\n            textColor: 'white',\n            background: '#161616',\n            widgetBorderColor: '#1C1C1C',\n            widgetBackgroundColor: '#1F1F1F',\n            // widgetRowBackgroundColor: '#646464',\n            widgetRowBackgroundColor: '#242424',\n            widgetRowBorderColor: 'gray',\n            graphBackground: '#1F1F1F',\n            stroke: 'white',\n            upStroke: 'green',\n            downStroke: 'red',\n            buttonSelected: '#1890ff',\n            buttonUnselected: '#001529',\n            axisColor: 'white',\n            searchIconColorUnfocused: 'black',\n            searchIconBackgroundUnfocused: '#d9d9d9',\n            searchIconColorFocused: 'white',\n            searchIconBackgroundFocused: 'black',\n            searchBarBackgroundFocused: 'white',\n            searchBarBackgroundUnfocused: '#d9d9d9',\n            searchBarBorderUnfocused: 'gray',\n            searchBarBorderFocused: '#1890ff',\n            searchResultsDropdownBoarder: 'black',\n            searchClearIconColor: '',\n            searchResultsMoreBackgroundColor: 'black',\n            searchResultsMoreColor: 'white',\n        },\n    },\n};\n\nexport const ThemeContext = React.createContext(\n    themes.dark, // default value\n);\n","import styled from 'styled-components';\n\nexport const LogoImageWrapper = styled.img`\n    fill: #e7e6ea;\n`;\nexport const Wrapper = styled.a`\n    display: flex;\n    float: left;\n    text-decoration: none !important;\n    color: ${props => props.color};\n    background: ${props => props.background};\n`;\nexport const LogoTextWrapper = styled.span`\n    display: flex;\n    flex-direction: column-reverse;\n    font-size: 25px;\n    letter-spacing: 5px;\n    margin-left: 5px;\n    font-weight: bold;\n    font-family: Avenir Next, sans-serif;\n    color: ${props => (props.color ? props.color : 'gray')};\n    background: ${props => props.background};\n`;\n","import React from 'react';\nimport {Wrapper, LogoTextWrapper} from './style';\n/**\n * Renders a shorted.com.au logo and stylised layout, has the ability to collapse when presented in a collapsable\n * menu layout\n */\nconst LogoSvg = props => (\n    <div style={{ width: 70, height: 70, marginLeft: 10, marginTop: 10}}>\n    <svg\n            width={props.collapsed ? '80' : '90'}\n            height={props.collapsed ? '60' : '140'}\n            viewBox={props.collapsed ? \"0 0 120 100\" : \"0 0 150 160\"}\n            fill={props.fill}\n            xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n                d=\"M99.6329 0C116.928 36.6404 95.3979 104.487 77.7588 81.2665C27.049 14.5109 42.0704 93.1702 0 79.8191\"\n                transform=\"translate(114 4) scale(-1 1)\"\n                stroke={props.stroke}\n                strokeWidth=\"15\"\n            />\n        </svg>\n    </div>\n   \n);\nconst Logo = props => (\n    <Wrapper {...props.theme} href=\"/\">\n        <LogoSvg\n            collapsed={props.collapsed}\n            fill=\"none\"\n            stroke={props.theme ? props.theme.stroke : 'gray'}\n        />\n        {props.collapsed ? null : (\n            <LogoTextWrapper {...props.theme}>shorted</LogoTextWrapper>\n        )}\n    </Wrapper>\n);\n\nexport default Logo;\n","import styled from 'styled-components';\n\nexport const NoResults = styled.div``;\nexport const ResultRowWrapper = styled.div`\n    display: grid;\n    grid-gap: 10px;\n    margin-left: 10px;\n    grid-template-rows: 1fr;\n    grid-template-columns: 45px 1fr;\n    grid-template-areas: 'code name';\n    height: 35px;\n    background: ${props => (props.selected ? '#d9d9d9' : 'white')};\n`;\nexport const ResultRowIndustryHeader = styled.div`\n    display: flex;\n    font-weight: bold;\n    font-size: 20px;\n    margin-left: 5px;\n`;\nexport const ResultsShowMore = styled.a`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    font-weight: bold;\n    font-size: 30px;\n    background: ${props => props.searchResultsMoreBackgroundColor};\n    color: ${props => props.searchResultsMoreColor};\n    align-items: center;\n    text-decoration: none !important;\n`;\nexport const ResultRowCode = styled.div`\n    grid-area: code;\n    background: gray;\n    color: white;\n    align-self: center;\n    text-align: center;\n`;\nexport const ResultRowName = styled.div`\n    grid-area: name;\n    text-align: left;\n    align-self: center;\n`;\n\nexport const SearchResultsWrapper = styled.div``;\n","export const elasticsearchConfig = {\n    hostname: `${process.env.ELASTICSEARCH_PROXY_MODE}://${process.env.ELASTICSEARCH_PROXY_HOST}:${process.env.ELASTICSEARCH_PROXY_PORT}${process.env.ELASTICSEARCH_PROXY_PREFIX}/`,\n    index: 'companies',\n    authentication: {\n      username: 'elastic',\n      password: 'changeme',\n    },\n  };","import axios from 'axios';\nimport {elasticsearchConfig} from 'src/config';\n\nimport {searchQuery} from './queries';\n\nexport function parseResults(response) {\n    if (response.status !== 200) {\n        return null;\n    }\n    console.log(response);\n    return {\n        hits: response.data.hits.total,\n        max_score: response.data.hits.max_score,\n        items: response.data.hits.hits,\n    };\n}\nexport function checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n        return response;\n    }\n    const error = new Error(response.statusText);\n    error.response = response;\n    throw error;\n}\n\n/**\n * [search description]\n * @param  {[string]} searchString text entered into search bar\n * @return {[type]}              response from elasticsearch\n */\nexport function search(searchString, size = 20) {\n    const path = `${elasticsearchConfig.index}/_search`;\n    const session = axios.create({\n        baseURL: elasticsearchConfig.hostname,\n        auth: elasticsearchConfig.authentication,\n        headers: {'Content-Type': 'application/json'},\n    });\n\n    const body = {\n        size: size,\n        query: searchQuery(searchString),\n    };\n    return session\n        .post(path, body)\n        .then(checkStatus)\n        .then(parseResults);\n}\n","export function searchQuery(searchString) {\n    return {\n        bool: {\n            should: [\n                {\n                    match_phrase_prefix: {\n                        name: {\n                            query: searchString,\n                            max_expansions: 10,\n                            slop: 10,\n                        },\n                    },\n                },\n                {\n                    match: {\n                        name: {\n                            query: searchString,\n                            fuzziness: 'AUTO',\n                            operator: 'and',\n                            prefix_length: 1,\n                        },\n                    },\n                },\n                {\n                    term: {\n                        'code.raw': {\n                            value: searchString,\n                            boost: 2.0,\n                        },\n                    },\n                },\n            ],\n        },\n    };\n}\n"],"sourceRoot":""}