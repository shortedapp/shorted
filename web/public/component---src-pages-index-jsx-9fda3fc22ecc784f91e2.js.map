{"version":3,"sources":["webpack:///./src/components/TopChartVictory/style.js","webpack:///./src/components/TopChartVictory/index.jsx","webpack:///./src/components/MoversListRow/style.js","webpack:///./src/components/MoversListRow/index.jsx","webpack:///./src/components/MoversList/style.js","webpack:///./src/components/MoversList/index.jsx","webpack:///./src/components/TopShortsListRow/style.js","webpack:///./src/components/TopShortsListRow/index.jsx","webpack:///./src/components/TopShortsList/style.js","webpack:///./src/components/TopShortsList/index.jsx","webpack:///./src/components/LegendCompanyCode/style.js","webpack:///./src/components/LegendCompanyCode/index.jsx","webpack:///./src/components/LegendCompanyLogo/style.js","webpack:///./src/components/LegendCompanyLogo/index.jsx","webpack:///./src/components/LegendCompanyPE/style.js","webpack:///./src/components/LegendCompanyPE/index.jsx","webpack:///./src/components/LegendCompanyMarketCap/style.js","webpack:///./src/components/LegendCompanyMarketCap/index.jsx","webpack:///./src/components/Legend/style.js","webpack:///./src/components/Legend/index.jsx","webpack:///./src/components/AlertRowGraph/style.js","webpack:///./src/components/AlertRowGraph/index.jsx","webpack:///./src/components/AlertRow/style.js","webpack:///./src/components/AlertRow/index.jsx","webpack:///./src/components/Alerts/style.js","webpack:///./src/components/Alerts/index.jsx","webpack:///./src/components/ThemePicker/style.js","webpack:///./src/components/ThemePicker/index.jsx","webpack:///./src/components/WindowPicker/style.js","webpack:///./src/components/Button/style.js","webpack:///./src/components/Button/index.jsx","webpack:///./src/components/WindowPicker/index.jsx","webpack:///./src/views/dashboard/style.js","webpack:///./src/views/dashboard/index.jsx","webpack:///./src/pages/index.jsx"],"names":["transitionStyles","entering","opacity","Ypos","entered","exited","Wrapper","styled_components_browser_esm","a","div","withConfig","displayName","props","duration","PickerWrapper","colors700","components_TopChartVictory","TopChartVictory","_this","_React$Component","call","this","apiClient","client","state","inside","componentDidMount","toggleEnterState","setState","n","handleLineHover","e","key","console","log","onSelectCode","render","_this2","selectedOption","fixtures","getTopShorts","data","length","lines","dataKeys","map","index","react_default","createElement","victory_line","x","y","events","target","eventHandlers","onMouseOver","style","stroke","strokeWidth","Transition_default","timeout","in","appear","Object","assign","picker","victory_chart","padding","top","left","right","bottom","height","containerComponent","victory_container","responsive","victory_axis","label","standalone","tickCount","axis","axisLabel","fontSize","fontFamily","ticks","size","tickLabels","dependentAxis","tickFormat","t","Math","round","tickLabelComponent","victory_label","textAnchor","domain","angle","Component","style_Wrapper","Name","Code","Percentage","PercentageCurrent","PercentageChanged","value","IndicatorUp","IndicatorDown","IndicatorWrapper","components_MoversListRow","className","code","name","current","change","style_transitionStyles","MoversList_style_Wrapper","Header","More","components_MoversList","MoversList","getMovers","rows","slice","row_data","TopShortsListRow_style_Wrapper","WrapperHovered","style_Name","style_Code","Percent","TopShortsListRow","isHovered","onHover","TopShortsList_style_transitionStyles","TopShortsList_style_Wrapper","style_Header","style_More","components_TopShortsList","TopShortsList","getTopShortsList","hovered","handleHover","handleMouseLeave","onMouseLeave","LegendCompanyCode_style_Wrapper","LegendCompanyCode_style_Code","LegendCompanyCode_style_Header","components_LegendCompanyCode","LegendCompanyLogo_style_Wrapper","Image","img","components_LegendCompanyLogo","src","logo","LegendCompanyPE_style_Wrapper","PE","LegendCompanyPE_style_Header","components_LegendCompanyPE","pe","LegendCompanyMarketCap_style_Wrapper","LegendCompanyMarketCap_style_Header","Chart","components_LegendCompanyMarketCap","LegendCompanyMarketCap","getTickValues","Date","text","fontWeight","width","getFullYear","Legend_style_transitionStyles","Legend_style_Wrapper","UnselectedWrapper","CompanySector","CompanyName","components_Legend","Legend","componentDidUpdate","prevProps","getStockSummary","getStockLogo","metadata","sector","marketCap","AlertRowGraph_style_Wrapper","components_AlertRowGraph","AlertRowGraph","victory_area","interpolation","fill","fillOpacity","AlertRow_style_Wrapper","AlertRow_style_Name","AlertRow_style_Code","style_Percentage","style_PercentageCurrent","style_PercentageChanged","style_IndicatorUp","style_IndicatorDown","style_IndicatorWrapper","components_AlertRow","changed","recent_history","Alerts_style_transitionStyles","Alerts_style_Wrapper","Alerts_style_Header","components_Alerts","Alerts","getTopAlerts","alerts","alert","ThemePicker_style_Wrapper","ThemePicker_style_Header","ThemeItemWrapper","backgroundColor","textColor","ThemeItems","ThemePicker_ThemeItem","components_ThemePicker","themes","theme","WindowPicker_style_Wrapper","Button_style_Wrapper","button","selected","components_Button","onClick","handleSelect","components_WindowPicker","_this$props","options","onSelect","buttons","values","DashboardWrapper","dashboard_style_transitionStyles","dashboard","Dashboard","selectedCode","handleOptionSelected","handleSelectCode","_this$state","AppViewWrapper","background","header_background_default","period","b","injectGlobal","__webpack_exports__","default"],"mappings":"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","file":"component---src-pages-index-jsx-9fda3fc22ecc784f91e2.js","sourcesContent":["import styled from 'styled-components';\nexport const duration = 500;\nexport const transitionStyles = {\n  entering: { opacity: 0, Ypos: 500},\n  entered: { opacity: 1, Ypos: 0},\n  exited: { opacity: 0}\n};\n\nexport const Wrapper = styled.div`\n    grid-area: top-graph;\n    opacity: ${props => props.opacity};\n    transition: ${props => `${props.duration}ms ease-in-out`};\n    transition-property: opacity, transform;\n    transform: ${props => `translateY(${props.Ypos}px)`};\n    max-width: 1200px;\n    background-color: white;\n    border-radius: 15px;\n    border: 1px solid #eee;\n    .g.recharts-layer.recharts-cartesian-axis.recharts-yAxis.yAxis > text {\n      color: red;\n    }\n    .recharts-text .recharts-label {\n      color: red;\n    }\n`\nexport const PickerWrapper = styled.div`\n`\nexport const intervals = {\n  d: 2,  \n  w: 7,\n  m: 40,\n  y: 100\n\n  \n}\nexport const colors700 = [\n  \"#D32F2F\",\n  \"#303F9F\",\n  \"#00796B\",\n  \"#388E3C\",\n  \"#388E3C\",\n  \"#F57C00\",\n  \"#455A64\",\n  \"#5D4037\",\n  \"#C2185B\",\n  \"#7B1FA2\",\n  \"#00796B\",\n  \"#7B1FA2\",\n  \"#C2185B\"\n]\nexport const colors300 = [\n  \"#E57373\",\n  \"#F06292\",\n  \"#7986CB\",\n  \"#9575CD\",\n  \"#7986CB\",\n  \"#64B5F6\",\n  \"#F06292\",\n  \"#E57373\",\n  \"#FFB74D\",\n  \"#BCAAA4\",\n  \"#FFF176\"\n]","import React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryLabel, VictoryContainer, VictoryLine } from 'victory';\nimport Transition from 'react-transition-group/Transition';\nimport ShortedAPI from '../../services/sapi/client';\nimport {\n    duration,\n    transitionStyles,\n    Wrapper,\n    PickerWrapper,\n    colors700 } from './style';\n/**\n * Chart\n * Component responsible for rendering the page1 graphic displaying the top short positions\n * TODO:\n *   * add more styling to graph currently nothing present\n *   * add more intelligent x-axis ticks as windowpicker is changed\n *   * refactor to use victory charts\n *   * multiple display modes such as candleStick etc.\n *   * implement brush and zoom\n *   * implement select to zoom\n *   * implement hover filtering/hiding other lines\n * \n * \n */\nclass TopChartVictory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new ShortedAPI()\n        this.state = {\n            inside: false,\n        }\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    \n    toggleEnterState() {\n        this.setState({ inside: true });\n    }\n    handleLineHover(e, key) {\n        console.log(e, key)\n        this.props.onSelectCode(key)\n    }\n\n    render() {\n        const { selectedOption } = this.props;\n        const fixtures = this.apiClient.getTopShorts(selectedOption)\n        console.log(fixtures.data.length)\n        const lines = fixtures.dataKeys.map( (key, index) => <VictoryLine\n                key={key}\n                data={fixtures.data}\n                x=\"date\"\n                y={key}\n                events={\n                    [{\n                        target: \"parent\",\n                        eventHandlers: {\n                            onMouseOver: (e) => this.handleLineHover(e, key)\n                        }\n                    }]\n                }\n                style={{\n                    data: {\n                        stroke: colors700[index],\n                        strokeWidth: 2\n                    }\n                }} />)\n        return (\n        <Transition timeout={duration} in={true} appear={true}>\n            {\n                state => {\n                    return (\n                    <Wrapper\n                        duration={duration}\n                        {...transitionStyles[state]}\n                    >\n                    <PickerWrapper >\n                        {this.props.picker}\n                    </PickerWrapper>\n                        <VictoryChart padding={{ top: 0, left: 40, right: 20, bottom: 50 }} height={310}\n                        containerComponent={<VictoryContainer responsive={true}/>}\n                        >\n                            {lines}\n                            <VictoryAxis\n                                label=\"Time\"\n                                standalone={false}\n                                tickCount={5}\n                                style={{\n                                    axis: {stroke: \"#756f6a\"},\n                                    axisLabel: {fontSize: 12, padding: 25, fontFamily: 'Avenir Next,sans-serif'},\n                                    ticks: {stroke: \"grey\", size: 5},\n                                    tickLabels: {fontSize: 7, padding: 5}\n                                }}\n                             />\n                             <VictoryAxis dependentAxis\n                                tickFormat={(t) => `${Math.round(t)}`}\n                                tickLabelComponent={<VictoryLabel textAnchor=\"middle\" />}\n                                domain={[0, 100]}\n                                label=\"Percentage Shorted\"\n                                style={{\n                                    axisLabel: { fontSize: 12, padding: 32, angle: 90, fontFamily: 'Avenir Next,sans-serif'},\n                                    ticks: {stroke: \"grey\", size: 5},\n                                    tickLabels: {fontSize: 7,  angle: 90, padding: 7 } }} \n\n                                />\n                        </VictoryChart>\n                    </Wrapper>)\n                }\n            }\n        </Transition>\n        )\n    }\n}\n\nexport default TopChartVictory;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    grid-template-rows: repeat(2, 1fr);\n    grid-template-areas:\n        \"code name name name percentage indicator\"\n        \"code name name name percentage indicator\";\n    margin: 2px;\n    margin-left: 7px;\n    margin-right: 7px;\n    height: 51px;\n    background: #e2e2e2;\n    padding-top: 4px;\n    padding-bottom: 4px;\n`;\n\nexport const Name = styled.div`\n    grid-area: name;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n`\n\nexport const Code = styled.div`\n    grid-area: code;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    .code {\n            background-color: gray;\n            width: 60px;\n            height: 45px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            vertical-align: middle;\n            text-align: center;\n            margin-left: 5px;\n        }\n`\nexport const Percentage = styled.div`\n    grid-area: percentage;\n    display: grid;\n    grid-template-rows: repeat(2, 1fr);\n    grid-gap: 1px;\n    grid-template-areas:\n        \"current\"\n        \"changed\";\n`\nexport const PercentageCurrent = styled.div`\n    grid-area: current;\n    font-size: 22px;\n    font-weight: bold;\n    font-family: Avenir Next,sans-serif;\n\n`\nexport const PercentageChanged = styled.div`\n    grid-area: changed;\n    margin-left: 17px;\n    font-weight: bold;\n    font-family: Avenir Next,sans-serif;\n    color: ${props => props.value > 0 ? `red`: `green`};\n    padding-bottom: 10px;\n`\nexport const IndicatorUp = styled.div`\n    width: 0; \n    height: 0;\n    border-left: 30px solid transparent;\n    border-right: 30px solid transparent;\n    border-bottom: 30px solid red;\n    `\nexport const IndicatorDown = styled.div`\n\n    width: 0; \n    height: 0; \n    border-left: 30px solid transparent;\n    border-right: 30px solid transparent;\n    border-top: 30px solid green;\n`\n\nexport const IndicatorWrapper = styled.div`\n    grid-area: indicator;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    vertical-align: middle;\n    justify-content: center;\n\n`\n","import React from 'react';\n\nimport {\n    Wrapper,\n    Name,\n    Code,\n    Percentage,\n    IndicatorWrapper,\n    IndicatorUp,\n    IndicatorDown,\n    PercentageChanged,\n    PercentageCurrent } from './style';\n\n/**\n * Renders a given row in the alert & anomalies widget.\n */\nconst MoversListRow = (props) =>  (\n    <Wrapper>\n        <Code><div className=\"code\">{props.code}</div></Code>\n        <Name>{props.name}</Name>\n        <Percentage>\n            <PercentageCurrent>{props.current}%</PercentageCurrent>\n            <PercentageChanged value={props.change} >{props.change}%</PercentageChanged>\n        </Percentage>\n        <IndicatorWrapper>\n        {props.change > 0 ? <IndicatorUp /> : <IndicatorDown/>}\n        </IndicatorWrapper>\n    </Wrapper>\n)\n\nexport default MoversListRow;","import styled from 'styled-components';\n\nexport const duration = 500;\nexport const transitionStyles = {\n    entering: { opacity: 0, Ypos: 500},\n    entered: { opacity: 1, Ypos: 0},\n    exited: { opacity: 0}\n  };\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  grid-area: top-movers;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  border-radius: 15px;\n  border: 1px solid black;\n  opacity: ${props => props.opacity};\n  transition: ${props => `${props.duration}ms ease-in-out`};\n  transition-property: opacity, transform;\n  transform: ${props => `translateY(${props.Ypos}px)`};\n`\nexport const Header = styled.div`\n  height: 50px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 35px;\n  font-weight: bold;\n  font-family: Avenir Next,sans-serif;\n`\nexport const More = styled.div`\n  height: 50px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 35px;\n  font-weight: bold;\n  background: #dadada;\n  border-radius: 0 0 15px 15px;\n  margin: 4px;\n  justify-content: center;\n  font-family: Avenir Next,sans-serif;\n`","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport ShortedAPI from '../../services/sapi/client';\nimport MoversListRow from '../../components/MoversListRow';\nimport { Wrapper, Header, More, duration, transitionStyles } from './style';\n/**\n * Renders a list of TopShortsListRow components. These rows will display the stock code, stock name, and percentage shorted\n * for the top say 20 stocks. With a \"show more\" button present at the bottom, taking them to a different view which will me dedicated to showing more short position\n * information for more stocks (maybe top 100). Will perhaps a more verbose set of properties and graphics.\n */\nclass MoversList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.apiClient = new ShortedAPI()\n        this.state = {\n            data: this.apiClient.getMovers('m').data,\n            inside: false,\n        }\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    \n    toggleEnterState() {\n        this.setState({ inside: true });\n    }\n\n    render() {\n        const rows = this.state.data.slice(0,5).map((row_data) => <MoversListRow key={row_data.code} {...row_data} />)\n        return  (\n            <Transition timeout={duration} in={true} appear={true}>\n            {\n                state => {\n                    return (\n                    <Wrapper\n                        duration={duration}\n                        {...transitionStyles[state]}\n                    >\n                        <Header>Top Movers</Header>\n                        {rows}\n                        <More>show more</More>\n                    </Wrapper>\n                    )\n                }\n            }\n            </Transition>\n        )\n    }\n}\n\nexport default MoversList;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-areas:\n    \"code name name name percentage\";\n    margin: 4px;\n    margin-left: 7px;\n    margin-right: 4px;\n    height: 51px;\n    background: #dadada;\n    border-radius: 0 30px 30px 0;\n    padding-top: 4px;\n    padding-bottom: 6px;\n    margin-bottom: 6px;\n`\nexport const WrapperHovered = styled.div`\n    display: grid;\n    z-index: 10;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-areas:\n    \"code name name name percentage\";\n    margin: 4px;\n    margin-left: 7px;\n    margin-right: 4px;\n    height: 51px;\n    background: #dadada;\n    border-radius: 0 15px 15px 0;\n    padding-top: 4px;\n    padding-bottom: 6px;\n    margin-bottom: 6px;\n    -webkit-box-shadow: -3px 4px 7px 0px rgba(0,0,0,0.75);\n    -moz-box-shadow: -3px 4px 7px 0px rgba(0,0,0,0.75);\n    box-shadow: -3px 4px 7px 0px rgba(0,0,0,0.75);\n\n`\n\nexport const Name = styled.div`\n    grid-area: name;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n`\n\nexport const Code = styled.div`\ngrid-area: code;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nvertical-align: middle;\n.code {\n        background-color: gray;\n        width: 60px;\n        height: 45px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        vertical-align: middle;\n        text-align: center;\n        margin-left: 5px;\n    }\n`\n\nexport const Percent = styled.div`\ngrid-area: percentage;\nfloat: right;\nmargin-left: auto;\npadding-right: 5px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nvertical-align: middle;\n\n.circle {\n    background: #f98080;\n    height: 51px;\n    width: 51px;\n    border-radius: 50px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n    font-size: 15px;\n}\n`","import React from 'react';\n\nimport {\n    Wrapper,\n    WrapperHovered,\n    Code,\n    Name,\n    Percent\n    } from './style';\n\n/**\n * Renders a specfiic row that is contained within the TopSHortList view. This will show\n * the current short percentage of a given stock within the top x number of short positions\n * takes a data prop which contains the following payload:\n * data = {\n *  name: \"JBHIFI LIMITED\",\n *  code: \"JBH\",\n *  percentage: 19.6\n * }\n */\n\nconst TopShortListRow = (props) => {\n    return (\n        props.isHovered ? (\n            <WrapperHovered {...props} onMouseOver={props.onHover}>\n                <Code><div className=\"code\">{props.code}</div></Code>\n                <Name>{props.name}</Name>\n                <Percent><div className=\"circle\" >{props.current}%</div></Percent>\n            </WrapperHovered>) : (\n            <Wrapper {...props} onMouseOver={props.onHover}>\n                <Code><div className=\"code\">{props.code}</div></Code>\n                <Name>{props.name}</Name>\n                <Percent><div className=\"circle\" >{props.current}%</div></Percent>\n            </Wrapper>)\n    )\n}\n\nexport default TopShortListRow;","import styled from 'styled-components';\n\nexport const duration = 500;\nexport const transitionStyles = {\n    entering: { opacity: 0, Ypos: 500},\n    entered: { opacity: 1, Ypos: 0},\n    exited: { opacity: 0}\n  };\n\nexport const Wrapper = styled.div`\n  height: 1400px;\n  grid-area: top-list;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  border-radius: 15px;\n  border: 1px solid #eee;\n  opacity: ${props => props.opacity};\n  transition: ${props => `${props.duration}ms ease-in-out`};\n  transition-property: opacity, transform;\n  transform: ${props => `translateY(${props.Ypos}px)`};\n`\nexport const Header = styled.div`\n  height: 50px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 35px;\n  font-weight: bold;\n  font-family: Avenir Next,sans-serif;\n`\nexport const More = styled.div`\n  height: 50px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 35px;\n  font-weight: bold;\n  background: #dadada;\n  border-radius: 0 0 15px 15px;\n  margin: 4px;\n  justify-content: center;\n  font-family: Avenir Next,sans-serif;\n`","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport ShortedAPI from '../../services/sapi/client';\nimport TopShortsListRow from '../../components/TopShortsListRow';\nimport { Wrapper, Header, More, duration, transitionStyles } from './style';\n/**\n * Renders a list of TopShortsListRow components. These rows will display the stock code, stock name, and percentage shorted\n * for the top say 20 stocks. With a \"show more\" button present at the bottom, taking them to a different view which will me dedicated to showing more short position\n * information for more stocks (maybe top 100). Will perhaps a more verbose set of properties and graphics.\n * TODO: \n *  * load profile on select of a specific stock in list\n */\nclass TopShortsList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.apiClient = new ShortedAPI()\n        this.state = {\n            data: this.apiClient.getTopShortsList(20),\n            inside: false,\n            hovered: false,\n        }\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    \n    toggleEnterState() {\n        this.setState({ inside: true });\n    }\n    handleHover(value) {\n        this.setState({hovered: value})\n    }\n    handleMouseLeave() {\n        this.setState({\n            hovered: false,\n        })\n    }\n\n    render() {\n        const rows = this.state.data.map(\n            (row_data) => <TopShortsListRow\n                            isHovered={this.state.hovered === row_data.code}\n                            onHover={() => this.handleHover(row_data.code)}\n                            key={row_data.code}\n                            {...row_data} \n        />)\n        return  (\n            <Transition timeout={duration} in={true} appear={true}>\n            {\n                state => {\n                    return (\n                    <Wrapper\n                        onMouseLeave={() => this.handleMouseLeave() }\n                        duration={duration}\n                        {...transitionStyles[state]}\n                    >\n                        <Header>Top Short List</Header>\n                        {rows}\n                        <More>show more</More>\n                    </Wrapper>\n                    )\n                }\n            }\n            </Transition>\n        )\n    }\n}\n\nexport default TopShortsList;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    background: white;\n    grid-area: company-code;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n`\n\nexport const Code = styled.div`\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n    font-size: 22px;\n    font-weight: 600;\n    font-family: Avenir Next,sans-serif;\n`\nexport const Header  = styled.div`\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n    font-size: 15px;\n    font-weight: bold;\n    font-family: Avenir Next,sans-serif;\n`","import React from 'react';\nimport { Wrapper, Code, Header } from './style';\n\n\n/**\n * Renders a nicely styled and dynamically scaling header for the legend view which will display the company icon/logo \n * as well as its stock code.\n * \n */\nconst LegendCompanyCode = (props) => (\n  <Wrapper>\n    <Header>Issuer code</Header>\n    <Code>{props.code}</Code>\n  </Wrapper>\n)\nexport default LegendCompanyCode;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    vertical-align: middle;\n    justify-content: center;\n    grid-area: company-logo;\n`\nexport const Image = styled.img`\n    width: 60px;\n    height: 60px;\n    margin-left: auto;\n\tmargin-right: auto;\n\tdisplay: block;\n`","import React from 'react';\nimport { Wrapper, Image } from './style';\n\n\n/**\n * Renders a nicely styled and dynamically scaling header for the legend view which will display the company icon/logo \n * as well as its stock code.\n * \n */\nconst LegendCompanyLogo = (props) => (\n  <Wrapper >\n    <Image src={props.logo} />\n  </Wrapper>\n)\nexport default LegendCompanyLogo;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    vertical-align: middle;\n    justify-content: center;\n    background: white;\n    grid-area: company-pe;\n`\n\nexport const PE = styled.div`\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n    font-size: 22px;\n    font-weight: 600;\n    font-family: Avenir Next,sans-serif;\n`\nexport const Header  = styled.div`\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n    font-size: 15px;\n    font-weight: bold;\n    font-family: Avenir Next,sans-serif;\n`","import React from 'react';\nimport { Wrapper, Header, PE } from './style';\n\n\n/**\n * Renders a nicely styled and dynamically scaling header for the legend view which will display the company icon/logo \n * as well as its stock code.\n * \n */\nconst LegendCompanyPE = (props) => (\n  <Wrapper>\n    <Header>P/E ratio</Header>\n    <PE>{props.pe}</PE>\n  </Wrapper>\n)\nexport default LegendCompanyPE;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    grid-area: company-mc;\n    background: white;\n    display: grid;\n    height: 180px;\n    grid-template-rows: 30px 170px;\n    grid-template-areas:\n        \"header\"\n        \"chart\";\n`\nexport const Header = styled.div`\n    grid-area: header;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n`\nexport const Chart = styled.div`\n    grid-area: chart;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    height: 150px;\n`","import React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryLabel, VictoryContainer, VictoryLine } from 'victory';\n// import { LineChart, Line, ResponsiveContainer } from 'recharts';\nimport { Wrapper, Header, Chart } from './style';\n\n\n/**\n * LegendCompanyMarketCap\n * \n */\nclass LegendCompanyMarketCap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  getTickValues() {\n    return [\n      new Date(2002, 1, 1),\n      new Date(2017, 1, 1),\n      new Date(2018, 1, 1)\n    ]\n  }\n\n  render() {\n    // return (\n    //   <Wrapper>\n    //     <ResponsiveContainer width='100%' height={170}>\n    //       <LineChart height={100} data={this.props.data} margin={{top: 30, right: 20, left: 20, bottom: 30}}>\n    //         <Line dot={false} isAnimationActive={false} type='linear' dataKey='value' stroke='#8884d8' strokeWidth={2} />\n    //       </LineChart>\n    //     </ResponsiveContainer>\n    //   </Wrapper>\n    // );\n    return (\n      <Wrapper>\n        <Header>\n          <VictoryLabel\n            text=\"Market Cap\"\n            style={{ fontSize: 20, fontWeight: 'bold', fontFamily: 'Avenir Next,sans-serif' }}\n          />\n        </Header>\n        <Chart>\n        <VictoryChart padding={{ top: 0, left: 40, right: 20, bottom: 50 }} height={200} width={580}\n          containerComponent={<VictoryContainer responsive={true}/>}\n        >\n          <VictoryLine data={this.props.data} />\n          <VictoryAxis tickCount={5} tickFormat={ (x) => new Date(x).getFullYear() } />\n        </VictoryChart>\n        </Chart>\n      </Wrapper>\n    )\n  }\n}\n\nexport default LegendCompanyMarketCap;\n","import styled from 'styled-components';\n\nexport const duration = 500;\nexport const transitionStyles = {\n    entering: { opacity: 0, Ypos: 500},\n    entered: { opacity: 1, Ypos: 0},\n    exited: { opacity: 0}\n};\nexport const Wrapper = styled.div`\n    opacity: ${props => props.opacity};\n    transition: ${props => `${props.duration}ms ease-in-out`};\n    transition-property: opacity, transform;\n    transform: ${props => `translateY(${props.Ypos}px)`};\n    border-radius: 4px;\n    grid-area: legend;\n    display: grid;\n    grid-gap: 10px;\n    grid-template-rows: 60px 60px 60px 60px 170px;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-areas:\n        \"company-name company-name company-name company-name\"\n        \"company-logo company-logo company-code company-code\"\n        \"company-logo company-logo company-pe company-pe\"\n        \"company-sector company-sector company-sector company-sector\"\n        \"company-mc company-mc company-mc company-mc\";\n`\nexport const UnselectedWrapper = styled.div`\n    opacity: ${props => props.opacity};\n    transition: ${props => `${props.duration}ms ease-in-out`};\n    transition-property: opacity, transform;\n    transform: ${props => `translateY(${props.Ypos}px)`};\n    grid-area: legend;\n    display: flex;\n    flex-direction: column;\n    vertical-align: middle;\n    justify-content: center;\n    text-align: center;\n    background: white;\n    border-radius: 4px;\n    height: 100%;\n    font-family: Avenir Next,sans-serif;\n    font-size: 30px;\n    font-weight: bold;\n    padding-left: 30px;\n    padding-right: 30px;\n`\nexport const CompanyHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    vertical-align: middle;\n    justify-content: center;\n    grid-area: company-header;\n`\nexport const CompanyMarketCap = styled.div`\n    grid-area: company-mc;\n    display: flex;\n    flex-direction: column;\n    vertical-align: middle;\n\n\n`\nexport const CompanySector = styled.div`\n    grid-area: company-sector;\n    display: flex;\n    background: white;\n    font-size: 1.3vh;\n    font-weight: bold;\n    font-family: Avenir Next,sans-serif;\n    text-align: center;\n    flex-direction: column;\n    vertical-align: middle;\n    justify-content: center;\n`\nexport const CompanyName = styled.div`\n    grid-area: company-name;\n    display: flex;\n    background: white;\n    font-size: 1.3vh;\n    font-weight: bold;\n    font-family: Avenir Next,sans-serif;\n    text-align: center;\n    flex-direction: column;\n    vertical-align: middle;\n    justify-content: center;\n`\n\n","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport LegendCompanyCode from '../../components/LegendCompanyCode';\nimport LegendCompanyLogo from '../../components/LegendCompanyLogo';\nimport LegendCompanyPE from '../../components/LegendCompanyPE';\nimport LegendCompanyMarketCap from '../../components/LegendCompanyMarketCap';\nimport {\n    Wrapper,\n    duration,\n    transitionStyles,\n    UnselectedWrapper,\n    CompanyName,\n    CompanySector } from './style';\nimport ShortedAPI from '../../services/sapi/client';\n/**\n * Renders a shorted.com.au logo\n * TODO: add data fetch here, async or prefetch based of top-short positions\n */\nclass Legend extends React.Component {\n    constructor(props) {\n        super(props)\n        this.apiClient = new ShortedAPI()\n        this.state = {\n            inside: false,\n            code: false,\n        }\n    }\n    componentDidUpdate(prevProps) {\n        // You don't have to do this check first, but it can help prevent an unneeded render\n        console.log(this.props.code)\n        console.log(prevProps.code)\n        if (prevProps.code !== this.props.code) {\n          this.setState({\n              code: this.props.code,\n              inside: false\n            });\n\n        }\n      }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    \n    toggleEnterState() {\n        this.setState({ inside: true });\n    }\n    render() {\n        const data = this.apiClient.getStockSummary(this.props.code)\n        const logo = this.apiClient.getStockLogo(this.props.code)\n        return (<Transition timeout={duration} in={true} appear={true}>\n        {\n            state => {\n                return (this.props.code ? (\n                    <Wrapper\n                        duration={duration}\n                        {...transitionStyles[state]}\n                    >\n                        <LegendCompanyLogo logo={logo} />\n                        <LegendCompanyCode code={this.props.code} />\n                        <LegendCompanyPE pe={data.data.PE} />\n                        <CompanyName>{data.metadata.name}</CompanyName>\n                        <CompanySector>{data.metadata.sector}</CompanySector>\n                        <LegendCompanyMarketCap data={data.data.marketCap} />\n                    </Wrapper>\n                    ) : (<UnselectedWrapper\n                            duration={duration}\n                            {...transitionStyles[state]}\n                        >\n                            <p>hover over graph to show profile</p>\n                        </UnselectedWrapper>))\n            }\n        }\n        </Transition>)\n    }\n}\n\nexport default Legend;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    grid-area: graph;\n    margin: 5px;\n    display: flex;\n    margin-right: 10px;\n    flex-direction:column;\n    text-align: center;\n    justify-content: center;\n    -webkit-box-shadow: 1px 1px 2px 0px rgba(181,181,181,1);\n    -moz-box-shadow: 1px 1px 2px 0px rgba(181,181,181,1);\n    box-shadow: 1px 1px 2px 0px rgba(181,181,181,1);\n\n`","import React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryArea, VictoryContainer } from 'victory';\n// import { LineChart, Line, ResponsiveContainer } from 'recharts';\nimport { Wrapper } from './style';\n\n\n/**\n * LegendCompanyMarketCap\n * \n */\nclass AlertRowGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n    console.log(this.props)\n  }\n  getTickValues() {\n    return [\n      new Date(2002, 1, 1),\n      new Date(2017, 1, 1),\n      new Date(2018, 1, 1)\n    ]\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <VictoryChart padding={{ top: 0, left: 0, right: 0, bottom: 0 }} height={100} width={400}\n          containerComponent={<VictoryContainer responsive={true}/>}\n        >\n          <VictoryArea\n            interpolation=\"natural\"\n            style={{\n              data: {\n                fill: \"#c0caff\",\n                strokeWidth: 2,\n                fillOpacity: \"0.4\",\n                stroke: \"#8396ff\"\n                }\n            }}\n            data={this.props.data} />\n            <VictoryAxis tickFormat={() => ''} style={{ axis: {stroke: \"none\"} }} />\n        </VictoryChart>\n      </Wrapper>\n    )\n  }\n}\n\nexport default AlertRowGraph;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    grid-template-columns: 90px 250px 100px 100px 100px;\n    grid-template-rows: repeat(2, 1fr);\n    grid-template-areas:\n        \"code name name percentage indicator graph\"\n        \"code name name percentage indicator graph\";\n    margin: 6px;\n    margin-left: 7px;\n    margin-right: 7px;\n    height: 80px;\n    background: #e2e2e2;\n    padding-top: 4px;\n    padding-bottom: 4px;\n`;\n\nexport const Name = styled.div`\n    grid-area: name;\n    display: flex;\n    font-size: 21px;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    font-family: Avenir Next,sans-serif;\n`\n\nexport const Code = styled.div`\n    grid-area: code;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    padding-left: 10px;\n    .code {\n            background-color: gray;\n            width: 60px;\n            height: 45px;\n            display: flex;\n            font-size: 25px;\n            \n            font-family: Avenir Next,sans-serif;\n            flex-direction: column;\n            justify-content: center;\n            vertical-align: middle;\n            text-align: center;\n            margin-left: 5px;\n        }\n`\nexport const Percentage = styled.div`\n    grid-area: percentage;\n    display: grid;\n    grid-template-rows: repeat(2, 1fr);\n    grid-gap: 1px;\n    grid-template-areas:\n        \"current\"\n        \"changed\";\n`\nexport const PercentageCurrent = styled.div`\n    grid-area: current;\n    font-size: 27px;\n    font-weight: bold;\n    font-family: Avenir Next,sans-serif;\n\n`\nexport const PercentageChanged = styled.div`\n    grid-area: changed;\n    margin-left: 40px;\n    font-weight: bold;\n    font-size: 20px;\n    font-family: Avenir Next,sans-serif;\n    color: ${props => props.value > 0 ? `red`: `green`};\n    padding-bottom: 5px;\n`\nexport const IndicatorUp = styled.div`\n    width: 0; \n    height: 0;\n    border-left: 30px solid transparent;\n    border-right: 30px solid transparent;\n    border-bottom: 30px solid red;\n    `\nexport const IndicatorDown = styled.div`\n\n    width: 0; \n    height: 0; \n    border-left: 30px solid transparent;\n    border-right: 30px solid transparent;\n    border-top: 30px solid green;\n`\n\nexport const IndicatorWrapper = styled.div`\n    grid-area: indicator;\n    display: grid;\n    flex-direction: column;\n    text-align: center;\n    vertical-align: middle;\n    justify-content: center;\n    margin: auto;\n    padding: auto;\n\n`\n","import React from 'react';\nimport AlertRowGraph from '../../components/AlertRowGraph';\nimport {\n    Wrapper,\n    Name,\n    Code,\n    Percentage,\n    IndicatorWrapper,\n    IndicatorUp,\n    IndicatorDown,\n    PercentageChanged,\n    PercentageCurrent } from './style';\n\n/**\n * Renders a given row in the alert & anomalies widget.\n */\nconst AlertRow = (props) =>  (\n    <Wrapper>\n        <Code><div className=\"code\">{props.code}</div></Code>\n        <Name>{props.name}</Name>\n        <Percentage>\n            <PercentageCurrent>{props.current}%</PercentageCurrent>\n            <PercentageChanged value={props.changed} >{props.changed}%</PercentageChanged>\n        </Percentage>\n        <IndicatorWrapper>\n        {props.changed > 0 ? <IndicatorUp /> : <IndicatorDown/>}\n        </IndicatorWrapper>\n        <AlertRowGraph data={props.recent_history} />\n    </Wrapper>\n)\n\nexport default AlertRow;","import styled from 'styled-components';\n\nexport const duration = 500;\nexport const transitionStyles = {\n    entering: { opacity: 0, Ypos: 500},\n    entered: { opacity: 1, Ypos: 0},\n    exited: { opacity: 0}\n};\nexport const Wrapper = styled.div`\n    border-radius: 15px;\n    border: 1px solid #eee;\n    opacity: ${props => props.opacity};\n    transition: ${props => `${props.duration}ms ease-in-out`};\n    transition-property: opacity, transform;\n    transform: ${props => `translateY(${props.Ypos}px)`};\n    background: white;\n    display: flex;\n    float: left;\n    vertical-align: middle;\n    flex-direction: column;\n    text-align: center;\n    grid-area: top-alerts;\n`\nexport const Header = styled.div`\n    font-size: 30px;\n    font-family: Avenir Next,sans-serif;\n    font-weight: bold;\n\n`","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport ShortedAPI from '../../services/sapi/client';\nimport AlertRow from '../../components/AlertRow';\nimport {\n    duration,\n    transitionStyles,\n    Wrapper,\n    Header } from './style';\n/**\n * Responsible for the rendering/display of \"alerts\" which represent anomalous changes in short positions for a given stock.\n */\nclass Alerts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new ShortedAPI()\n        this.state = {\n            data: this.apiClient.getTopAlerts(),\n            inside: false\n        }\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    \n    toggleEnterState() {\n        this.setState({ inside: true });\n    }\n\n    render() {\n        const alerts = this.state.data.alerts.map((alert) => <AlertRow key={alert.code} {...alert} />)\n        return (<Transition timeout={duration} in={true} appear={true}>\n            {\n                state => {\n                    return (\n                        <Wrapper\n                        duration={duration}\n                        {...transitionStyles[state]}\n                        >\n                            <Header>Alerts & Anomalies</Header>\n                            {alerts}\n                        </Wrapper>\n                    )\n                }\n            }\n        </Transition>)\n            }\n}\n\nexport default Alerts;","import styled from 'styled-components';\n\n\nexport const Wrapper = styled.div`\n    background: white;\n    border-radius: 15px;\n    display: block;\n    float: left;\n    verticle-align: middle;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n    grid-area: themepicker;\n`\nexport const Header = styled.div`\n    font-weight: bold;\n    font-size: 20px;\n    font-family: Avenir Next,sans-serif;\n`\nexport const ThemeItemWrapper = styled.div`\n    font-weight: bold;\n    font-size: 25px;\n    font-family: Avenir Next,sans-serif;\n    background-color: ${props => props.backgroundColor};\n    color: ${props => props.textColor};\n    margin: 7px;\n    border-radius: 20px;\n    border: solid 1px black;\n    width: 100px;\n    display: flex;\n    flex-direction: row;\n    justify-content:center;\n    text-align: center;\n`\nexport const ThemeItems = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content:center;\n    text-align: center;\n`","import React from 'react';\n\nimport { Wrapper, Header, ThemeItemWrapper, ThemeItems} from './style';\n\nconst ThemeItem = (props) => (\n    <ThemeItemWrapper {...props}>{props.name}</ThemeItemWrapper>\n)\n/**\n * Renders ThemePicker widget, allowing users to select between different theme modes\n */\nconst ThemePicker = (props) => (\n    <Wrapper>\n        <Header>Theme</Header>\n        <ThemeItems>{props.themes.map((theme) => <ThemeItem {...theme} key={theme.name}/>)}</ThemeItems>\n    </Wrapper>\n)\n\nexport default ThemePicker;","import styled from 'styled-components';\n\n\nexport const Wrapper = styled.div`\n    margin-top: 20px;\n    margin-bottom: 20px;\n    display: flex;\n    justify-content: center;\n    .buttons {\n        display: flex;\n    }\n`","import styled from 'styled-components';\n\n\nexport const Wrapper = styled.button`\n    width: 40px;\n    height: 40px;\n    display: flex;\n    justify-content: center; /* align horizontal */\n    align-items: center; /* align vertical */\n    margin: 5px;\n    border-radius: 7px;\n    color: white;\n    background: ${ props => props.selected ? `#3d1abd` : `#8361ff`};\n    outline:0;\n    font-size: 20px;\n    font-family: \"Avenir Next,Segoe UI\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n    font-weight: bold;\n`","import React from 'react';\nimport { Wrapper } from './style';\n\nconst Button = (props) => (\n    <Wrapper selected={props.selected} onClick={() => props.handleSelect(props.value)}>\n        {props.value}\n    </Wrapper>\n)\n\nexport default Button;","import React from 'react';\nimport { Wrapper } from './style';\nimport Button from '../Button';\n\n/**\n * WindowPicker\n * Responsible for providing a time window selector across a range of values including 1d, 1w, 1m, 1y etc.\n * will set the container state which will adjust the query. This will be set by a uni-directional handler passed\n * down as a prop.\n * \n */\n\nclass WindowPicker extends React.Component {\n\n    render() {\n        const { options, selectedOption, onSelect } = this.props;\n        console.log('selectedOption:'+selectedOption)\n        const buttons = options.values.map( value => (\n        <Button key={value} \n                value={value}\n                selected={ value === selectedOption }\n                handleSelect={onSelect}\n                />\n        ))\n        return (\n            <Wrapper>\n                <div className='buttons' >\n                    {buttons}\n                </div>\n            </Wrapper>\n        )\n    }\n}\n\nexport default WindowPicker;","import styled from 'styled-components';\n\n\nexport const DashboardWrapper = styled.div`\n    display: grid;\n    justify-content: center;\n    .content {\n        margin-top: 30px;\n        display: grid;\n        max-width: 1900px;\n        grid-gap: 20px;\n        grid-template-columns: repeat(4, 1fr);\n        grid-template-rows: 400px 400px 1fr 1fr;\n        grid-template-areas:\n            \"top-list top-graph top-graph top-right\"\n            \"top-list top-graph top-graph todo\"\n            \"top-list top-alerts top-alerts top-movers\"\n            \"top-list top-alerts top-alerts top-movers\"\n    }\n    .top-right {\n        grid-area: top-right;\n        display: grid;\n        grid-gap: 10px;\n        grid-template-rows: repeat(4, 80px);\n        grid-template-columns: 1fr;\n        grid-template-areas:\n            \"themepicker\"\n            \"legend\"\n            \"legend\"\n            \"legend\"\n            \"legend\"\n    }\n`\n\nexport const duration = 300;\n\nexport const transitionStyles = {\n  entering: { opacity: 0 },\n  entered: { opacity: 1 },\n  exited: { opacity: 0}\n};\n\nexport const themes = [\n    {\n        name: \"dark\",\n        textColor: \"#ffffff\",\n        backgroundColor: \"#000000\",\n    },\n    {\n        name: \"light\",\n        textColor: \"#000000\",\n        backgroundColor: \"#ffffff\",\n    }\n]","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport headerBackground from '../../assets/images/header-background.svg';\nimport AppViewWrapper from '../../components/AppViewWrapper';\n// import TopChart from '../../components/TopChart';\nimport TopChartVictory from '../../components/TopChartVictory';\nimport MoversList from '../../components/MoversList';\nimport TopShortsList from '../../components/TopShortsList';\nimport Legend from '../../components/Legend';\nimport Alerts from '../../components/Alerts';\nimport ThemePicker from '../../components/ThemePicker'\nimport WindowPicker from './../../components/WindowPicker';\nimport { DashboardWrapper, themes, duration, transitionStyles } from './style';\n\n\n/**\n * View:TopShorts\n * Overarching container for the top short view.\n * Showing the following key widgets/displays:\n *  * top 10 short positions graphically.\n *  * table of top short position changes\n *  * alerts/anomalies\n *  * reactive-widget on hover/select of a given graph\n * TODO:\n * * add Transitions of components such as window picker, graph and background etc.\n * * add graph integration via recharts etc.\n * * add legend component for on-select animation/effect\n * \n */\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: {\n                values: ['d', 'w', 'm', 'y'],\n            },\n            selectedOption: 'w',\n            selectedCode: false,\n            inside: false,\n        }\n    }\n    handleOptionSelected(value) {\n        this.setState({\n            selectedOption: value,\n        })\n    }\n    handleSelectCode(value) {\n        this.setState({\n            selectedCode: value\n        })\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    toggleEnterState() {\n        this.setState({ inside: true });\n    }\n\n    render() {\n        const { options, selectedOption, selectedCode } = this.state;\n        return (\n            <Transition timeout={duration} in={true} appear={true}>\n            {\n                state => {\n                    return (\n                    <AppViewWrapper\n                        background={headerBackground}\n                        duration={duration}\n                        {...transitionStyles[state]}\n                        >\n                        <DashboardWrapper>\n                            <div className=\"content\" >\n                                <TopShortsList />\n                                <TopChartVictory\n                                    picker={<WindowPicker\n                                        options={options}\n                                        selectedOption={selectedOption}\n                                        onSelect={(value) => this.handleOptionSelected(value)}\n                                        />\n                                    }\n                                    selectedOption={selectedOption}\n                                    onSelectCode={(value) => this.handleSelectCode(value)}\n                                />\n                                <div className=\"top-right\">\n                                    <ThemePicker themes={themes}/>\n                                    <Legend code={selectedCode}/>\n                                </div>\n                                <Alerts />\n                                <MoversList period={selectedOption} />\n                            </div>\n                        </DashboardWrapper>\n                    </AppViewWrapper>\n                    )\n                }\n            }\n            </Transition>\n            )\n            \n    }\n}\n\n\nexport default Dashboard;\n","import React from 'react';\nimport { injectGlobal } from 'styled-components';\nimport Dashboard from '../views/dashboard';\n\ninjectGlobal`\n  body {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    outline: 0;\n  }\n`;\n/**\n * IndexPage\n * Top level home-page, unifies all child views such as page1/page2/page3/page4 into a streamlined scroll experience etc.\n * \n */\nconst IndexPage = () => (\n  <Dashboard />\n);\n\nexport default IndexPage;\n"],"sourceRoot":""}