{"version":3,"sources":["webpack:///./src/components/TopChartVictory/style.js","webpack:///./src/components/TopChartVictory/index.jsx","webpack:///./src/components/MoversListRow/style.js","webpack:///./src/components/MoversListRow/index.jsx","webpack:///./src/components/MoversList/style.js","webpack:///./src/components/MoversList/index.jsx","webpack:///./src/components/TopShortsListRow/style.js","webpack:///./src/components/TopShortsListRow/index.jsx","webpack:///./src/components/TopShortsList/style.js","webpack:///./src/components/TopShortsList/index.jsx","webpack:///./src/components/LegendCompanyCode/style.js","webpack:///./src/components/LegendCompanyCode/index.jsx","webpack:///./src/components/LegendCompanyLogo/style.js","webpack:///./src/components/LegendCompanyLogo/index.jsx","webpack:///./src/components/LegendCompanyPE/style.js","webpack:///./src/components/LegendCompanyPE/index.jsx","webpack:///./src/components/LegendCompanyMarketCap/style.js","webpack:///./src/components/LegendCompanyMarketCap/index.jsx","webpack:///./src/components/Legend/style.js","webpack:///./src/components/Legend/index.jsx","webpack:///./src/components/AlertRowGraph/style.js","webpack:///./src/components/AlertRowGraph/index.jsx","webpack:///./src/components/AlertRow/style.js","webpack:///./src/components/AlertRow/index.jsx","webpack:///./src/components/Alerts/style.js","webpack:///./src/components/Alerts/index.jsx","webpack:///./src/components/ThemePicker/style.js","webpack:///./src/components/ThemePicker/index.jsx","webpack:///./src/components/WindowPicker/style.js","webpack:///./src/components/Button/style.js","webpack:///./src/components/Button/index.jsx","webpack:///./src/components/WindowPicker/index.jsx","webpack:///./src/components/ChartOptions/style.js","webpack:///./src/components/ChartOptions/index.jsx","webpack:///./src/views/dashboard/style.js","webpack:///./src/views/dashboard/index.jsx","webpack:///./src/pages/index.jsx"],"names":["transitionStyles","entering","opacity","Ypos","entered","exited","Wrapper","styled_components_browser_esm","a","div","withConfig","displayName","props","duration","ChartWrapper","PickerWrapper","OptionsWrapper","colors700","components_TopChartVictory","TopChartVictory","_this","_React$Component","call","this","apiClient","client","state","inside","componentDidMount","toggleEnterState","setState","n","handleLineHover","e","key","onSelectCode","render","_this2","selectedOption","fixtures","getTopShorts","lines","dataKeys","map","index","react_default","createElement","victory_line","data","x","y","events","target","eventHandlers","onMouseOver","style","stroke","strokeWidth","Transition_default","timeout","in","appear","Object","assign","picker","options","victory_chart","padding","top","left","right","bottom","height","containerComponent","victory_container","responsive","victory_axis","label","standalone","tickCount","axis","axisLabel","fontSize","fontFamily","ticks","size","tickLabels","dependentAxis","tickFormat","t","Math","round","tickLabelComponent","victory_label","textAnchor","domain","angle","Component","style_Wrapper","Name","Code","Percentage","PercentageCurrent","PercentageChanged","value","IndicatorUp","IndicatorDown","IndicatorWrapper","components_MoversListRow","className","code","name","current","change","style_transitionStyles","MoversList_style_Wrapper","Header","More","components_MoversList","MoversList","getMovers","rows","slice","row_data","TopShortsListRow_style_Wrapper","WrapperHovered","style_Name","style_Code","Percent","TopShortsListRow","isHovered","onHover","href","TopShortsList_style_transitionStyles","TopShortsList_style_Wrapper","style_Header","style_More","components_TopShortsList","TopShortsList","getTopShortsList","hovered","handleHover","handleMouseLeave","onMouseLeave","LegendCompanyCode_style_Wrapper","LegendCompanyCode_style_Code","LegendCompanyCode_style_Header","components_LegendCompanyCode","LegendCompanyLogo_style_Wrapper","Image","img","components_LegendCompanyLogo","src","logo","LegendCompanyPE_style_Wrapper","PE","LegendCompanyPE_style_Header","components_LegendCompanyPE","pe","LegendCompanyMarketCap_style_Wrapper","LegendCompanyMarketCap_style_Header","Chart","components_LegendCompanyMarketCap","LegendCompanyMarketCap","getTickValues","Date","text","fontWeight","width","getFullYear","Legend_style_transitionStyles","Legend_style_Wrapper","UnselectedWrapper","CompanySector","CompanyName","components_Legend","Legend","componentDidUpdate","prevProps","getStockSummary","getStockLogo","metadata","sector","marketCap","AlertRowGraph_style_Wrapper","components_AlertRowGraph","AlertRowGraph","console","log","victory_area","interpolation","fill","fillOpacity","AlertRow_style_Wrapper","AlertRow_style_Name","AlertRow_style_Code","style_Percentage","style_PercentageCurrent","style_PercentageChanged","style_IndicatorUp","style_IndicatorDown","style_IndicatorWrapper","components_AlertRow","changed","recent_history","Alerts_style_transitionStyles","Alerts_style_Wrapper","Alerts_style_Header","components_Alerts","Alerts","getTopAlerts","alerts","alert","ThemePicker_style_Wrapper","ThemePicker_style_Header","ThemeItemWrapper","backgroundColor","textColor","ThemeItems","ThemePicker_ThemeItem","components_ThemePicker","themes","theme","WindowPicker_style_Wrapper","Button_style_Wrapper","button","selected","components_Button","onClick","handleSelect","components_WindowPicker","_this$props","onSelect","buttons","values","ChartOptions_style_Wrapper","style_Button","style_OptionsWrapper","open","OptionHeader","radioStyle","display","lineHeight","margin","RadioButton","es_radio","Button","RadioGroup","Group","ChartOptions_Options","onChange","onOptionsChange","defaultValue","buttonStyle","components_ChartOptions","ChartOptions","prevState","handleOptionsChange","v","DashboardWrapper","dashboard_style_transitionStyles","dashboard","Dashboard","selectedCode","handleOptionSelected","handleSelectCode","_this$state","AppViewWrapper","background","header_background_default","period","b","injectGlobal","__webpack_exports__","default"],"mappings":"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","file":"component---src-pages-index-jsx-0a1e2a18520d4c47bd94.js","sourcesContent":["import styled from 'styled-components';\nexport const duration = 500;\nexport const transitionStyles = {\n  entering: { opacity: 0, Ypos: 500},\n  entered: { opacity: 1, Ypos: 0},\n  exited: { opacity: 0}\n};\n\nexport const Wrapper = styled.div`\n    grid-area: top-graph;\n    display: grid;\n    grid-template-rows: 60px 850px;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-areas:\n      \"none picker options\"\n      \"chart chart chart\";\n    opacity: ${props => props.opacity};\n    transition: ${props => `${props.duration}ms ease-in-out`};\n    transition-property: opacity, transform;\n    transform: ${props => `translateY(${props.Ypos}px)`};\n    max-width: 1200px;\n    background-color: white;\n    border-radius: 15px;\n    border: 1px solid #eee;\n`\nexport const ChartWrapper = styled.div`\n  grid-area: chart;\n`\nexport const PickerWrapper = styled.div`\n  grid-area: picker;\n  display: flex;\n  vertical-align: middle;\n  justify-content: center;\n`\nexport const OptionsWrapper = styled.div`\n  grid-area: options;\n  display: flex;\n  justify-content: flex-end;\n`\nexport const intervals = {\n  d: 2,  \n  w: 7,\n  m: 40,\n  y: 100\n\n  \n}\nexport const colors700 = [\n  \"#D32F2F\",\n  \"#303F9F\",\n  \"#00796B\",\n  \"#388E3C\",\n  \"#388E3C\",\n  \"#F57C00\",\n  \"#455A64\",\n  \"#5D4037\",\n  \"#C2185B\",\n  \"#7B1FA2\",\n  \"#00796B\",\n  \"#7B1FA2\",\n  \"#C2185B\"\n]\nexport const colors300 = [\n  \"#E57373\",\n  \"#F06292\",\n  \"#7986CB\",\n  \"#9575CD\",\n  \"#7986CB\",\n  \"#64B5F6\",\n  \"#F06292\",\n  \"#E57373\",\n  \"#FFB74D\",\n  \"#BCAAA4\",\n  \"#FFF176\"\n]","import React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryLabel, VictoryContainer, VictoryLine } from 'victory';\nimport Transition from 'react-transition-group/Transition';\nimport ShortedAPI from '../../services/sapi/client';\nimport {\n    duration,\n    transitionStyles,\n    Wrapper,\n    PickerWrapper,\n    ChartWrapper,\n    OptionsWrapper,\n    colors700 } from './style';\n/**\n * Chart\n * Component responsible for rendering the page1 graphic displaying the top short positions\n * TODO:\n *   * add more styling to graph currently nothing present\n *   * add more intelligent x-axis ticks as windowpicker is changed\n *   * refactor to use victory charts\n *   * multiple display modes such as candleStick etc.\n *   * implement brush and zoom\n *   * implement select to zoom\n *   * implement hover filtering/hiding other lines\n * \n * \n */\nclass TopChartVictory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new ShortedAPI()\n        this.state = {\n            inside: false,\n        }\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    \n    toggleEnterState() {\n        this.setState({ inside: true });\n    }\n    handleLineHover(e, key) {\n        this.props.onSelectCode(key)\n    }\n\n    render() {\n        const { selectedOption } = this.props;\n        const fixtures = this.apiClient.getTopShorts(selectedOption)\n        const lines = fixtures.dataKeys.map( (key, index) => <VictoryLine\n                key={key}\n                data={fixtures.data}\n                x=\"date\"\n                y={key}\n                events={\n                    [{\n                        target: \"parent\",\n                        eventHandlers: {\n                            onMouseOver: (e) => this.handleLineHover(e, key)\n                        }\n                    }]\n                }\n                style={{\n                    data: {\n                        stroke: colors700[index],\n                        strokeWidth: 2\n                    }\n                }} />)\n        return (\n        <Transition timeout={duration} in={true} appear={true}>\n            {\n                state => {\n                    return (\n                    <Wrapper\n                        duration={duration}\n                        {...transitionStyles[state]}\n                    >\n                    <PickerWrapper >\n                        {this.props.picker}\n                    </PickerWrapper>\n                    <OptionsWrapper>\n                        {this.props.options}\n                    </OptionsWrapper>\n                        <ChartWrapper >\n                            <VictoryChart padding={{ top: 0, left: 40, right: 20, bottom: 50 }} height={310}\n                            containerComponent={<VictoryContainer responsive={true}/>}\n                            >\n                                {lines}\n                                <VictoryAxis\n                                    label=\"Time\"\n                                    standalone={false}\n                                    tickCount={5}\n                                    style={{\n                                        axis: {stroke: \"#756f6a\"},\n                                        axisLabel: {fontSize: 12, padding: 25, fontFamily: 'Avenir Next,sans-serif'},\n                                        ticks: {stroke: \"grey\", size: 5},\n                                        tickLabels: {fontSize: 7, padding: 5}\n                                    }}\n                                />\n                                <VictoryAxis dependentAxis\n                                    tickFormat={(t) => `${Math.round(t)}`}\n                                    tickLabelComponent={<VictoryLabel textAnchor=\"middle\" />}\n                                    domain={[0, 100]}\n                                    label=\"Percentage Shorted\"\n                                    style={{\n                                        axisLabel: { fontSize: 12, padding: 32, angle: 90, fontFamily: 'Avenir Next,sans-serif'},\n                                        ticks: {stroke: \"grey\", size: 5},\n                                        tickLabels: {fontSize: 7,  angle: 90, padding: 7 } }} \n\n                                    />\n                            </VictoryChart>\n                        </ChartWrapper>\n                    </Wrapper>)\n                }\n            }\n        </Transition>\n        )\n    }\n}\n\nexport default TopChartVictory;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n    grid-template-rows: repeat(2, 1fr);\n    grid-template-areas:\n        \"code name name name percentage percentage indicator\"\n        \"code name name name  percentage percentage indicator\";\n    margin: 2px;\n    margin-left: 7px;\n    margin-right: 7px;\n    height: 65px;\n    background: #e2e2e2;\n    padding-top: 4px;\n    padding-bottom: 4px;\n`;\n\nexport const Name = styled.div`\n    grid-area: name;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n`\n\nexport const Code = styled.div`\n    grid-area: code;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    .code {\n            background-color: gray;\n            width: 60px;\n            height: 45px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            vertical-align: middle;\n            text-align: center;\n            margin-left: 5px;\n        }\n`\nexport const Percentage = styled.div`\n    grid-area: percentage;\n    display: grid;\n    grid-template-rows: repeat(2, 1fr);\n    grid-gap: 1px;\n    grid-template-areas:\n        \"current\"\n        \"changed\";\n`\nexport const PercentageCurrent = styled.div`\n    grid-area: current;\n    font-size: 22px;\n    font-weight: bold;\n    font-family: Avenir Next,sans-serif;\n\n`\nexport const PercentageChanged = styled.div`\n    grid-area: changed;\n    margin-left: 17px;\n    font-weight: bold;\n    font-family: Avenir Next,sans-serif;\n    color: ${props => props.value > 0 ? `red`: `green`};\n    padding-bottom: 10px;\n`\nexport const IndicatorUp = styled.div`\n    width: 0; \n    height: 0;\n    border-left: 30px solid transparent;\n    border-right: 30px solid transparent;\n    border-bottom: 30px solid red;\n    `\nexport const IndicatorDown = styled.div`\n\n    width: 0; \n    height: 0; \n    border-left: 30px solid transparent;\n    border-right: 30px solid transparent;\n    border-top: 30px solid green;\n`\n\nexport const IndicatorWrapper = styled.div`\n    grid-area: indicator;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    vertical-align: middle;\n    justify-content: center;\n    margin-right: 10px;\n\n`\n","import React from 'react';\n\nimport {\n    Wrapper,\n    Name,\n    Code,\n    Percentage,\n    IndicatorWrapper,\n    IndicatorUp,\n    IndicatorDown,\n    PercentageChanged,\n    PercentageCurrent } from './style';\n\n/**\n * Renders a given row in the alert & anomalies widget.\n */\nconst MoversListRow = (props) =>  (\n    <Wrapper>\n        <Code><div className=\"code\">{props.code}</div></Code>\n        <Name>{props.name}</Name>\n        <Percentage>\n            <PercentageCurrent>{props.current}%</PercentageCurrent>\n            <PercentageChanged value={props.change} >{props.change}%</PercentageChanged>\n        </Percentage>\n        <IndicatorWrapper>\n        {props.change > 0 ? <IndicatorUp /> : <IndicatorDown/>}\n        </IndicatorWrapper>\n    </Wrapper>\n)\n\nexport default MoversListRow;","import styled from 'styled-components';\n\nexport const duration = 500;\nexport const transitionStyles = {\n    entering: { opacity: 0, Ypos: 500},\n    entered: { opacity: 1, Ypos: 0},\n    exited: { opacity: 0}\n  };\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  grid-area: top-movers;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  border-radius: 15px;\n  border: 1px solid #eee;\n  opacity: ${props => props.opacity};\n  transition: ${props => `${props.duration}ms ease-in-out`};\n  transition-property: opacity, transform;\n  transform: ${props => `translateY(${props.Ypos}px)`};\n`\nexport const Header = styled.div`\n  height: 50px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 35px;\n  font-weight: bold;\n  font-family: Avenir Next,sans-serif;\n`\nexport const More = styled.div`\n  height: 50px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 35px;\n  font-weight: bold;\n  background: #dadada;\n  border-radius: 0 0 15px 15px;\n  margin: 4px;\n  justify-content: center;\n  font-family: Avenir Next,sans-serif;\n`","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport ShortedAPI from '../../services/sapi/client';\nimport MoversListRow from '../../components/MoversListRow';\nimport { Wrapper, Header, More, duration, transitionStyles } from './style';\n/**\n * Renders a list of TopShortsListRow components. These rows will display the stock code, stock name, and percentage shorted\n * for the top say 20 stocks. With a \"show more\" button present at the bottom, taking them to a different view which will me dedicated to showing more short position\n * information for more stocks (maybe top 100). Will perhaps a more verbose set of properties and graphics.\n */\nclass MoversList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.apiClient = new ShortedAPI()\n        this.state = {\n            data: this.apiClient.getMovers('m').data,\n            inside: false,\n        }\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    \n    toggleEnterState() {\n        this.setState({ inside: true });\n    }\n\n    render() {\n        const rows = this.state.data.slice(0,5).map((row_data) => <MoversListRow key={row_data.code} {...row_data} />)\n        return  (\n            <Transition timeout={duration} in={true} appear={true}>\n            {\n                state => {\n                    return (\n                    <Wrapper\n                        duration={duration}\n                        {...transitionStyles[state]}\n                    >\n                        <Header>Top Movers</Header>\n                        {rows}\n                        <More>show more</More>\n                    </Wrapper>\n                    )\n                }\n            }\n            </Transition>\n        )\n    }\n}\n\nexport default MoversList;","import styled from 'styled-components';\n\nexport const Wrapper = styled.a`\n    display: grid;\n    text-decoration: none;\n    color: inherit; \n    grid-template-columns: repeat(5, 1fr);\n    grid-template-areas:\n    \"code name name name percentage\";\n    margin: 4px;\n    margin-left: 7px;\n    margin-right: 4px;\n    height: 65px;\n    background: #dadada;\n    border-radius: 0 30px 30px 0;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    margin-bottom: 4px;\n`\nexport const WrapperHovered = styled.a`\n\n    display: grid;\n    text-decoration: none;\n    color: inherit;\n    z-index: 10;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-areas:\n    \"code name name name percentage\";\n    margin: 4px;\n    margin-left: 7px;\n    margin-right: 4px;\n    height: 65px;\n    background: #dadada;\n    border-radius: 0 15px 15px 0;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    margin-bottom: 6px;\n    -webkit-box-shadow: -3px 4px 7px 0px rgba(0,0,0,0.75);\n    -moz-box-shadow: -3px 4px 7px 0px rgba(0,0,0,0.75);\n    box-shadow: -3px 4px 7px 0px rgba(0,0,0,0.75);\n\n`\n\nexport const Name = styled.div`\n    grid-area: name;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n`\n\nexport const Code = styled.div`\ngrid-area: code;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nvertical-align: middle;\n.code {\n        background-color: gray;\n        width: 60px;\n        height: 45px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        vertical-align: middle;\n        text-align: center;\n        margin-left: 5px;\n    }\n`\n\nexport const Percent = styled.div`\ngrid-area: percentage;\nfloat: right;\nmargin-left: auto;\npadding-right: 5px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nvertical-align: middle;\n\n.circle {\n    background: #f98080;\n    height: 51px;\n    width: 51px;\n    border-radius: 50px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n    font-size: 12px;\n    font-weight: 400;\n}\n`","import React from 'react';\n\nimport {\n    Wrapper,\n    WrapperHovered,\n    Code,\n    Name,\n    Percent\n    } from './style';\n\n/**\n * Renders a specfiic row that is contained within the TopSHortList view. This will show\n * the current short percentage of a given stock within the top x number of short positions\n * takes a data prop which contains the following payload:\n * data = {\n *  name: \"JBHIFI LIMITED\",\n *  code: \"JBH\",\n *  percentage: 19.6\n * }\n */\n\nconst TopShortListRow = (props) => {\n    return (\n        props.isHovered ? (\n            <WrapperHovered {...props} onMouseOver={props.onHover} href={`/${props.code}`}>\n                <Code><div className=\"code\">{props.code}</div></Code>\n                <Name>{props.name}</Name>\n                <Percent><div className=\"circle\" >{props.current}%</div></Percent>\n            </WrapperHovered>) : (\n            <Wrapper {...props} onMouseOver={props.onHover} >\n                <Code><div className=\"code\">{props.code}</div></Code>\n                <Name>{props.name}</Name>\n                <Percent><div className=\"circle\" >{props.current}%</div></Percent>\n            </Wrapper>)\n    )\n}\n\nexport default TopShortListRow;","import styled from 'styled-components';\n\nexport const duration = 500;\nexport const transitionStyles = {\n    entering: { opacity: 0, Ypos: 500},\n    entered: { opacity: 1, Ypos: 0},\n    exited: { opacity: 0}\n  };\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  grid-area: top-list;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  border-radius: 15px;\n  border: 1px solid #eee;\n  opacity: ${props => props.opacity};\n  transition: ${props => `${props.duration}ms ease-in-out`};\n  transition-property: opacity, transform;\n  transform: ${props => `translateY(${props.Ypos}px)`};\n`\nexport const Header = styled.div`\n  height: 50px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 35px;\n  font-weight: bold;\n  font-family: Avenir Next,sans-serif;\n`\nexport const More = styled.div`\n  height: 50px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 35px;\n  font-weight: bold;\n  background: #dadada;\n  border-radius: 0 0 15px 15px;\n  margin: 4px;\n  justify-content: center;\n  font-family: Avenir Next,sans-serif;\n`","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport ShortedAPI from '../../services/sapi/client';\nimport TopShortsListRow from '../../components/TopShortsListRow';\nimport { Wrapper, Header, More, duration, transitionStyles } from './style';\n/**\n * Renders a list of TopShortsListRow components. These rows will display the stock code, stock name, and percentage shorted\n * for the top say 20 stocks. With a \"show more\" button present at the bottom, taking them to a different view which will me dedicated to showing more short position\n * information for more stocks (maybe top 100). Will perhaps a more verbose set of properties and graphics.\n * TODO: \n *  * load profile on select of a specific stock in list\n */\nclass TopShortsList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.apiClient = new ShortedAPI()\n        this.state = {\n            data: this.apiClient.getTopShortsList(20),\n            inside: false,\n            hovered: false,\n        }\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    \n    toggleEnterState() {\n        this.setState({ inside: true });\n    }\n    handleHover(value) {\n        this.setState({hovered: value})\n    }\n    handleMouseLeave() {\n        this.setState({\n            hovered: false,\n        })\n    }\n\n    render() {\n        const rows = this.state.data.map(\n            (row_data) => <TopShortsListRow\n                            isHovered={this.state.hovered === row_data.code}\n                            onHover={() => this.handleHover(row_data.code)}\n                            key={row_data.code}\n                            {...row_data} \n        />)\n        return  (\n            <Transition timeout={duration} in={true} appear={true}>\n            {\n                state => {\n                    return (\n                    <Wrapper\n                        onMouseLeave={() => this.handleMouseLeave() }\n                        duration={duration}\n                        {...transitionStyles[state]}\n                    >\n                        <Header>Top Short List</Header>\n                        {rows}\n                        <More>show more</More>\n                    </Wrapper>\n                    )\n                }\n            }\n            </Transition>\n        )\n    }\n}\n\nexport default TopShortsList;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    background: white;\n    grid-area: company-code;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n`\n\nexport const Code = styled.div`\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n    font-size: 22px;\n    font-weight: 600;\n    font-family: Avenir Next,sans-serif;\n`\nexport const Header  = styled.div`\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n    font-size: 15px;\n    font-weight: bold;\n    font-family: Avenir Next,sans-serif;\n`","import React from 'react';\nimport { Wrapper, Code, Header } from './style';\n\n\n/**\n * Renders a nicely styled and dynamically scaling header for the legend view which will display the company icon/logo \n * as well as its stock code.\n * \n */\nconst LegendCompanyCode = (props) => (\n  <Wrapper>\n    <Header>Issuer code</Header>\n    <Code>{props.code}</Code>\n  </Wrapper>\n)\nexport default LegendCompanyCode;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    vertical-align: middle;\n    justify-content: center;\n    grid-area: company-logo;\n`\nexport const Image = styled.img`\n    width: 60px;\n    height: 60px;\n    margin-left: auto;\n\tmargin-right: auto;\n\tdisplay: block;\n`","import React from 'react';\nimport { Wrapper, Image } from './style';\n\n\n/**\n * Renders a nicely styled and dynamically scaling header for the legend view which will display the company icon/logo \n * as well as its stock code.\n * \n */\nconst LegendCompanyLogo = (props) => (\n  <Wrapper >\n    <Image src={props.logo} />\n  </Wrapper>\n)\nexport default LegendCompanyLogo;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    vertical-align: middle;\n    justify-content: center;\n    background: white;\n    grid-area: company-pe;\n`\n\nexport const PE = styled.div`\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n    font-size: 22px;\n    font-weight: 600;\n    font-family: Avenir Next,sans-serif;\n`\nexport const Header  = styled.div`\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    text-align: center;\n    font-size: 15px;\n    font-weight: bold;\n    font-family: Avenir Next,sans-serif;\n`","import React from 'react';\nimport { Wrapper, Header, PE } from './style';\n\n\n/**\n * Renders a nicely styled and dynamically scaling header for the legend view which will display the company icon/logo \n * as well as its stock code.\n * \n */\nconst LegendCompanyPE = (props) => (\n  <Wrapper>\n    <Header>P/E ratio</Header>\n    <PE>{props.pe}</PE>\n  </Wrapper>\n)\nexport default LegendCompanyPE;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    grid-area: company-mc;\n    background: white;\n    display: grid;\n    height: 180px;\n    grid-template-rows: 30px 170px;\n    grid-template-areas:\n        \"header\"\n        \"chart\";\n`\nexport const Header = styled.div`\n    grid-area: header;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n`\nexport const Chart = styled.div`\n    grid-area: chart;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    height: 150px;\n`","import React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryLabel, VictoryContainer, VictoryLine } from 'victory';\n// import { LineChart, Line, ResponsiveContainer } from 'recharts';\nimport { Wrapper, Header, Chart } from './style';\n\n\n/**\n * LegendCompanyMarketCap\n * \n */\nclass LegendCompanyMarketCap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  getTickValues() {\n    return [\n      new Date(2002, 1, 1),\n      new Date(2017, 1, 1),\n      new Date(2018, 1, 1)\n    ]\n  }\n\n  render() {\n    // return (\n    //   <Wrapper>\n    //     <ResponsiveContainer width='100%' height={170}>\n    //       <LineChart height={100} data={this.props.data} margin={{top: 30, right: 20, left: 20, bottom: 30}}>\n    //         <Line dot={false} isAnimationActive={false} type='linear' dataKey='value' stroke='#8884d8' strokeWidth={2} />\n    //       </LineChart>\n    //     </ResponsiveContainer>\n    //   </Wrapper>\n    // );\n    return (\n      <Wrapper>\n        <Header>\n          <VictoryLabel\n            text=\"Market Cap\"\n            style={{ fontSize: 20, fontWeight: 'bold', fontFamily: 'Avenir Next,sans-serif' }}\n          />\n        </Header>\n        <Chart>\n        <VictoryChart padding={{ top: 0, left: 40, right: 20, bottom: 50 }} height={200} width={580}\n          containerComponent={<VictoryContainer responsive={true}/>}\n        >\n          <VictoryLine data={this.props.data} />\n          <VictoryAxis tickCount={5} tickFormat={ (x) => new Date(x).getFullYear() } />\n        </VictoryChart>\n        </Chart>\n      </Wrapper>\n    )\n  }\n}\n\nexport default LegendCompanyMarketCap;\n","import styled from 'styled-components';\n\nexport const duration = 500;\nexport const transitionStyles = {\n    entering: { opacity: 0, Ypos: 500},\n    entered: { opacity: 1, Ypos: 0},\n    exited: { opacity: 0}\n};\nexport const Wrapper = styled.div`\n    opacity: ${props => props.opacity};\n    transition: ${props => `${props.duration}ms ease-in-out`};\n    transition-property: opacity, transform;\n    transform: ${props => `translateY(${props.Ypos}px)`};\n    border-radius: 4px;\n    grid-area: legend;\n    display: grid;\n    grid-gap: 10px;\n    grid-template-rows: 60px 60px 60px 60px 170px;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-areas:\n        \"company-name company-name company-name company-name\"\n        \"company-logo company-logo company-code company-code\"\n        \"company-logo company-logo company-pe company-pe\"\n        \"company-sector company-sector company-sector company-sector\"\n        \"company-mc company-mc company-mc company-mc\";\n`\nexport const UnselectedWrapper = styled.div`\n    opacity: ${props => props.opacity};\n    transition: ${props => `${props.duration}ms ease-in-out`};\n    transition-property: opacity, transform;\n    transform: ${props => `translateY(${props.Ypos}px)`};\n    grid-area: legend;\n    display: flex;\n    flex-direction: column;\n    vertical-align: middle;\n    justify-content: center;\n    text-align: center;\n    background: white;\n    border-radius: 4px;\n    height: 100%;\n    font-family: Avenir Next,sans-serif;\n    font-size: 30px;\n    font-weight: bold;\n    padding-left: 30px;\n    padding-right: 30px;\n`\nexport const CompanyHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    vertical-align: middle;\n    justify-content: center;\n    grid-area: company-header;\n`\nexport const CompanyMarketCap = styled.div`\n    grid-area: company-mc;\n    display: flex;\n    flex-direction: column;\n    vertical-align: middle;\n\n\n`\nexport const CompanySector = styled.div`\n    grid-area: company-sector;\n    display: flex;\n    background: white;\n    font-size: 1.3vh;\n    font-weight: bold;\n    font-family: Avenir Next,sans-serif;\n    text-align: center;\n    flex-direction: column;\n    vertical-align: middle;\n    justify-content: center;\n`\nexport const CompanyName = styled.div`\n    grid-area: company-name;\n    display: flex;\n    background: white;\n    font-size: 1.3vh;\n    font-weight: bold;\n    font-family: Avenir Next,sans-serif;\n    text-align: center;\n    flex-direction: column;\n    vertical-align: middle;\n    justify-content: center;\n`\n\n","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport LegendCompanyCode from '../../components/LegendCompanyCode';\nimport LegendCompanyLogo from '../../components/LegendCompanyLogo';\nimport LegendCompanyPE from '../../components/LegendCompanyPE';\nimport LegendCompanyMarketCap from '../../components/LegendCompanyMarketCap';\nimport {\n    Wrapper,\n    duration,\n    transitionStyles,\n    UnselectedWrapper,\n    CompanyName,\n    CompanySector } from './style';\nimport ShortedAPI from '../../services/sapi/client';\n/**\n * Renders a shorted.com.au logo\n * TODO: add data fetch here, async or prefetch based of top-short positions\n */\nclass Legend extends React.Component {\n    constructor(props) {\n        super(props)\n        this.apiClient = new ShortedAPI()\n        this.state = {\n            inside: false,\n            code: false,\n        }\n    }\n    componentDidUpdate(prevProps) {\n        // You don't have to do this check first, but it can help prevent an unneeded render\n        if (prevProps.code !== this.props.code) {\n          this.setState({\n              code: this.props.code,\n              inside: false\n            });\n\n        }\n      }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    \n    toggleEnterState() {\n        this.setState({ inside: true });\n    }\n    render() {\n        const data = this.apiClient.getStockSummary(this.props.code)\n        const logo = this.apiClient.getStockLogo(this.props.code)\n        return (<Transition timeout={duration} in={true} appear={true}>\n        {\n            state => {\n                return (this.props.code ? (\n                    <Wrapper\n                        duration={duration}\n                        {...transitionStyles[state]}\n                    >\n                        <LegendCompanyLogo logo={logo} />\n                        <LegendCompanyCode code={this.props.code} />\n                        <LegendCompanyPE pe={data.data.PE} />\n                        <CompanyName>{data.metadata.name}</CompanyName>\n                        <CompanySector>{data.metadata.sector}</CompanySector>\n                        <LegendCompanyMarketCap data={data.data.marketCap} />\n                    </Wrapper>\n                    ) : (<UnselectedWrapper\n                            duration={duration}\n                            {...transitionStyles[state]}\n                        >\n                            <p>hover over graph to show profile</p>\n                        </UnselectedWrapper>))\n            }\n        }\n        </Transition>)\n    }\n}\n\nexport default Legend;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    grid-area: graph;\n    margin: 5px;\n    display: flex;\n    margin-right: 10px;\n    flex-direction:column;\n    text-align: center;\n    justify-content: center;\n    -webkit-box-shadow: 1px 1px 2px 0px rgba(181,181,181,1);\n    -moz-box-shadow: 1px 1px 2px 0px rgba(181,181,181,1);\n    box-shadow: 1px 1px 2px 0px rgba(181,181,181,1);\n\n`","import React from 'react';\nimport { VictoryChart, VictoryAxis, VictoryArea, VictoryContainer } from 'victory';\n// import { LineChart, Line, ResponsiveContainer } from 'recharts';\nimport { Wrapper } from './style';\n\n\n/**\n * LegendCompanyMarketCap\n * \n */\nclass AlertRowGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n    console.log(this.props)\n  }\n  getTickValues() {\n    return [\n      new Date(2002, 1, 1),\n      new Date(2017, 1, 1),\n      new Date(2018, 1, 1)\n    ]\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <VictoryChart padding={{ top: 0, left: 0, right: 0, bottom: 0 }} height={100} width={400}\n          containerComponent={<VictoryContainer responsive={true}/>}\n        >\n          <VictoryArea\n            interpolation=\"natural\"\n            style={{\n              data: {\n                fill: \"#c0caff\",\n                strokeWidth: 2,\n                fillOpacity: \"0.4\",\n                stroke: \"#8396ff\"\n                }\n            }}\n            data={this.props.data} />\n            <VictoryAxis tickFormat={() => ''} style={{ axis: {stroke: \"none\"} }} />\n        </VictoryChart>\n      </Wrapper>\n    )\n  }\n}\n\nexport default AlertRowGraph;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    grid-template-columns: 90px 250px 100px 100px 100px;\n    grid-template-rows: repeat(2, 1fr);\n    grid-template-areas:\n        \"code name name percentage indicator graph\"\n        \"code name name percentage indicator graph\";\n    margin: 6px;\n    margin-left: 7px;\n    margin-right: 7px;\n    height: 80px;\n    background: #e2e2e2;\n    padding-top: 4px;\n    padding-bottom: 4px;\n`;\n\nexport const Name = styled.div`\n    grid-area: name;\n    display: flex;\n    font-size: 21px;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    font-family: Avenir Next,sans-serif;\n`\n\nexport const Code = styled.div`\n    grid-area: code;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    vertical-align: middle;\n    padding-left: 10px;\n    .code {\n            background-color: gray;\n            width: 60px;\n            height: 45px;\n            display: flex;\n            font-size: 25px;\n            \n            font-family: Avenir Next,sans-serif;\n            flex-direction: column;\n            justify-content: center;\n            vertical-align: middle;\n            text-align: center;\n            margin-left: 5px;\n        }\n`\nexport const Percentage = styled.div`\n    grid-area: percentage;\n    display: grid;\n    grid-template-rows: repeat(2, 1fr);\n    grid-gap: 1px;\n    grid-template-areas:\n        \"current\"\n        \"changed\";\n`\nexport const PercentageCurrent = styled.div`\n    grid-area: current;\n    font-size: 27px;\n    font-weight: bold;\n    font-family: Avenir Next,sans-serif;\n\n`\nexport const PercentageChanged = styled.div`\n    grid-area: changed;\n    margin-left: 40px;\n    font-weight: bold;\n    font-size: 20px;\n    font-family: Avenir Next,sans-serif;\n    color: ${props => props.value > 0 ? `red`: `green`};\n    padding-bottom: 5px;\n`\nexport const IndicatorUp = styled.div`\n    width: 0; \n    height: 0;\n    border-left: 30px solid transparent;\n    border-right: 30px solid transparent;\n    border-bottom: 30px solid red;\n    `\nexport const IndicatorDown = styled.div`\n\n    width: 0; \n    height: 0; \n    border-left: 30px solid transparent;\n    border-right: 30px solid transparent;\n    border-top: 30px solid green;\n`\n\nexport const IndicatorWrapper = styled.div`\n    grid-area: indicator;\n    display: grid;\n    flex-direction: column;\n    text-align: center;\n    vertical-align: middle;\n    justify-content: center;\n    margin: auto;\n    padding: auto;\n\n`\n","import React from 'react';\nimport AlertRowGraph from '../../components/AlertRowGraph';\nimport {\n    Wrapper,\n    Name,\n    Code,\n    Percentage,\n    IndicatorWrapper,\n    IndicatorUp,\n    IndicatorDown,\n    PercentageChanged,\n    PercentageCurrent } from './style';\n\n/**\n * Renders a given row in the alert & anomalies widget.\n */\nconst AlertRow = (props) =>  (\n    <Wrapper>\n        <Code><div className=\"code\">{props.code}</div></Code>\n        <Name>{props.name}</Name>\n        <Percentage>\n            <PercentageCurrent>{props.current}%</PercentageCurrent>\n            <PercentageChanged value={props.changed} >{props.changed}%</PercentageChanged>\n        </Percentage>\n        <IndicatorWrapper>\n        {props.changed > 0 ? <IndicatorUp /> : <IndicatorDown/>}\n        </IndicatorWrapper>\n        <AlertRowGraph data={props.recent_history} />\n    </Wrapper>\n)\n\nexport default AlertRow;","import styled from 'styled-components';\n\nexport const duration = 500;\nexport const transitionStyles = {\n    entering: { opacity: 0, Ypos: 500},\n    entered: { opacity: 1, Ypos: 0},\n    exited: { opacity: 0}\n};\nexport const Wrapper = styled.div`\n    border-radius: 15px;\n    border: 1px solid #eee;\n    opacity: ${props => props.opacity};\n    transition: ${props => `${props.duration}ms ease-in-out`};\n    transition-property: opacity, transform;\n    transform: ${props => `translateY(${props.Ypos}px)`};\n    background: white;\n    display: flex;\n    float: left;\n    vertical-align: middle;\n    flex-direction: column;\n    text-align: center;\n    grid-area: top-alerts;\n`\nexport const Header = styled.div`\n    font-size: 30px;\n    font-family: Avenir Next,sans-serif;\n    font-weight: bold;\n\n`","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport ShortedAPI from '../../services/sapi/client';\nimport AlertRow from '../../components/AlertRow';\nimport {\n    duration,\n    transitionStyles,\n    Wrapper,\n    Header } from './style';\n/**\n * Responsible for the rendering/display of \"alerts\" which represent anomalous changes in short positions for a given stock.\n */\nclass Alerts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new ShortedAPI()\n        this.state = {\n            data: this.apiClient.getTopAlerts(),\n            inside: false\n        }\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    \n    toggleEnterState() {\n        this.setState({ inside: true });\n    }\n\n    render() {\n        const alerts = this.state.data.alerts.map((alert) => <AlertRow key={alert.code} {...alert} />)\n        return (<Transition timeout={duration} in={true} appear={true}>\n            {\n                state => {\n                    return (\n                        <Wrapper\n                        duration={duration}\n                        {...transitionStyles[state]}\n                        >\n                            <Header>Alerts & Anomalies</Header>\n                            {alerts}\n                        </Wrapper>\n                    )\n                }\n            }\n        </Transition>)\n            }\n}\n\nexport default Alerts;","import styled from 'styled-components';\n\n\nexport const Wrapper = styled.div`\n    background: white;\n    border-radius: 15px;\n    display: block;\n    float: left;\n    verticle-align: middle;\n    flex-direction: row;\n    justify-content: center;\n    text-align: center;\n    grid-area: themepicker;\n`\nexport const Header = styled.div`\n    font-weight: bold;\n    font-size: 20px;\n    font-family: Avenir Next,sans-serif;\n`\nexport const ThemeItemWrapper = styled.div`\n    font-weight: bold;\n    font-size: 25px;\n    font-family: Avenir Next,sans-serif;\n    background-color: ${props => props.backgroundColor};\n    color: ${props => props.textColor};\n    margin: 7px;\n    border-radius: 20px;\n    border: solid 1px black;\n    width: 100px;\n    display: flex;\n    flex-direction: row;\n    justify-content:center;\n    text-align: center;\n`\nexport const ThemeItems = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content:center;\n    text-align: center;\n`","import React from 'react';\n\nimport { Wrapper, Header, ThemeItemWrapper, ThemeItems} from './style';\n\nconst ThemeItem = (props) => (\n    <ThemeItemWrapper {...props}>{props.name}</ThemeItemWrapper>\n)\n/**\n * Renders ThemePicker widget, allowing users to select between different theme modes\n */\nconst ThemePicker = (props) => (\n    <Wrapper>\n        <Header>Theme</Header>\n        <ThemeItems>{props.themes.map((theme) => <ThemeItem {...theme} key={theme.name}/>)}</ThemeItems>\n    </Wrapper>\n)\n\nexport default ThemePicker;","import styled from 'styled-components';\n\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    vertical-align: middle;\n    align-self: center;\n    justify-self: center;\n    .buttons {\n        display: flex;\n        align-self: center;\n        justify-self: center;\n    }\n`","import styled from 'styled-components';\n\n\nexport const Wrapper = styled.button`\n    width: 40px;\n    height: 40px;\n    display: flex;\n    justify-content: center; /* align horizontal */\n    align-items: center; /* align vertical */\n    margin: 5px;\n    border-radius: 7px;\n    color: white;\n    background: ${ props => props.selected ? `#3d1abd` : `#8361ff`};\n    outline:0;\n    font-size: 20px;\n    font-family: \"Avenir Next,Segoe UI\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n    font-weight: bold;\n`","import React from 'react';\nimport { Wrapper } from './style';\n\nconst Button = (props) => (\n    <Wrapper selected={props.selected} onClick={() => props.handleSelect(props.value)}>\n        {props.value}\n    </Wrapper>\n)\n\nexport default Button;","import React from 'react';\nimport { Wrapper } from './style';\nimport Button from '../Button';\n\n/**\n * WindowPicker\n * Responsible for providing a time window selector across a range of values including 1d, 1w, 1m, 1y etc.\n * will set the container state which will adjust the query. This will be set by a uni-directional handler passed\n * down as a prop.\n * \n */\n\nclass WindowPicker extends React.Component {\n\n    render() {\n        const { options, selectedOption, onSelect } = this.props;\n        console.log('selectedOption:'+selectedOption)\n        const buttons = options.values.map( value => (\n        <Button key={value} \n                value={value}\n                selected={ value === selectedOption }\n                handleSelect={onSelect}\n                />\n        ))\n        return (\n            <Wrapper>\n                <div className='buttons' >\n                    {buttons}\n                </div>\n            </Wrapper>\n        )\n    }\n}\n\nexport default WindowPicker;","import styled from 'styled-components';\n\n\n//dropdown wrapper\nexport const Wrapper = styled.div`\nmargin-top: auto;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: 10px;\ndisplay: inline-block;\nposition: relative;\n`;\nexport const Button = styled.div`\n    background: black;\n    width: 30px;\n    height: 30px;\n    display: inline-block;\n    position: relative;\n`;\n// dropdown-content\nexport const OptionsWrapper = styled.div`\n    padding: 5px;\n    display: ${props => props.open ? `flex` : `none`};\n    position: absolute;\n    z-index: 1;\n    background: white;\n    right: 0;\n    border-radius: 15px;\n    border: 1px solid #eee;\n    min-width: 160px;\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n    flex-direction: column;\n    text-align: center;\n    align-items: center;\n    .chart-modes {\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n        width: 130px;\n\n    }\n`;\nexport const Option = styled.div`\n    font-size: 15px;\n    font-family: Avenir Next,sans-serif;\n    font-weight: 300;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n\n`;\nexport const OptionHeader = styled.div`\n    font-size: 20px;\n    font-family: Avenir Next,sans-serif;\n    font-weight: bold;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n`;\n\nexport const OptionWrapper = styled.div`\n`;\n\nexport const radioStyle = {\n    display: 'block',\n    height: '30px',\n    lineHeight: '30px',\n    margin: 4\n};","import React from 'react';\nimport { Radio } from 'antd';\nimport 'antd/dist/antd.css';\nimport {\n    Button,\n    OptionsWrapper,\n    Option,\n    OptionHeader,\n    Wrapper,\n    radioStyle,\n    } from './style';\n\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\n\n\nconst Options = (props) => (<OptionsWrapper {...props}>\n    <OptionHeader>Chart display</OptionHeader>\n    <div className=\"chart-modes\">\n        <RadioGroup onChange={props.onOptionsChange} defaultValue=\"a\" buttonStyle=\"solid\">\n            <RadioButton style={radioStyle} value=\"a\">Normal</RadioButton>\n            <RadioButton style={radioStyle} value=\"b\">CandleStick</RadioButton>\n            <RadioButton style={radioStyle} value=\"c\">Smoothed</RadioButton>\n            <RadioButton style={radioStyle} value=\"d\">Area</RadioButton>\n        </RadioGroup>\n      </div>\n</OptionsWrapper>)\nclass ChartOptions extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: false,\n        }\n    }\n    handleSelect() {\n        this.setState(prevState => ({\n            open: !prevState.open\n        }))\n    }\n    handleOptionsChange(e, v) {\n        console.log(e,v)\n    }\n\n    render() {\n        return (<Wrapper>\n            <Button onClick={() => this.handleSelect()} >   \n            </Button>\n            <Options onOptionsChange={(e,v) => this.handleOptionsChange(e,v)} open={this.state.open} />\n            </Wrapper>\n        )\n    }\n}\n\nexport default ChartOptions;","import styled from 'styled-components';\n\n\nexport const DashboardWrapper = styled.div`\n    display: grid;\n    justify-content: center;\n    .content {\n        margin-top: 30px;\n        display: grid;\n        max-width: 1900px;\n        grid-gap: 20px;\n        grid-template-columns: repeat(4, 1fr);\n        grid-template-rows: 400px 400px 1fr 1fr;\n        grid-template-areas:\n            \"top-list top-graph top-graph top-right\"\n            \"top-list top-graph top-graph todo\"\n            \"top-list top-alerts top-alerts top-movers\"\n            \"top-list top-alerts top-alerts top-movers\"\n    }\n    .top-right {\n        grid-area: top-right;\n        display: grid;\n        grid-gap: 10px;\n        grid-template-rows: repeat(4, 80px);\n        grid-template-columns: 1fr;\n        grid-template-areas:\n            \"themepicker\"\n            \"legend\"\n            \"legend\"\n            \"legend\"\n            \"legend\"\n    }\n`\n\nexport const duration = 300;\n\nexport const transitionStyles = {\n  entering: { opacity: 0 },\n  entered: { opacity: 1 },\n  exited: { opacity: 0}\n};\n\nexport const themes = [\n    {\n        name: \"dark\",\n        textColor: \"#ffffff\",\n        backgroundColor: \"#000000\",\n    },\n    {\n        name: \"light\",\n        textColor: \"#000000\",\n        backgroundColor: \"#ffffff\",\n    }\n]","import React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport headerBackground from '../../assets/images/header-background.svg';\nimport AppViewWrapper from '../../components/AppViewWrapper';\n// import TopChart from '../../components/TopChart';\nimport TopChartVictory from '../../components/TopChartVictory';\nimport MoversList from '../../components/MoversList';\nimport TopShortsList from '../../components/TopShortsList';\nimport Legend from '../../components/Legend';\nimport Alerts from '../../components/Alerts';\nimport ThemePicker from '../../components/ThemePicker'\nimport WindowPicker from './../../components/WindowPicker';\nimport ChartOptions from '../../components/ChartOptions';\nimport { DashboardWrapper, themes, duration, transitionStyles } from './style';\n\n\n/**\n * View:TopShorts\n * Overarching container for the top short view.\n * Showing the following key widgets/displays:\n *  * top 10 short positions graphically.\n *  * table of top short position changes\n *  * alerts/anomalies\n *  * reactive-widget on hover/select of a given graph\n * TODO:\n * * add Transitions of components such as window picker, graph and background etc.\n * * add graph integration via recharts etc.\n * * add legend component for on-select animation/effect\n * \n */\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: {\n                values: ['d', 'w', 'm', 'y'],\n            },\n            selectedOption: 'w',\n            selectedCode: false,\n            inside: false,\n        }\n    }\n    handleOptionSelected(value) {\n        this.setState({\n            selectedOption: value,\n        })\n    }\n    handleSelectCode(value) {\n        this.setState({\n            selectedCode: value\n        })\n    }\n    componentDidMount() {\n        this.toggleEnterState();\n    }\n    toggleEnterState() {\n        this.setState({ inside: true });\n    }\n\n    render() {\n        const { options, selectedOption, selectedCode } = this.state;\n        return (\n            <Transition timeout={duration} in={true} appear={true}>\n            {\n                state => {\n                    return (\n                    <AppViewWrapper\n                        background={headerBackground}\n                        duration={duration}\n                        {...transitionStyles[state]}\n                        >\n                        <DashboardWrapper>\n                            <div className=\"content\" >\n                                <TopShortsList />\n                                <TopChartVictory\n                                    picker={<WindowPicker\n                                        options={options}\n                                        selectedOption={selectedOption}\n                                        onSelect={(value) => this.handleOptionSelected(value)}\n                                        />\n                                    }\n                                    options={\n                                        <ChartOptions />\n                                    }\n                                    selectedOption={selectedOption}\n                                    onSelectCode={(value) => this.handleSelectCode(value)}\n                                />\n                                <div className=\"top-right\">\n                                    <ThemePicker themes={themes}/>\n                                    <Legend code={selectedCode}/>\n                                </div>\n                                <Alerts />\n                                <MoversList period={selectedOption} />\n                            </div>\n                        </DashboardWrapper>\n                    </AppViewWrapper>\n                    )\n                }\n            }\n            </Transition>\n            )\n            \n    }\n}\n\n\nexport default Dashboard;\n","import React from 'react';\nimport { injectGlobal } from 'styled-components';\nimport Dashboard from '../views/dashboard';\n\ninjectGlobal`\n  body {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    outline: 0;\n  }\n`;\n/**\n * IndexPage\n * Top level home-page, unifies all child views such as page1/page2/page3/page4 into a streamlined scroll experience etc.\n * \n */\nconst IndexPage = () => (\n  <Dashboard />\n);\n\nexport default IndexPage;\n"],"sourceRoot":""}