// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: shorted/collector/v1/collector_service.proto

package collector

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ------------ GET ------------
type GetSourceRequest struct {
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// if not provided we can attempt to discover the format from the given URL
	Format               Format   `protobuf:"varint,2,opt,name=format,proto3,enum=shorted.collector.v1.Format" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSourceRequest) Reset()         { *m = GetSourceRequest{} }
func (m *GetSourceRequest) String() string { return proto.CompactTextString(m) }
func (*GetSourceRequest) ProtoMessage()    {}
func (*GetSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58426e671b099811, []int{0}
}
func (m *GetSourceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetSourceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSourceRequest.Merge(m, src)
}
func (m *GetSourceRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSourceRequest proto.InternalMessageInfo

func (m *GetSourceRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *GetSourceRequest) GetFormat() Format {
	if m != nil {
		return m.Format
	}
	return Format_JSON
}

type GetSourceResponse struct {
	Result               *SourceDetails `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetSourceResponse) Reset()         { *m = GetSourceResponse{} }
func (m *GetSourceResponse) String() string { return proto.CompactTextString(m) }
func (*GetSourceResponse) ProtoMessage()    {}
func (*GetSourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58426e671b099811, []int{1}
}
func (m *GetSourceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetSourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetSourceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetSourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSourceResponse.Merge(m, src)
}
func (m *GetSourceResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetSourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSourceResponse proto.InternalMessageInfo

func (m *GetSourceResponse) GetResult() *SourceDetails {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*GetSourceRequest)(nil), "shorted.collector.v1.GetSourceRequest")
	proto.RegisterType((*GetSourceResponse)(nil), "shorted.collector.v1.GetSourceResponse")
}

func init() {
	proto.RegisterFile("shorted/collector/v1/collector_service.proto", fileDescriptor_58426e671b099811)
}

var fileDescriptor_58426e671b099811 = []byte{
	// 449 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x4f, 0x6b, 0xd4, 0x40,
	0x18, 0xc6, 0x9d, 0x2c, 0x5d, 0xec, 0x88, 0xa5, 0x1d, 0xca, 0x5a, 0x96, 0x65, 0x59, 0x56, 0xd1,
	0x52, 0xda, 0x19, 0xb3, 0x7a, 0x6a, 0xbd, 0x74, 0x15, 0xc5, 0x83, 0xb0, 0x24, 0x50, 0xff, 0x50,
	0x90, 0xe9, 0xec, 0x6b, 0x12, 0xc8, 0x66, 0xe2, 0xcc, 0x24, 0x05, 0x8f, 0x7e, 0x00, 0x11, 0xbd,
	0x78, 0xf6, 0xe8, 0x27, 0x11, 0x4f, 0x82, 0x5f, 0x40, 0xa2, 0x9f, 0xc2, 0x93, 0x6c, 0x92, 0x9d,
	0x5d, 0x24, 0xd8, 0x53, 0x66, 0xde, 0xfc, 0x9e, 0xf7, 0x79, 0x67, 0x9e, 0xc1, 0xfb, 0x3a, 0x94,
	0xca, 0xc0, 0x94, 0x09, 0x19, 0xc7, 0x20, 0x8c, 0x54, 0x2c, 0x77, 0x97, 0x9b, 0x97, 0x1a, 0x54,
	0x1e, 0x09, 0xa0, 0xa9, 0x92, 0x46, 0x92, 0xed, 0x9a, 0xa6, 0x16, 0xa0, 0xb9, 0xdb, 0xed, 0x05,
	0x52, 0x06, 0x31, 0x30, 0x9e, 0x46, 0x8c, 0x27, 0x89, 0x34, 0xdc, 0x44, 0x32, 0xd1, 0x95, 0xa6,
	0x7b, 0x2d, 0xe7, 0x71, 0x34, 0xe5, 0x06, 0xd8, 0x62, 0x51, 0xff, 0xd8, 0x2f, 0x3f, 0xe2, 0x20,
	0x80, 0xe4, 0x40, 0x9f, 0xf3, 0x20, 0x00, 0xc5, 0x64, 0x5a, 0x4a, 0x1b, 0xda, 0xdc, 0xf8, 0xff,
	0xa0, 0x15, 0x35, 0x9c, 0xe2, 0xcd, 0x47, 0x60, 0x7c, 0x99, 0x29, 0x01, 0x1e, 0xbc, 0xce, 0x40,
	0x1b, 0xd2, 0xc5, 0xad, 0x4c, 0xc5, 0x3b, 0x68, 0x80, 0x76, 0xd7, 0xc7, 0x97, 0xff, 0x8c, 0xd7,
	0x54, 0xeb, 0x3d, 0x42, 0xde, 0xbc, 0x48, 0xee, 0xe2, 0xf6, 0x2b, 0xa9, 0x66, 0xdc, 0xec, 0x38,
	0x03, 0xb4, 0xbb, 0x31, 0xea, 0xd1, 0xa6, 0x13, 0xd2, 0x87, 0x25, 0xe3, 0xd5, 0xec, 0x70, 0x82,
	0xb7, 0x56, 0x5c, 0x74, 0x2a, 0x13, 0x0d, 0xe4, 0x08, 0xb7, 0x15, 0xe8, 0x2c, 0x36, 0xa5, 0xd3,
	0x95, 0xd1, 0xf5, 0xe6, 0x56, 0x95, 0xea, 0x01, 0x18, 0x1e, 0xc5, 0xda, 0xab, 0x25, 0xa3, 0x77,
	0x08, 0x6f, 0xde, 0x5f, 0x60, 0x7e, 0x75, 0xe7, 0xe4, 0x0d, 0x5e, 0xb7, 0x36, 0xe4, 0x66, 0x73,
	0xbb, 0x7f, 0x4f, 0xdb, 0xbd, 0x75, 0x21, 0x57, 0xcd, 0x3b, 0xec, 0xbd, 0xfd, 0xf1, 0xfb, 0xa3,
	0xd3, 0x19, 0x6e, 0x95, 0xb9, 0xad, 0xde, 0xe5, 0x21, 0xda, 0x1b, 0x17, 0xe8, 0xc3, 0xf1, 0x73,
	0xb2, 0x36, 0x6a, 0xb9, 0xf4, 0xf6, 0x1e, 0x72, 0xd4, 0x13, 0x7c, 0xd5, 0xce, 0x37, 0x38, 0x9e,
	0x3c, 0x26, 0xf7, 0x42, 0x63, 0x52, 0x7d, 0xc8, 0x58, 0x10, 0x99, 0x30, 0x3b, 0xa3, 0x42, 0xce,
	0x58, 0xed, 0xcc, 0xd3, 0x74, 0xb1, 0x5c, 0x96, 0x22, 0xcd, 0xce, 0xb9, 0x11, 0x21, 0xcc, 0x73,
	0xfb, 0x5a, 0xf4, 0xd1, 0xf7, 0xa2, 0x8f, 0x7e, 0x16, 0x7d, 0xf4, 0xe9, 0x57, 0xff, 0x12, 0xee,
	0x08, 0x39, 0xb3, 0x83, 0xd7, 0x1c, 0xcd, 0xdd, 0xf1, 0x86, 0x35, 0x9d, 0xcc, 0xf3, 0x9d, 0xa0,
	0x17, 0x9d, 0xd5, 0xfc, 0x8f, 0xec, 0xe6, 0xb3, 0xd3, 0xf2, 0x9f, 0x3e, 0xfb, 0xe2, 0x6c, 0xfb,
	0x75, 0x13, 0x2b, 0xa4, 0x27, 0xee, 0x37, 0x5b, 0x3e, 0xb5, 0xe5, 0xd3, 0x13, 0xf7, 0xac, 0x5d,
	0x3e, 0x9a, 0x3b, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x25, 0x88, 0x67, 0x5f, 0x05, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CollectorServiceClient is the client API for CollectorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CollectorServiceClient interface {
	// A unary RPC used to collect a source
	GetSource(ctx context.Context, in *GetSourceRequest, opts ...grpc.CallOption) (*GetSourceResponse, error)
}

type collectorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCollectorServiceClient(cc *grpc.ClientConn) CollectorServiceClient {
	return &collectorServiceClient{cc}
}

func (c *collectorServiceClient) GetSource(ctx context.Context, in *GetSourceRequest, opts ...grpc.CallOption) (*GetSourceResponse, error) {
	out := new(GetSourceResponse)
	err := c.cc.Invoke(ctx, "/shorted.collector.v1.CollectorService/GetSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CollectorServiceServer is the server API for CollectorService service.
type CollectorServiceServer interface {
	// A unary RPC used to collect a source
	GetSource(context.Context, *GetSourceRequest) (*GetSourceResponse, error)
}

// UnimplementedCollectorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCollectorServiceServer struct {
}

func (*UnimplementedCollectorServiceServer) GetSource(ctx context.Context, req *GetSourceRequest) (*GetSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSource not implemented")
}

func RegisterCollectorServiceServer(s *grpc.Server, srv CollectorServiceServer) {
	s.RegisterService(&_CollectorService_serviceDesc, srv)
}

func _CollectorService_GetSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServiceServer).GetSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shorted.collector.v1.CollectorService/GetSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServiceServer).GetSource(ctx, req.(*GetSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CollectorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shorted.collector.v1.CollectorService",
	HandlerType: (*CollectorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSource",
			Handler:    _CollectorService_GetSource_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shorted/collector/v1/collector_service.proto",
}

func (m *GetSourceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetSourceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSourceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Format != 0 {
		i = encodeVarintCollectorService(dAtA, i, uint64(m.Format))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintCollectorService(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetSourceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetSourceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSourceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCollectorService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintCollectorService(dAtA []byte, offset int, v uint64) int {
	offset -= sovCollectorService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetSourceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovCollectorService(uint64(l))
	}
	if m.Format != 0 {
		n += 1 + sovCollectorService(uint64(m.Format))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetSourceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovCollectorService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovCollectorService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCollectorService(x uint64) (n int) {
	return sovCollectorService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetSourceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetSourceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetSourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCollectorService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Format", wireType)
			}
			m.Format = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Format |= Format(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCollectorService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCollectorService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetSourceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCollectorService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetSourceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetSourceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCollectorService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCollectorService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCollectorService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &SourceDetails{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCollectorService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCollectorService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCollectorService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCollectorService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCollectorService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCollectorService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCollectorService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCollectorService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCollectorService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCollectorService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCollectorService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCollectorService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCollectorService = fmt.Errorf("proto: unexpected end of group")
)
